Terminais sem uso na gramática

    FACT_OP
    L_BRACKET
    R_BRACKET
    CONTINUE
    CONSTANT
    RETURN
    EOL
    ADDRESS
    DOT
    MALLOC_OP
    FREE_OP
    CALLOC_OP


Estado 42 conflitos: 2 de redução/redução
Estado 52 conflitos: 1 de deslocamento/redução


Gramática

    0 $accept: program $end

    1 program: stm_list

    2 stm_list: stm
    3         | stm stm_list

    4 stm: decl SEMICOLON
    5    | cond_stm
    6    | loop_stm
    7    | fun_struct
    8    | print_stm SEMICOLON
    9    | expres_list SEMICOLON
   10    | assingment SEMICOLON
   11    | initialization SEMICOLON

   12 decl: type id_list

   13 assingment: IDENTIFIER ASSINGMENT expr

   14 initialization: type IDENTIFIER ASSINGMENT expr

   15 print_stm: PRINT L_PARENTHESIS literal_string R_PARENTHESIS
   16          | PRINT L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS
   17          | PRINTF L_PARENTHESIS literal_string R_PARENTHESIS
   18          | PRINTF L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS

   19 id_list: IDENTIFIER
   20        | IDENTIFIER COMMA id_list

   21 expres_list: expr SEMICOLON
   22            | expr SEMICOLON expres_list

   23 expr: log_expr
   24     | arit_expr

   25 cond_stm: if_struct
   26         | switch_struct

   27 if_struct: IF_STM L_PARENTHESIS log_expr R_PARENTHESIS block else_struct

   28 else_struct: %empty
   29            | elseif_list ELSE_STM block

   30 elseif_list: %empty
   31            | elseif_struct elseif_list

   32 elseif_struct: ELSE_IF_STM L_PARENTHESIS log_expr R_PARENTHESIS block

   33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

   34 case_list_switch: %empty
   35                 | case_switch case_list_switch

   36 case_switch: CASE literal_term DOUBLE_DOT stm_list BREAK SEMICOLON

   37 loop_stm: while_struct
   38         | for_struct

   39 while_struct: WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS block
   40             | DO_STM block WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS SEMICOLON

   41 $@1: %empty

   42 $@2: %empty

   43 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 block

   44 for_struct_stm: arit_expr
   45               | assingment

   46 fun_struct: type IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS L_KEY stm_list R_KEY

   47 $@3: %empty

   48 block: L_KEY $@3 stm_list R_KEY

   49 type: VOID_TYPE
   50     | INT_TYPE
   51     | FLOAT_TYPE
   52     | DOUBLE_TYPE
   53     | CHAR_TYPE
   54     | STRING_TYPE
   55     | BOOLEAN_TYPE
   56     | MATRIZ_TYPE

   57 par_list: %empty
   58         | par_term
   59         | par_term COMMA par_list

   60 par_term: type IDENTIFIER

   61 arit_expr: arit_expr_base
   62          | arit_expr PLUS_OP arit_expr_base
   63          | arit_expr SUB_OP arit_expr_base
   64          | arit_expr DIV_OP arit_expr_base
   65          | arit_expr STAR arit_expr_base
   66          | arit_expr MOD_OP arit_expr_base
   67          | arit_expr INC_OP
   68          | arit_expr DEC_OP

   69 arit_expr_base: term
   70               | L_PARENTHESIS arit_expr R_PARENTHESIS

   71 log_expr: comp_expr
   72         | L_PARENTHESIS log_expr R_PARENTHESIS
   73         | log_expr op_log comp_expr

   74 comp_expr: arit_expr
   75          | comp_expr op_comp arit_expr
   76          | literal_string EQ_OP literal_string
   77          | literal_string NE_OP literal_string

   78 op_log: AND_OP
   79       | OR_OP
   80       | NOT_OP

   81 op_comp: SE_OP
   82        | S_OP
   83        | GE_OP
   84        | G_OP
   85        | EQ_OP
   86        | NE_OP

   87 term: term_num
   88     | log_term
   89     | IDENTIFIER

   90 term_num: LITERAL_INT
   91         | LITERAL_FLOAT
   92         | LITERAL_DOUBLE

   93 log_term: TRUE_VAL
   94         | FALSE_VAL

   95 literal_term: term
   96             | literal_string

   97 literal_string: LITERAL_CHAR
   98               | LITERAL_STRING


Terminais, com as regras onde eles aparecem

    $end (0) 0
    error (256)
    LITERAL_STRING <sValue> (258) 98
    IDENTIFIER <sValue> (259) 13 14 19 20 46 60 89
    INT_TYPE <sValue> (260) 50
    FLOAT_TYPE <sValue> (261) 51
    DOUBLE_TYPE <sValue> (262) 52
    STRING_TYPE <sValue> (263) 54
    BOOLEAN_TYPE <sValue> (264) 55
    MATRIZ_TYPE <sValue> (265) 56
    VOID_TYPE <sValue> (266) 49
    LITERAL_CHAR <sValue> (267) 97
    CHAR_TYPE <sValue> (268) 53
    LITERAL_INT <iValue> (269) 90
    LITERAL_FLOAT <fValue> (270) 91
    LITERAL_DOUBLE <dValue> (271) 92
    TRUE_VAL <bValue> (272) 93
    FALSE_VAL <bValue> (273) 94
    PLUS_OP (274) 62
    SUB_OP (275) 63
    DIV_OP (276) 64
    STAR (277) 65
    MOD_OP (278) 66
    FACT_OP (279)
    ASSINGMENT (280) 13 14
    INC_OP (281) 67
    DEC_OP (282) 68
    GE_OP (283) 83
    SE_OP (284) 81
    EQ_OP (285) 76 85
    NE_OP (286) 77 86
    G_OP (287) 84
    S_OP (288) 82
    AND_OP (289) 78
    OR_OP (290) 79
    NOT_OP (291) 80
    L_PARENTHESIS (292) 15 16 17 18 27 32 33 39 40 43 46 70 72
    R_PARENTHESIS (293) 15 16 17 18 27 32 33 39 40 43 46 70 72
    L_KEY (294) 33 46 48
    R_KEY (295) 33 46 48
    L_BRACKET (296)
    R_BRACKET (297)
    IF_STM (298) 27
    ELSE_STM (299) 29
    ELSE_IF_STM (300) 32
    FOR_STM (301) 43
    DO_STM (302) 40
    WHILE_STM (303) 39 40
    SWITCH_STM (304) 33
    CONTINUE (305)
    BREAK (306) 33 36
    PRINT (307) 15 16
    PRINTF (308) 17 18
    CASE (309) 36
    DEFAULT (310) 33
    CONSTANT (311)
    RETURN (312)
    EOL (313)
    ADDRESS (314)
    SEMICOLON (315) 4 8 9 10 11 21 22 33 36 40 43
    COMMA (316) 16 18 20 59
    DOT (317)
    DOUBLE_DOT (318) 33 36
    MALLOC_OP (319)
    FREE_OP (320)
    CALLOC_OP (321)


Não terminais com as regras onde eles aparecem

    $accept (67)
        à esquerda: 0
    program (68)
        à esquerda: 1
        à direita: 0
    stm_list <sValue> (69)
        à esquerda: 2 3
        à direita: 1 3 33 36 46 48
    stm <sValue> (70)
        à esquerda: 4 5 6 7 8 9 10 11
        à direita: 2 3
    decl <sValue> (71)
        à esquerda: 12
        à direita: 4
    assingment <sValue> (72)
        à esquerda: 13
        à direita: 10 45
    initialization <sValue> (73)
        à esquerda: 14
        à direita: 11 43
    print_stm <sValue> (74)
        à esquerda: 15 16 17 18
        à direita: 8
    id_list <sValue> (75)
        à esquerda: 19 20
        à direita: 12 16 18 20
    expres_list <sValue> (76)
        à esquerda: 21 22
        à direita: 9 22
    expr <strValue> (77)
        à esquerda: 23 24
        à direita: 13 14 21 22
    cond_stm <sValue> (78)
        à esquerda: 25 26
        à direita: 5
    if_struct <sValue> (79)
        à esquerda: 27
        à direita: 25
    else_struct <sValue> (80)
        à esquerda: 28 29
        à direita: 27
    elseif_list <sValue> (81)
        à esquerda: 30 31
        à direita: 29 31
    elseif_struct <sValue> (82)
        à esquerda: 32
        à direita: 31
    switch_struct <sValue> (83)
        à esquerda: 33
        à direita: 26
    case_list_switch <sValue> (84)
        à esquerda: 34 35
        à direita: 33 35
    case_switch <sValue> (85)
        à esquerda: 36
        à direita: 35
    loop_stm <sValue> (86)
        à esquerda: 37 38
        à direita: 6
    while_struct <sValue> (87)
        à esquerda: 39 40
        à direita: 37
    for_struct <sValue> (88)
        à esquerda: 43
        à direita: 38
    $@1 (89)
        à esquerda: 41
        à direita: 43
    $@2 (90)
        à esquerda: 42
        à direita: 43
    for_struct_stm <strValue> (91)
        à esquerda: 44 45
        à direita: 43
    fun_struct <sValue> (92)
        à esquerda: 46
        à direita: 7
    block <sValue> (93)
        à esquerda: 48
        à direita: 27 29 32 39 40 43
    $@3 (94)
        à esquerda: 47
        à direita: 48
    type <sValue> (95)
        à esquerda: 49 50 51 52 53 54 55 56
        à direita: 12 14 46 60
    par_list <sValue> (96)
        à esquerda: 57 58 59
        à direita: 46 59
    par_term <sValue> (97)
        à esquerda: 60
        à direita: 58 59
    arit_expr <strValue> (98)
        à esquerda: 61 62 63 64 65 66 67 68
        à direita: 24 44 62 63 64 65 66 67 68 70 74 75
    arit_expr_base <strValue> (99)
        à esquerda: 69 70
        à direita: 61 62 63 64 65 66
    log_expr <strValue> (100)
        à esquerda: 71 72 73
        à direita: 23 27 32 39 40 43 72 73
    comp_expr <strValue> (101)
        à esquerda: 74 75 76 77
        à direita: 71 73 75
    op_log <sValue> (102)
        à esquerda: 78 79 80
        à direita: 73
    op_comp <sValue> (103)
        à esquerda: 81 82 83 84 85 86
        à direita: 75
    term <strValue> (104)
        à esquerda: 87 88 89
        à direita: 69 95
    term_num <strValue> (105)
        à esquerda: 90 91 92
        à direita: 87
    log_term <strValue> (106)
        à esquerda: 93 94
        à direita: 88
    literal_term <strValue> (107)
        à esquerda: 95 96
        à direita: 33 36
    literal_string <strValue> (108)
        à esquerda: 97 98
        à direita: 15 16 17 18 76 77 96


Estado 0

    0 $accept: . program $end

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 2
    INT_TYPE        deslocar, e ir ao estado 3
    FLOAT_TYPE      deslocar, e ir ao estado 4
    DOUBLE_TYPE     deslocar, e ir ao estado 5
    STRING_TYPE     deslocar, e ir ao estado 6
    BOOLEAN_TYPE    deslocar, e ir ao estado 7
    MATRIZ_TYPE     deslocar, e ir ao estado 8
    VOID_TYPE       deslocar, e ir ao estado 9
    LITERAL_CHAR    deslocar, e ir ao estado 10
    CHAR_TYPE       deslocar, e ir ao estado 11
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17
    IF_STM          deslocar, e ir ao estado 18
    FOR_STM         deslocar, e ir ao estado 19
    DO_STM          deslocar, e ir ao estado 20
    WHILE_STM       deslocar, e ir ao estado 21
    SWITCH_STM      deslocar, e ir ao estado 22
    PRINT           deslocar, e ir ao estado 23
    PRINTF          deslocar, e ir ao estado 24

    program         ir ao estado 25
    stm_list        ir ao estado 26
    stm             ir ao estado 27
    decl            ir ao estado 28
    assingment      ir ao estado 29
    initialization  ir ao estado 30
    print_stm       ir ao estado 31
    expres_list     ir ao estado 32
    expr            ir ao estado 33
    cond_stm        ir ao estado 34
    if_struct       ir ao estado 35
    switch_struct   ir ao estado 36
    loop_stm        ir ao estado 37
    while_struct    ir ao estado 38
    for_struct      ir ao estado 39
    fun_struct      ir ao estado 40
    type            ir ao estado 41
    arit_expr       ir ao estado 42
    arit_expr_base  ir ao estado 43
    log_expr        ir ao estado 44
    comp_expr       ir ao estado 45
    term            ir ao estado 46
    term_num        ir ao estado 47
    log_term        ir ao estado 48
    literal_string  ir ao estado 49


Estado 1

   98 literal_string: LITERAL_STRING .

    $padrão  reduzir usando a regra 98 (literal_string)


Estado 2

   13 assingment: IDENTIFIER . ASSINGMENT expr
   89 term: IDENTIFIER .

    ASSINGMENT  deslocar, e ir ao estado 50

    $padrão  reduzir usando a regra 89 (term)


Estado 3

   50 type: INT_TYPE .

    $padrão  reduzir usando a regra 50 (type)


Estado 4

   51 type: FLOAT_TYPE .

    $padrão  reduzir usando a regra 51 (type)


Estado 5

   52 type: DOUBLE_TYPE .

    $padrão  reduzir usando a regra 52 (type)


Estado 6

   54 type: STRING_TYPE .

    $padrão  reduzir usando a regra 54 (type)


Estado 7

   55 type: BOOLEAN_TYPE .

    $padrão  reduzir usando a regra 55 (type)


Estado 8

   56 type: MATRIZ_TYPE .

    $padrão  reduzir usando a regra 56 (type)


Estado 9

   49 type: VOID_TYPE .

    $padrão  reduzir usando a regra 49 (type)


Estado 10

   97 literal_string: LITERAL_CHAR .

    $padrão  reduzir usando a regra 97 (literal_string)


Estado 11

   53 type: CHAR_TYPE .

    $padrão  reduzir usando a regra 53 (type)


Estado 12

   90 term_num: LITERAL_INT .

    $padrão  reduzir usando a regra 90 (term_num)


Estado 13

   91 term_num: LITERAL_FLOAT .

    $padrão  reduzir usando a regra 91 (term_num)


Estado 14

   92 term_num: LITERAL_DOUBLE .

    $padrão  reduzir usando a regra 92 (term_num)


Estado 15

   93 log_term: TRUE_VAL .

    $padrão  reduzir usando a regra 93 (log_term)


Estado 16

   94 log_term: FALSE_VAL .

    $padrão  reduzir usando a regra 94 (log_term)


Estado 17

   70 arit_expr_base: L_PARENTHESIS . arit_expr R_PARENTHESIS
   72 log_expr: L_PARENTHESIS . log_expr R_PARENTHESIS

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 51
    LITERAL_CHAR    deslocar, e ir ao estado 10
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17

    arit_expr       ir ao estado 52
    arit_expr_base  ir ao estado 43
    log_expr        ir ao estado 53
    comp_expr       ir ao estado 45
    term            ir ao estado 46
    term_num        ir ao estado 47
    log_term        ir ao estado 48
    literal_string  ir ao estado 49


Estado 18

   27 if_struct: IF_STM . L_PARENTHESIS log_expr R_PARENTHESIS block else_struct

    L_PARENTHESIS  deslocar, e ir ao estado 54


Estado 19

   43 for_struct: FOR_STM . L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 block

    L_PARENTHESIS  deslocar, e ir ao estado 55


Estado 20

   40 while_struct: DO_STM . block WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS SEMICOLON

    L_KEY  deslocar, e ir ao estado 56

    block  ir ao estado 57


Estado 21

   39 while_struct: WHILE_STM . L_PARENTHESIS log_expr R_PARENTHESIS block

    L_PARENTHESIS  deslocar, e ir ao estado 58


Estado 22

   33 switch_struct: SWITCH_STM . L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

    L_PARENTHESIS  deslocar, e ir ao estado 59


Estado 23

   15 print_stm: PRINT . L_PARENTHESIS literal_string R_PARENTHESIS
   16          | PRINT . L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS

    L_PARENTHESIS  deslocar, e ir ao estado 60


Estado 24

   17 print_stm: PRINTF . L_PARENTHESIS literal_string R_PARENTHESIS
   18          | PRINTF . L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS

    L_PARENTHESIS  deslocar, e ir ao estado 61


Estado 25

    0 $accept: program . $end

    $end  deslocar, e ir ao estado 62


Estado 26

    1 program: stm_list .

    $padrão  reduzir usando a regra 1 (program)


Estado 27

    2 stm_list: stm .
    3         | stm . stm_list

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 2
    INT_TYPE        deslocar, e ir ao estado 3
    FLOAT_TYPE      deslocar, e ir ao estado 4
    DOUBLE_TYPE     deslocar, e ir ao estado 5
    STRING_TYPE     deslocar, e ir ao estado 6
    BOOLEAN_TYPE    deslocar, e ir ao estado 7
    MATRIZ_TYPE     deslocar, e ir ao estado 8
    VOID_TYPE       deslocar, e ir ao estado 9
    LITERAL_CHAR    deslocar, e ir ao estado 10
    CHAR_TYPE       deslocar, e ir ao estado 11
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17
    IF_STM          deslocar, e ir ao estado 18
    FOR_STM         deslocar, e ir ao estado 19
    DO_STM          deslocar, e ir ao estado 20
    WHILE_STM       deslocar, e ir ao estado 21
    SWITCH_STM      deslocar, e ir ao estado 22
    PRINT           deslocar, e ir ao estado 23
    PRINTF          deslocar, e ir ao estado 24

    $padrão  reduzir usando a regra 2 (stm_list)

    stm_list        ir ao estado 63
    stm             ir ao estado 27
    decl            ir ao estado 28
    assingment      ir ao estado 29
    initialization  ir ao estado 30
    print_stm       ir ao estado 31
    expres_list     ir ao estado 32
    expr            ir ao estado 33
    cond_stm        ir ao estado 34
    if_struct       ir ao estado 35
    switch_struct   ir ao estado 36
    loop_stm        ir ao estado 37
    while_struct    ir ao estado 38
    for_struct      ir ao estado 39
    fun_struct      ir ao estado 40
    type            ir ao estado 41
    arit_expr       ir ao estado 42
    arit_expr_base  ir ao estado 43
    log_expr        ir ao estado 44
    comp_expr       ir ao estado 45
    term            ir ao estado 46
    term_num        ir ao estado 47
    log_term        ir ao estado 48
    literal_string  ir ao estado 49


Estado 28

    4 stm: decl . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 64


Estado 29

   10 stm: assingment . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 65


Estado 30

   11 stm: initialization . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 66


Estado 31

    8 stm: print_stm . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 67


Estado 32

    9 stm: expres_list . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 68


Estado 33

   21 expres_list: expr . SEMICOLON
   22            | expr . SEMICOLON expres_list

    SEMICOLON  deslocar, e ir ao estado 69


Estado 34

    5 stm: cond_stm .

    $padrão  reduzir usando a regra 5 (stm)


Estado 35

   25 cond_stm: if_struct .

    $padrão  reduzir usando a regra 25 (cond_stm)


Estado 36

   26 cond_stm: switch_struct .

    $padrão  reduzir usando a regra 26 (cond_stm)


Estado 37

    6 stm: loop_stm .

    $padrão  reduzir usando a regra 6 (stm)


Estado 38

   37 loop_stm: while_struct .

    $padrão  reduzir usando a regra 37 (loop_stm)


Estado 39

   38 loop_stm: for_struct .

    $padrão  reduzir usando a regra 38 (loop_stm)


Estado 40

    7 stm: fun_struct .

    $padrão  reduzir usando a regra 7 (stm)


Estado 41

   12 decl: type . id_list
   14 initialization: type . IDENTIFIER ASSINGMENT expr
   46 fun_struct: type . IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS L_KEY stm_list R_KEY

    IDENTIFIER  deslocar, e ir ao estado 70

    id_list  ir ao estado 71


Estado 42

   24 expr: arit_expr .
   62 arit_expr: arit_expr . PLUS_OP arit_expr_base
   63          | arit_expr . SUB_OP arit_expr_base
   64          | arit_expr . DIV_OP arit_expr_base
   65          | arit_expr . STAR arit_expr_base
   66          | arit_expr . MOD_OP arit_expr_base
   67          | arit_expr . INC_OP
   68          | arit_expr . DEC_OP
   74 comp_expr: arit_expr .

    PLUS_OP  deslocar, e ir ao estado 72
    SUB_OP   deslocar, e ir ao estado 73
    DIV_OP   deslocar, e ir ao estado 74
    STAR     deslocar, e ir ao estado 75
    MOD_OP   deslocar, e ir ao estado 76
    INC_OP   deslocar, e ir ao estado 77
    DEC_OP   deslocar, e ir ao estado 78

    R_PARENTHESIS  reduzir usando a regra 24 (expr)
    R_PARENTHESIS  [reduzir usando a regra 74 (comp_expr)]
    SEMICOLON      reduzir usando a regra 24 (expr)
    SEMICOLON      [reduzir usando a regra 74 (comp_expr)]
    $padrão       reduzir usando a regra 74 (comp_expr)


Estado 43

   61 arit_expr: arit_expr_base .

    $padrão  reduzir usando a regra 61 (arit_expr)


Estado 44

   23 expr: log_expr .
   73 log_expr: log_expr . op_log comp_expr

    AND_OP  deslocar, e ir ao estado 79
    OR_OP   deslocar, e ir ao estado 80
    NOT_OP  deslocar, e ir ao estado 81

    $padrão  reduzir usando a regra 23 (expr)

    op_log  ir ao estado 82


Estado 45

   71 log_expr: comp_expr .
   75 comp_expr: comp_expr . op_comp arit_expr

    GE_OP  deslocar, e ir ao estado 83
    SE_OP  deslocar, e ir ao estado 84
    EQ_OP  deslocar, e ir ao estado 85
    NE_OP  deslocar, e ir ao estado 86
    G_OP   deslocar, e ir ao estado 87
    S_OP   deslocar, e ir ao estado 88

    $padrão  reduzir usando a regra 71 (log_expr)

    op_comp  ir ao estado 89


Estado 46

   69 arit_expr_base: term .

    $padrão  reduzir usando a regra 69 (arit_expr_base)


Estado 47

   87 term: term_num .

    $padrão  reduzir usando a regra 87 (term)


Estado 48

   88 term: log_term .

    $padrão  reduzir usando a regra 88 (term)


Estado 49

   76 comp_expr: literal_string . EQ_OP literal_string
   77          | literal_string . NE_OP literal_string

    EQ_OP  deslocar, e ir ao estado 90
    NE_OP  deslocar, e ir ao estado 91


Estado 50

   13 assingment: IDENTIFIER ASSINGMENT . expr

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 51
    LITERAL_CHAR    deslocar, e ir ao estado 10
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17

    expr            ir ao estado 92
    arit_expr       ir ao estado 42
    arit_expr_base  ir ao estado 43
    log_expr        ir ao estado 44
    comp_expr       ir ao estado 45
    term            ir ao estado 46
    term_num        ir ao estado 47
    log_term        ir ao estado 48
    literal_string  ir ao estado 49


Estado 51

   89 term: IDENTIFIER .

    $padrão  reduzir usando a regra 89 (term)


Estado 52

   62 arit_expr: arit_expr . PLUS_OP arit_expr_base
   63          | arit_expr . SUB_OP arit_expr_base
   64          | arit_expr . DIV_OP arit_expr_base
   65          | arit_expr . STAR arit_expr_base
   66          | arit_expr . MOD_OP arit_expr_base
   67          | arit_expr . INC_OP
   68          | arit_expr . DEC_OP
   70 arit_expr_base: L_PARENTHESIS arit_expr . R_PARENTHESIS
   74 comp_expr: arit_expr .

    PLUS_OP        deslocar, e ir ao estado 72
    SUB_OP         deslocar, e ir ao estado 73
    DIV_OP         deslocar, e ir ao estado 74
    STAR           deslocar, e ir ao estado 75
    MOD_OP         deslocar, e ir ao estado 76
    INC_OP         deslocar, e ir ao estado 77
    DEC_OP         deslocar, e ir ao estado 78
    R_PARENTHESIS  deslocar, e ir ao estado 93

    R_PARENTHESIS  [reduzir usando a regra 74 (comp_expr)]
    $padrão       reduzir usando a regra 74 (comp_expr)


Estado 53

   72 log_expr: L_PARENTHESIS log_expr . R_PARENTHESIS
   73         | log_expr . op_log comp_expr

    AND_OP         deslocar, e ir ao estado 79
    OR_OP          deslocar, e ir ao estado 80
    NOT_OP         deslocar, e ir ao estado 81
    R_PARENTHESIS  deslocar, e ir ao estado 94

    op_log  ir ao estado 82


Estado 54

   27 if_struct: IF_STM L_PARENTHESIS . log_expr R_PARENTHESIS block else_struct

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 51
    LITERAL_CHAR    deslocar, e ir ao estado 10
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17

    arit_expr       ir ao estado 95
    arit_expr_base  ir ao estado 43
    log_expr        ir ao estado 96
    comp_expr       ir ao estado 45
    term            ir ao estado 46
    term_num        ir ao estado 47
    log_term        ir ao estado 48
    literal_string  ir ao estado 49


Estado 55

   43 for_struct: FOR_STM L_PARENTHESIS . $@1 initialization SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 block

    $padrão  reduzir usando a regra 41 ($@1)

    $@1  ir ao estado 97


Estado 56

   48 block: L_KEY . $@3 stm_list R_KEY

    $padrão  reduzir usando a regra 47 ($@3)

    $@3  ir ao estado 98


Estado 57

   40 while_struct: DO_STM block . WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS SEMICOLON

    WHILE_STM  deslocar, e ir ao estado 99


Estado 58

   39 while_struct: WHILE_STM L_PARENTHESIS . log_expr R_PARENTHESIS block

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 51
    LITERAL_CHAR    deslocar, e ir ao estado 10
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17

    arit_expr       ir ao estado 95
    arit_expr_base  ir ao estado 43
    log_expr        ir ao estado 100
    comp_expr       ir ao estado 45
    term            ir ao estado 46
    term_num        ir ao estado 47
    log_term        ir ao estado 48
    literal_string  ir ao estado 49


Estado 59

   33 switch_struct: SWITCH_STM L_PARENTHESIS . literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 51
    LITERAL_CHAR    deslocar, e ir ao estado 10
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16

    term            ir ao estado 101
    term_num        ir ao estado 47
    log_term        ir ao estado 48
    literal_term    ir ao estado 102
    literal_string  ir ao estado 103


Estado 60

   15 print_stm: PRINT L_PARENTHESIS . literal_string R_PARENTHESIS
   16          | PRINT L_PARENTHESIS . literal_string COMMA id_list R_PARENTHESIS

    LITERAL_STRING  deslocar, e ir ao estado 1
    LITERAL_CHAR    deslocar, e ir ao estado 10

    literal_string  ir ao estado 104


Estado 61

   17 print_stm: PRINTF L_PARENTHESIS . literal_string R_PARENTHESIS
   18          | PRINTF L_PARENTHESIS . literal_string COMMA id_list R_PARENTHESIS

    LITERAL_STRING  deslocar, e ir ao estado 1
    LITERAL_CHAR    deslocar, e ir ao estado 10

    literal_string  ir ao estado 105


Estado 62

    0 $accept: program $end .

    $padrão  aceitar


Estado 63

    3 stm_list: stm stm_list .

    $padrão  reduzir usando a regra 3 (stm_list)


Estado 64

    4 stm: decl SEMICOLON .

    $padrão  reduzir usando a regra 4 (stm)


Estado 65

   10 stm: assingment SEMICOLON .

    $padrão  reduzir usando a regra 10 (stm)


Estado 66

   11 stm: initialization SEMICOLON .

    $padrão  reduzir usando a regra 11 (stm)


Estado 67

    8 stm: print_stm SEMICOLON .

    $padrão  reduzir usando a regra 8 (stm)


Estado 68

    9 stm: expres_list SEMICOLON .

    $padrão  reduzir usando a regra 9 (stm)


Estado 69

   21 expres_list: expr SEMICOLON .
   22            | expr SEMICOLON . expres_list

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 51
    LITERAL_CHAR    deslocar, e ir ao estado 10
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17

    $padrão  reduzir usando a regra 21 (expres_list)

    expres_list     ir ao estado 106
    expr            ir ao estado 33
    arit_expr       ir ao estado 42
    arit_expr_base  ir ao estado 43
    log_expr        ir ao estado 44
    comp_expr       ir ao estado 45
    term            ir ao estado 46
    term_num        ir ao estado 47
    log_term        ir ao estado 48
    literal_string  ir ao estado 49


Estado 70

   14 initialization: type IDENTIFIER . ASSINGMENT expr
   19 id_list: IDENTIFIER .
   20        | IDENTIFIER . COMMA id_list
   46 fun_struct: type IDENTIFIER . L_PARENTHESIS par_list R_PARENTHESIS L_KEY stm_list R_KEY

    ASSINGMENT     deslocar, e ir ao estado 107
    L_PARENTHESIS  deslocar, e ir ao estado 108
    COMMA          deslocar, e ir ao estado 109

    $padrão  reduzir usando a regra 19 (id_list)


Estado 71

   12 decl: type id_list .

    $padrão  reduzir usando a regra 12 (decl)


Estado 72

   62 arit_expr: arit_expr PLUS_OP . arit_expr_base

    IDENTIFIER      deslocar, e ir ao estado 51
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 110

    arit_expr_base  ir ao estado 111
    term            ir ao estado 46
    term_num        ir ao estado 47
    log_term        ir ao estado 48


Estado 73

   63 arit_expr: arit_expr SUB_OP . arit_expr_base

    IDENTIFIER      deslocar, e ir ao estado 51
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 110

    arit_expr_base  ir ao estado 112
    term            ir ao estado 46
    term_num        ir ao estado 47
    log_term        ir ao estado 48


Estado 74

   64 arit_expr: arit_expr DIV_OP . arit_expr_base

    IDENTIFIER      deslocar, e ir ao estado 51
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 110

    arit_expr_base  ir ao estado 113
    term            ir ao estado 46
    term_num        ir ao estado 47
    log_term        ir ao estado 48


Estado 75

   65 arit_expr: arit_expr STAR . arit_expr_base

    IDENTIFIER      deslocar, e ir ao estado 51
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 110

    arit_expr_base  ir ao estado 114
    term            ir ao estado 46
    term_num        ir ao estado 47
    log_term        ir ao estado 48


Estado 76

   66 arit_expr: arit_expr MOD_OP . arit_expr_base

    IDENTIFIER      deslocar, e ir ao estado 51
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 110

    arit_expr_base  ir ao estado 115
    term            ir ao estado 46
    term_num        ir ao estado 47
    log_term        ir ao estado 48


Estado 77

   67 arit_expr: arit_expr INC_OP .

    $padrão  reduzir usando a regra 67 (arit_expr)


Estado 78

   68 arit_expr: arit_expr DEC_OP .

    $padrão  reduzir usando a regra 68 (arit_expr)


Estado 79

   78 op_log: AND_OP .

    $padrão  reduzir usando a regra 78 (op_log)


Estado 80

   79 op_log: OR_OP .

    $padrão  reduzir usando a regra 79 (op_log)


Estado 81

   80 op_log: NOT_OP .

    $padrão  reduzir usando a regra 80 (op_log)


Estado 82

   73 log_expr: log_expr op_log . comp_expr

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 51
    LITERAL_CHAR    deslocar, e ir ao estado 10
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 110

    arit_expr       ir ao estado 95
    arit_expr_base  ir ao estado 43
    comp_expr       ir ao estado 116
    term            ir ao estado 46
    term_num        ir ao estado 47
    log_term        ir ao estado 48
    literal_string  ir ao estado 49


Estado 83

   83 op_comp: GE_OP .

    $padrão  reduzir usando a regra 83 (op_comp)


Estado 84

   81 op_comp: SE_OP .

    $padrão  reduzir usando a regra 81 (op_comp)


Estado 85

   85 op_comp: EQ_OP .

    $padrão  reduzir usando a regra 85 (op_comp)


Estado 86

   86 op_comp: NE_OP .

    $padrão  reduzir usando a regra 86 (op_comp)


Estado 87

   84 op_comp: G_OP .

    $padrão  reduzir usando a regra 84 (op_comp)


Estado 88

   82 op_comp: S_OP .

    $padrão  reduzir usando a regra 82 (op_comp)


Estado 89

   75 comp_expr: comp_expr op_comp . arit_expr

    IDENTIFIER      deslocar, e ir ao estado 51
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 110

    arit_expr       ir ao estado 117
    arit_expr_base  ir ao estado 43
    term            ir ao estado 46
    term_num        ir ao estado 47
    log_term        ir ao estado 48


Estado 90

   76 comp_expr: literal_string EQ_OP . literal_string

    LITERAL_STRING  deslocar, e ir ao estado 1
    LITERAL_CHAR    deslocar, e ir ao estado 10

    literal_string  ir ao estado 118


Estado 91

   77 comp_expr: literal_string NE_OP . literal_string

    LITERAL_STRING  deslocar, e ir ao estado 1
    LITERAL_CHAR    deslocar, e ir ao estado 10

    literal_string  ir ao estado 119


Estado 92

   13 assingment: IDENTIFIER ASSINGMENT expr .

    $padrão  reduzir usando a regra 13 (assingment)


Estado 93

   70 arit_expr_base: L_PARENTHESIS arit_expr R_PARENTHESIS .

    $padrão  reduzir usando a regra 70 (arit_expr_base)


Estado 94

   72 log_expr: L_PARENTHESIS log_expr R_PARENTHESIS .

    $padrão  reduzir usando a regra 72 (log_expr)


Estado 95

   62 arit_expr: arit_expr . PLUS_OP arit_expr_base
   63          | arit_expr . SUB_OP arit_expr_base
   64          | arit_expr . DIV_OP arit_expr_base
   65          | arit_expr . STAR arit_expr_base
   66          | arit_expr . MOD_OP arit_expr_base
   67          | arit_expr . INC_OP
   68          | arit_expr . DEC_OP
   74 comp_expr: arit_expr .

    PLUS_OP  deslocar, e ir ao estado 72
    SUB_OP   deslocar, e ir ao estado 73
    DIV_OP   deslocar, e ir ao estado 74
    STAR     deslocar, e ir ao estado 75
    MOD_OP   deslocar, e ir ao estado 76
    INC_OP   deslocar, e ir ao estado 77
    DEC_OP   deslocar, e ir ao estado 78

    $padrão  reduzir usando a regra 74 (comp_expr)


Estado 96

   27 if_struct: IF_STM L_PARENTHESIS log_expr . R_PARENTHESIS block else_struct
   73 log_expr: log_expr . op_log comp_expr

    AND_OP         deslocar, e ir ao estado 79
    OR_OP          deslocar, e ir ao estado 80
    NOT_OP         deslocar, e ir ao estado 81
    R_PARENTHESIS  deslocar, e ir ao estado 120

    op_log  ir ao estado 82


Estado 97

   43 for_struct: FOR_STM L_PARENTHESIS $@1 . initialization SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 block

    INT_TYPE      deslocar, e ir ao estado 3
    FLOAT_TYPE    deslocar, e ir ao estado 4
    DOUBLE_TYPE   deslocar, e ir ao estado 5
    STRING_TYPE   deslocar, e ir ao estado 6
    BOOLEAN_TYPE  deslocar, e ir ao estado 7
    MATRIZ_TYPE   deslocar, e ir ao estado 8
    VOID_TYPE     deslocar, e ir ao estado 9
    CHAR_TYPE     deslocar, e ir ao estado 11

    initialization  ir ao estado 121
    type            ir ao estado 122


Estado 98

   48 block: L_KEY $@3 . stm_list R_KEY

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 2
    INT_TYPE        deslocar, e ir ao estado 3
    FLOAT_TYPE      deslocar, e ir ao estado 4
    DOUBLE_TYPE     deslocar, e ir ao estado 5
    STRING_TYPE     deslocar, e ir ao estado 6
    BOOLEAN_TYPE    deslocar, e ir ao estado 7
    MATRIZ_TYPE     deslocar, e ir ao estado 8
    VOID_TYPE       deslocar, e ir ao estado 9
    LITERAL_CHAR    deslocar, e ir ao estado 10
    CHAR_TYPE       deslocar, e ir ao estado 11
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17
    IF_STM          deslocar, e ir ao estado 18
    FOR_STM         deslocar, e ir ao estado 19
    DO_STM          deslocar, e ir ao estado 20
    WHILE_STM       deslocar, e ir ao estado 21
    SWITCH_STM      deslocar, e ir ao estado 22
    PRINT           deslocar, e ir ao estado 23
    PRINTF          deslocar, e ir ao estado 24

    stm_list        ir ao estado 123
    stm             ir ao estado 27
    decl            ir ao estado 28
    assingment      ir ao estado 29
    initialization  ir ao estado 30
    print_stm       ir ao estado 31
    expres_list     ir ao estado 32
    expr            ir ao estado 33
    cond_stm        ir ao estado 34
    if_struct       ir ao estado 35
    switch_struct   ir ao estado 36
    loop_stm        ir ao estado 37
    while_struct    ir ao estado 38
    for_struct      ir ao estado 39
    fun_struct      ir ao estado 40
    type            ir ao estado 41
    arit_expr       ir ao estado 42
    arit_expr_base  ir ao estado 43
    log_expr        ir ao estado 44
    comp_expr       ir ao estado 45
    term            ir ao estado 46
    term_num        ir ao estado 47
    log_term        ir ao estado 48
    literal_string  ir ao estado 49


Estado 99

   40 while_struct: DO_STM block WHILE_STM . L_PARENTHESIS log_expr R_PARENTHESIS SEMICOLON

    L_PARENTHESIS  deslocar, e ir ao estado 124


Estado 100

   39 while_struct: WHILE_STM L_PARENTHESIS log_expr . R_PARENTHESIS block
   73 log_expr: log_expr . op_log comp_expr

    AND_OP         deslocar, e ir ao estado 79
    OR_OP          deslocar, e ir ao estado 80
    NOT_OP         deslocar, e ir ao estado 81
    R_PARENTHESIS  deslocar, e ir ao estado 125

    op_log  ir ao estado 82


Estado 101

   95 literal_term: term .

    $padrão  reduzir usando a regra 95 (literal_term)


Estado 102

   33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term . R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

    R_PARENTHESIS  deslocar, e ir ao estado 126


Estado 103

   96 literal_term: literal_string .

    $padrão  reduzir usando a regra 96 (literal_term)


Estado 104

   15 print_stm: PRINT L_PARENTHESIS literal_string . R_PARENTHESIS
   16          | PRINT L_PARENTHESIS literal_string . COMMA id_list R_PARENTHESIS

    R_PARENTHESIS  deslocar, e ir ao estado 127
    COMMA          deslocar, e ir ao estado 128


Estado 105

   17 print_stm: PRINTF L_PARENTHESIS literal_string . R_PARENTHESIS
   18          | PRINTF L_PARENTHESIS literal_string . COMMA id_list R_PARENTHESIS

    R_PARENTHESIS  deslocar, e ir ao estado 129
    COMMA          deslocar, e ir ao estado 130


Estado 106

   22 expres_list: expr SEMICOLON expres_list .

    $padrão  reduzir usando a regra 22 (expres_list)


Estado 107

   14 initialization: type IDENTIFIER ASSINGMENT . expr

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 51
    LITERAL_CHAR    deslocar, e ir ao estado 10
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17

    expr            ir ao estado 131
    arit_expr       ir ao estado 42
    arit_expr_base  ir ao estado 43
    log_expr        ir ao estado 44
    comp_expr       ir ao estado 45
    term            ir ao estado 46
    term_num        ir ao estado 47
    log_term        ir ao estado 48
    literal_string  ir ao estado 49


Estado 108

   46 fun_struct: type IDENTIFIER L_PARENTHESIS . par_list R_PARENTHESIS L_KEY stm_list R_KEY

    INT_TYPE      deslocar, e ir ao estado 3
    FLOAT_TYPE    deslocar, e ir ao estado 4
    DOUBLE_TYPE   deslocar, e ir ao estado 5
    STRING_TYPE   deslocar, e ir ao estado 6
    BOOLEAN_TYPE  deslocar, e ir ao estado 7
    MATRIZ_TYPE   deslocar, e ir ao estado 8
    VOID_TYPE     deslocar, e ir ao estado 9
    CHAR_TYPE     deslocar, e ir ao estado 11

    $padrão  reduzir usando a regra 57 (par_list)

    type      ir ao estado 132
    par_list  ir ao estado 133
    par_term  ir ao estado 134


Estado 109

   20 id_list: IDENTIFIER COMMA . id_list

    IDENTIFIER  deslocar, e ir ao estado 135

    id_list  ir ao estado 136


Estado 110

   70 arit_expr_base: L_PARENTHESIS . arit_expr R_PARENTHESIS

    IDENTIFIER      deslocar, e ir ao estado 51
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 110

    arit_expr       ir ao estado 137
    arit_expr_base  ir ao estado 43
    term            ir ao estado 46
    term_num        ir ao estado 47
    log_term        ir ao estado 48


Estado 111

   62 arit_expr: arit_expr PLUS_OP arit_expr_base .

    $padrão  reduzir usando a regra 62 (arit_expr)


Estado 112

   63 arit_expr: arit_expr SUB_OP arit_expr_base .

    $padrão  reduzir usando a regra 63 (arit_expr)


Estado 113

   64 arit_expr: arit_expr DIV_OP arit_expr_base .

    $padrão  reduzir usando a regra 64 (arit_expr)


Estado 114

   65 arit_expr: arit_expr STAR arit_expr_base .

    $padrão  reduzir usando a regra 65 (arit_expr)


Estado 115

   66 arit_expr: arit_expr MOD_OP arit_expr_base .

    $padrão  reduzir usando a regra 66 (arit_expr)


Estado 116

   73 log_expr: log_expr op_log comp_expr .
   75 comp_expr: comp_expr . op_comp arit_expr

    GE_OP  deslocar, e ir ao estado 83
    SE_OP  deslocar, e ir ao estado 84
    EQ_OP  deslocar, e ir ao estado 85
    NE_OP  deslocar, e ir ao estado 86
    G_OP   deslocar, e ir ao estado 87
    S_OP   deslocar, e ir ao estado 88

    $padrão  reduzir usando a regra 73 (log_expr)

    op_comp  ir ao estado 89


Estado 117

   62 arit_expr: arit_expr . PLUS_OP arit_expr_base
   63          | arit_expr . SUB_OP arit_expr_base
   64          | arit_expr . DIV_OP arit_expr_base
   65          | arit_expr . STAR arit_expr_base
   66          | arit_expr . MOD_OP arit_expr_base
   67          | arit_expr . INC_OP
   68          | arit_expr . DEC_OP
   75 comp_expr: comp_expr op_comp arit_expr .

    PLUS_OP  deslocar, e ir ao estado 72
    SUB_OP   deslocar, e ir ao estado 73
    DIV_OP   deslocar, e ir ao estado 74
    STAR     deslocar, e ir ao estado 75
    MOD_OP   deslocar, e ir ao estado 76
    INC_OP   deslocar, e ir ao estado 77
    DEC_OP   deslocar, e ir ao estado 78

    $padrão  reduzir usando a regra 75 (comp_expr)


Estado 118

   76 comp_expr: literal_string EQ_OP literal_string .

    $padrão  reduzir usando a regra 76 (comp_expr)


Estado 119

   77 comp_expr: literal_string NE_OP literal_string .

    $padrão  reduzir usando a regra 77 (comp_expr)


Estado 120

   27 if_struct: IF_STM L_PARENTHESIS log_expr R_PARENTHESIS . block else_struct

    L_KEY  deslocar, e ir ao estado 56

    block  ir ao estado 138


Estado 121

   43 for_struct: FOR_STM L_PARENTHESIS $@1 initialization . SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 block

    SEMICOLON  deslocar, e ir ao estado 139


Estado 122

   14 initialization: type . IDENTIFIER ASSINGMENT expr

    IDENTIFIER  deslocar, e ir ao estado 140


Estado 123

   48 block: L_KEY $@3 stm_list . R_KEY

    R_KEY  deslocar, e ir ao estado 141


Estado 124

   40 while_struct: DO_STM block WHILE_STM L_PARENTHESIS . log_expr R_PARENTHESIS SEMICOLON

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 51
    LITERAL_CHAR    deslocar, e ir ao estado 10
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17

    arit_expr       ir ao estado 95
    arit_expr_base  ir ao estado 43
    log_expr        ir ao estado 142
    comp_expr       ir ao estado 45
    term            ir ao estado 46
    term_num        ir ao estado 47
    log_term        ir ao estado 48
    literal_string  ir ao estado 49


Estado 125

   39 while_struct: WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS . block

    L_KEY  deslocar, e ir ao estado 56

    block  ir ao estado 143


Estado 126

   33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS . L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

    L_KEY  deslocar, e ir ao estado 144


Estado 127

   15 print_stm: PRINT L_PARENTHESIS literal_string R_PARENTHESIS .

    $padrão  reduzir usando a regra 15 (print_stm)


Estado 128

   16 print_stm: PRINT L_PARENTHESIS literal_string COMMA . id_list R_PARENTHESIS

    IDENTIFIER  deslocar, e ir ao estado 135

    id_list  ir ao estado 145


Estado 129

   17 print_stm: PRINTF L_PARENTHESIS literal_string R_PARENTHESIS .

    $padrão  reduzir usando a regra 17 (print_stm)


Estado 130

   18 print_stm: PRINTF L_PARENTHESIS literal_string COMMA . id_list R_PARENTHESIS

    IDENTIFIER  deslocar, e ir ao estado 135

    id_list  ir ao estado 146


Estado 131

   14 initialization: type IDENTIFIER ASSINGMENT expr .

    $padrão  reduzir usando a regra 14 (initialization)


Estado 132

   60 par_term: type . IDENTIFIER

    IDENTIFIER  deslocar, e ir ao estado 147


Estado 133

   46 fun_struct: type IDENTIFIER L_PARENTHESIS par_list . R_PARENTHESIS L_KEY stm_list R_KEY

    R_PARENTHESIS  deslocar, e ir ao estado 148


Estado 134

   58 par_list: par_term .
   59         | par_term . COMMA par_list

    COMMA  deslocar, e ir ao estado 149

    $padrão  reduzir usando a regra 58 (par_list)


Estado 135

   19 id_list: IDENTIFIER .
   20        | IDENTIFIER . COMMA id_list

    COMMA  deslocar, e ir ao estado 109

    $padrão  reduzir usando a regra 19 (id_list)


Estado 136

   20 id_list: IDENTIFIER COMMA id_list .

    $padrão  reduzir usando a regra 20 (id_list)


Estado 137

   62 arit_expr: arit_expr . PLUS_OP arit_expr_base
   63          | arit_expr . SUB_OP arit_expr_base
   64          | arit_expr . DIV_OP arit_expr_base
   65          | arit_expr . STAR arit_expr_base
   66          | arit_expr . MOD_OP arit_expr_base
   67          | arit_expr . INC_OP
   68          | arit_expr . DEC_OP
   70 arit_expr_base: L_PARENTHESIS arit_expr . R_PARENTHESIS

    PLUS_OP        deslocar, e ir ao estado 72
    SUB_OP         deslocar, e ir ao estado 73
    DIV_OP         deslocar, e ir ao estado 74
    STAR           deslocar, e ir ao estado 75
    MOD_OP         deslocar, e ir ao estado 76
    INC_OP         deslocar, e ir ao estado 77
    DEC_OP         deslocar, e ir ao estado 78
    R_PARENTHESIS  deslocar, e ir ao estado 93


Estado 138

   27 if_struct: IF_STM L_PARENTHESIS log_expr R_PARENTHESIS block . else_struct

    ELSE_IF_STM  deslocar, e ir ao estado 150

    ELSE_STM  reduzir usando a regra 30 (elseif_list)
    $padrão  reduzir usando a regra 28 (else_struct)

    else_struct    ir ao estado 151
    elseif_list    ir ao estado 152
    elseif_struct  ir ao estado 153


Estado 139

   43 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON . log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 block

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 51
    LITERAL_CHAR    deslocar, e ir ao estado 10
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17

    arit_expr       ir ao estado 95
    arit_expr_base  ir ao estado 43
    log_expr        ir ao estado 154
    comp_expr       ir ao estado 45
    term            ir ao estado 46
    term_num        ir ao estado 47
    log_term        ir ao estado 48
    literal_string  ir ao estado 49


Estado 140

   14 initialization: type IDENTIFIER . ASSINGMENT expr

    ASSINGMENT  deslocar, e ir ao estado 107


Estado 141

   48 block: L_KEY $@3 stm_list R_KEY .

    $padrão  reduzir usando a regra 48 (block)


Estado 142

   40 while_struct: DO_STM block WHILE_STM L_PARENTHESIS log_expr . R_PARENTHESIS SEMICOLON
   73 log_expr: log_expr . op_log comp_expr

    AND_OP         deslocar, e ir ao estado 79
    OR_OP          deslocar, e ir ao estado 80
    NOT_OP         deslocar, e ir ao estado 81
    R_PARENTHESIS  deslocar, e ir ao estado 155

    op_log  ir ao estado 82


Estado 143

   39 while_struct: WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS block .

    $padrão  reduzir usando a regra 39 (while_struct)


Estado 144

   33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY . case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

    CASE  deslocar, e ir ao estado 156

    $padrão  reduzir usando a regra 34 (case_list_switch)

    case_list_switch  ir ao estado 157
    case_switch       ir ao estado 158


Estado 145

   16 print_stm: PRINT L_PARENTHESIS literal_string COMMA id_list . R_PARENTHESIS

    R_PARENTHESIS  deslocar, e ir ao estado 159


Estado 146

   18 print_stm: PRINTF L_PARENTHESIS literal_string COMMA id_list . R_PARENTHESIS

    R_PARENTHESIS  deslocar, e ir ao estado 160


Estado 147

   60 par_term: type IDENTIFIER .

    $padrão  reduzir usando a regra 60 (par_term)


Estado 148

   46 fun_struct: type IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS . L_KEY stm_list R_KEY

    L_KEY  deslocar, e ir ao estado 161


Estado 149

   59 par_list: par_term COMMA . par_list

    INT_TYPE      deslocar, e ir ao estado 3
    FLOAT_TYPE    deslocar, e ir ao estado 4
    DOUBLE_TYPE   deslocar, e ir ao estado 5
    STRING_TYPE   deslocar, e ir ao estado 6
    BOOLEAN_TYPE  deslocar, e ir ao estado 7
    MATRIZ_TYPE   deslocar, e ir ao estado 8
    VOID_TYPE     deslocar, e ir ao estado 9
    CHAR_TYPE     deslocar, e ir ao estado 11

    $padrão  reduzir usando a regra 57 (par_list)

    type      ir ao estado 132
    par_list  ir ao estado 162
    par_term  ir ao estado 134


Estado 150

   32 elseif_struct: ELSE_IF_STM . L_PARENTHESIS log_expr R_PARENTHESIS block

    L_PARENTHESIS  deslocar, e ir ao estado 163


Estado 151

   27 if_struct: IF_STM L_PARENTHESIS log_expr R_PARENTHESIS block else_struct .

    $padrão  reduzir usando a regra 27 (if_struct)


Estado 152

   29 else_struct: elseif_list . ELSE_STM block

    ELSE_STM  deslocar, e ir ao estado 164


Estado 153

   31 elseif_list: elseif_struct . elseif_list

    ELSE_IF_STM  deslocar, e ir ao estado 150

    $padrão  reduzir usando a regra 30 (elseif_list)

    elseif_list    ir ao estado 165
    elseif_struct  ir ao estado 153


Estado 154

   43 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr . SEMICOLON for_struct_stm R_PARENTHESIS $@2 block
   73 log_expr: log_expr . op_log comp_expr

    AND_OP     deslocar, e ir ao estado 79
    OR_OP      deslocar, e ir ao estado 80
    NOT_OP     deslocar, e ir ao estado 81
    SEMICOLON  deslocar, e ir ao estado 166

    op_log  ir ao estado 82


Estado 155

   40 while_struct: DO_STM block WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 167


Estado 156

   36 case_switch: CASE . literal_term DOUBLE_DOT stm_list BREAK SEMICOLON

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 51
    LITERAL_CHAR    deslocar, e ir ao estado 10
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16

    term            ir ao estado 101
    term_num        ir ao estado 47
    log_term        ir ao estado 48
    literal_term    ir ao estado 168
    literal_string  ir ao estado 103


Estado 157

   33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch . DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

    DEFAULT  deslocar, e ir ao estado 169


Estado 158

   35 case_list_switch: case_switch . case_list_switch

    CASE  deslocar, e ir ao estado 156

    $padrão  reduzir usando a regra 34 (case_list_switch)

    case_list_switch  ir ao estado 170
    case_switch       ir ao estado 158


Estado 159

   16 print_stm: PRINT L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS .

    $padrão  reduzir usando a regra 16 (print_stm)


Estado 160

   18 print_stm: PRINTF L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS .

    $padrão  reduzir usando a regra 18 (print_stm)


Estado 161

   46 fun_struct: type IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS L_KEY . stm_list R_KEY

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 2
    INT_TYPE        deslocar, e ir ao estado 3
    FLOAT_TYPE      deslocar, e ir ao estado 4
    DOUBLE_TYPE     deslocar, e ir ao estado 5
    STRING_TYPE     deslocar, e ir ao estado 6
    BOOLEAN_TYPE    deslocar, e ir ao estado 7
    MATRIZ_TYPE     deslocar, e ir ao estado 8
    VOID_TYPE       deslocar, e ir ao estado 9
    LITERAL_CHAR    deslocar, e ir ao estado 10
    CHAR_TYPE       deslocar, e ir ao estado 11
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17
    IF_STM          deslocar, e ir ao estado 18
    FOR_STM         deslocar, e ir ao estado 19
    DO_STM          deslocar, e ir ao estado 20
    WHILE_STM       deslocar, e ir ao estado 21
    SWITCH_STM      deslocar, e ir ao estado 22
    PRINT           deslocar, e ir ao estado 23
    PRINTF          deslocar, e ir ao estado 24

    stm_list        ir ao estado 171
    stm             ir ao estado 27
    decl            ir ao estado 28
    assingment      ir ao estado 29
    initialization  ir ao estado 30
    print_stm       ir ao estado 31
    expres_list     ir ao estado 32
    expr            ir ao estado 33
    cond_stm        ir ao estado 34
    if_struct       ir ao estado 35
    switch_struct   ir ao estado 36
    loop_stm        ir ao estado 37
    while_struct    ir ao estado 38
    for_struct      ir ao estado 39
    fun_struct      ir ao estado 40
    type            ir ao estado 41
    arit_expr       ir ao estado 42
    arit_expr_base  ir ao estado 43
    log_expr        ir ao estado 44
    comp_expr       ir ao estado 45
    term            ir ao estado 46
    term_num        ir ao estado 47
    log_term        ir ao estado 48
    literal_string  ir ao estado 49


Estado 162

   59 par_list: par_term COMMA par_list .

    $padrão  reduzir usando a regra 59 (par_list)


Estado 163

   32 elseif_struct: ELSE_IF_STM L_PARENTHESIS . log_expr R_PARENTHESIS block

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 51
    LITERAL_CHAR    deslocar, e ir ao estado 10
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17

    arit_expr       ir ao estado 95
    arit_expr_base  ir ao estado 43
    log_expr        ir ao estado 172
    comp_expr       ir ao estado 45
    term            ir ao estado 46
    term_num        ir ao estado 47
    log_term        ir ao estado 48
    literal_string  ir ao estado 49


Estado 164

   29 else_struct: elseif_list ELSE_STM . block

    L_KEY  deslocar, e ir ao estado 56

    block  ir ao estado 173


Estado 165

   31 elseif_list: elseif_struct elseif_list .

    $padrão  reduzir usando a regra 31 (elseif_list)


Estado 166

   43 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON . for_struct_stm R_PARENTHESIS $@2 block

    IDENTIFIER      deslocar, e ir ao estado 2
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 110

    assingment      ir ao estado 174
    for_struct_stm  ir ao estado 175
    arit_expr       ir ao estado 176
    arit_expr_base  ir ao estado 43
    term            ir ao estado 46
    term_num        ir ao estado 47
    log_term        ir ao estado 48


Estado 167

   40 while_struct: DO_STM block WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS SEMICOLON .

    $padrão  reduzir usando a regra 40 (while_struct)


Estado 168

   36 case_switch: CASE literal_term . DOUBLE_DOT stm_list BREAK SEMICOLON

    DOUBLE_DOT  deslocar, e ir ao estado 177


Estado 169

   33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT . DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

    DOUBLE_DOT  deslocar, e ir ao estado 178


Estado 170

   35 case_list_switch: case_switch case_list_switch .

    $padrão  reduzir usando a regra 35 (case_list_switch)


Estado 171

   46 fun_struct: type IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS L_KEY stm_list . R_KEY

    R_KEY  deslocar, e ir ao estado 179


Estado 172

   32 elseif_struct: ELSE_IF_STM L_PARENTHESIS log_expr . R_PARENTHESIS block
   73 log_expr: log_expr . op_log comp_expr

    AND_OP         deslocar, e ir ao estado 79
    OR_OP          deslocar, e ir ao estado 80
    NOT_OP         deslocar, e ir ao estado 81
    R_PARENTHESIS  deslocar, e ir ao estado 180

    op_log  ir ao estado 82


Estado 173

   29 else_struct: elseif_list ELSE_STM block .

    $padrão  reduzir usando a regra 29 (else_struct)


Estado 174

   45 for_struct_stm: assingment .

    $padrão  reduzir usando a regra 45 (for_struct_stm)


Estado 175

   43 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON for_struct_stm . R_PARENTHESIS $@2 block

    R_PARENTHESIS  deslocar, e ir ao estado 181


Estado 176

   44 for_struct_stm: arit_expr .
   62 arit_expr: arit_expr . PLUS_OP arit_expr_base
   63          | arit_expr . SUB_OP arit_expr_base
   64          | arit_expr . DIV_OP arit_expr_base
   65          | arit_expr . STAR arit_expr_base
   66          | arit_expr . MOD_OP arit_expr_base
   67          | arit_expr . INC_OP
   68          | arit_expr . DEC_OP

    PLUS_OP  deslocar, e ir ao estado 72
    SUB_OP   deslocar, e ir ao estado 73
    DIV_OP   deslocar, e ir ao estado 74
    STAR     deslocar, e ir ao estado 75
    MOD_OP   deslocar, e ir ao estado 76
    INC_OP   deslocar, e ir ao estado 77
    DEC_OP   deslocar, e ir ao estado 78

    $padrão  reduzir usando a regra 44 (for_struct_stm)


Estado 177

   36 case_switch: CASE literal_term DOUBLE_DOT . stm_list BREAK SEMICOLON

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 2
    INT_TYPE        deslocar, e ir ao estado 3
    FLOAT_TYPE      deslocar, e ir ao estado 4
    DOUBLE_TYPE     deslocar, e ir ao estado 5
    STRING_TYPE     deslocar, e ir ao estado 6
    BOOLEAN_TYPE    deslocar, e ir ao estado 7
    MATRIZ_TYPE     deslocar, e ir ao estado 8
    VOID_TYPE       deslocar, e ir ao estado 9
    LITERAL_CHAR    deslocar, e ir ao estado 10
    CHAR_TYPE       deslocar, e ir ao estado 11
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17
    IF_STM          deslocar, e ir ao estado 18
    FOR_STM         deslocar, e ir ao estado 19
    DO_STM          deslocar, e ir ao estado 20
    WHILE_STM       deslocar, e ir ao estado 21
    SWITCH_STM      deslocar, e ir ao estado 22
    PRINT           deslocar, e ir ao estado 23
    PRINTF          deslocar, e ir ao estado 24

    stm_list        ir ao estado 182
    stm             ir ao estado 27
    decl            ir ao estado 28
    assingment      ir ao estado 29
    initialization  ir ao estado 30
    print_stm       ir ao estado 31
    expres_list     ir ao estado 32
    expr            ir ao estado 33
    cond_stm        ir ao estado 34
    if_struct       ir ao estado 35
    switch_struct   ir ao estado 36
    loop_stm        ir ao estado 37
    while_struct    ir ao estado 38
    for_struct      ir ao estado 39
    fun_struct      ir ao estado 40
    type            ir ao estado 41
    arit_expr       ir ao estado 42
    arit_expr_base  ir ao estado 43
    log_expr        ir ao estado 44
    comp_expr       ir ao estado 45
    term            ir ao estado 46
    term_num        ir ao estado 47
    log_term        ir ao estado 48
    literal_string  ir ao estado 49


Estado 178

   33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT . stm_list BREAK SEMICOLON R_KEY

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 2
    INT_TYPE        deslocar, e ir ao estado 3
    FLOAT_TYPE      deslocar, e ir ao estado 4
    DOUBLE_TYPE     deslocar, e ir ao estado 5
    STRING_TYPE     deslocar, e ir ao estado 6
    BOOLEAN_TYPE    deslocar, e ir ao estado 7
    MATRIZ_TYPE     deslocar, e ir ao estado 8
    VOID_TYPE       deslocar, e ir ao estado 9
    LITERAL_CHAR    deslocar, e ir ao estado 10
    CHAR_TYPE       deslocar, e ir ao estado 11
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17
    IF_STM          deslocar, e ir ao estado 18
    FOR_STM         deslocar, e ir ao estado 19
    DO_STM          deslocar, e ir ao estado 20
    WHILE_STM       deslocar, e ir ao estado 21
    SWITCH_STM      deslocar, e ir ao estado 22
    PRINT           deslocar, e ir ao estado 23
    PRINTF          deslocar, e ir ao estado 24

    stm_list        ir ao estado 183
    stm             ir ao estado 27
    decl            ir ao estado 28
    assingment      ir ao estado 29
    initialization  ir ao estado 30
    print_stm       ir ao estado 31
    expres_list     ir ao estado 32
    expr            ir ao estado 33
    cond_stm        ir ao estado 34
    if_struct       ir ao estado 35
    switch_struct   ir ao estado 36
    loop_stm        ir ao estado 37
    while_struct    ir ao estado 38
    for_struct      ir ao estado 39
    fun_struct      ir ao estado 40
    type            ir ao estado 41
    arit_expr       ir ao estado 42
    arit_expr_base  ir ao estado 43
    log_expr        ir ao estado 44
    comp_expr       ir ao estado 45
    term            ir ao estado 46
    term_num        ir ao estado 47
    log_term        ir ao estado 48
    literal_string  ir ao estado 49


Estado 179

   46 fun_struct: type IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS L_KEY stm_list R_KEY .

    $padrão  reduzir usando a regra 46 (fun_struct)


Estado 180

   32 elseif_struct: ELSE_IF_STM L_PARENTHESIS log_expr R_PARENTHESIS . block

    L_KEY  deslocar, e ir ao estado 56

    block  ir ao estado 184


Estado 181

   43 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS . $@2 block

    $padrão  reduzir usando a regra 42 ($@2)

    $@2  ir ao estado 185


Estado 182

   36 case_switch: CASE literal_term DOUBLE_DOT stm_list . BREAK SEMICOLON

    BREAK  deslocar, e ir ao estado 186


Estado 183

   33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list . BREAK SEMICOLON R_KEY

    BREAK  deslocar, e ir ao estado 187


Estado 184

   32 elseif_struct: ELSE_IF_STM L_PARENTHESIS log_expr R_PARENTHESIS block .

    $padrão  reduzir usando a regra 32 (elseif_struct)


Estado 185

   43 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 . block

    L_KEY  deslocar, e ir ao estado 56

    block  ir ao estado 188


Estado 186

   36 case_switch: CASE literal_term DOUBLE_DOT stm_list BREAK . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 189


Estado 187

   33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK . SEMICOLON R_KEY

    SEMICOLON  deslocar, e ir ao estado 190


Estado 188

   43 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 block .

    $padrão  reduzir usando a regra 43 (for_struct)


Estado 189

   36 case_switch: CASE literal_term DOUBLE_DOT stm_list BREAK SEMICOLON .

    $padrão  reduzir usando a regra 36 (case_switch)


Estado 190

   33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON . R_KEY

    R_KEY  deslocar, e ir ao estado 191


Estado 191

   33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY .

    $padrão  reduzir usando a regra 33 (switch_struct)
