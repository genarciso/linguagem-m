Terminais sem uso na gramática

    FACT_OP
    L_BRACKET
    R_BRACKET
    CONTINUE
    CONSTANT
    RETURN
    EOL
    ADDRESS
    DOT
    MALLOC_OP
    FREE_OP
    CALLOC_OP


Estado 42 conflitos: 1 de redução/redução
Estado 51 conflitos: 1 de deslocamento/redução


Gramática

    0 $accept: program $end

    1 program: stm_list

    2 stm_list: stm SEMICOLON
    3         | stm SEMICOLON stm_list

    4 stm: decl
    5    | cond_stm
    6    | loop_stm
    7    | fun_struct
    8    | print_stm
    9    | expres_list
   10    | assingment
   11    | initialization

   12 decl: type id_list

   13 assingment: IDENTIFIER ASSINGMENT expr

   14 initialization: type IDENTIFIER ASSINGMENT expr

   15 print_stm: PRINT L_PARENTHESIS literal_string R_PARENTHESIS
   16          | PRINT L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS
   17          | PRINTF L_PARENTHESIS literal_string R_PARENTHESIS
   18          | PRINTF L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS

   19 id_list: IDENTIFIER
   20        | IDENTIFIER COMMA id_list

   21 expres_list: expr SEMICOLON
   22            | expr SEMICOLON expres_list

   23 expr: log_expr
   24     | arit_expr

   25 cond_stm: if_struct
   26         | switch_struct

   27 if_struct: IF_STM L_PARENTHESIS log_expr R_PARENTHESIS block else_struct

   28 else_struct: %empty
   29            | elseif_list ELSE_STM block

   30 elseif_list: %empty
   31            | elseif_struct elseif_list

   32 elseif_struct: ELSE_IF_STM L_PARENTHESIS log_expr R_PARENTHESIS block

   33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

   34 case_list_switch: %empty
   35                 | case_switch case_list_switch

   36 case_switch: CASE literal_term DOUBLE_DOT stm_list BREAK SEMICOLON

   37 loop_stm: while_struct
   38         | for_struct

   39 while_struct: WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS L_KEY stm_list R_KEY
   40             | DO_STM L_KEY stm_list R_KEY WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS

   41 for_struct: FOR_STM L_PARENTHESIS SEMICOLON log_expr SEMICOLON R_PARENTHESIS L_KEY stm_list R_KEY

   42 fun_struct: type IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS L_KEY stm_list R_KEY

   43 $@1: %empty

   44 block: L_KEY $@1 stm_list R_KEY

   45 type: VOID_TYPE
   46     | INT_TYPE
   47     | FLOAT_TYPE
   48     | DOUBLE_TYPE
   49     | CHAR_TYPE
   50     | STRING_TYPE
   51     | BOOLEAN_TYPE
   52     | MATRIZ_TYPE

   53 par_list: %empty
   54         | par_term
   55         | par_term COMMA par_list

   56 par_term: type IDENTIFIER

   57 arit_expr: term
   58          | L_PARENTHESIS arit_expr R_PARENTHESIS
   59          | arit_expr PLUS_OP term
   60          | arit_expr SUB_OP term
   61          | arit_expr DIV_OP term
   62          | arit_expr STAR term
   63          | arit_expr MOD_OP term
   64          | arit_expr INC_OP
   65          | arit_expr DEC_OP

   66 log_expr: comp_expr
   67         | L_PARENTHESIS log_expr R_PARENTHESIS
   68         | log_expr op_log comp_expr

   69 comp_expr: arit_expr
   70          | comp_expr op_comp arit_expr
   71          | literal_string EQ_OP literal_string
   72          | literal_string NE_OP literal_string

   73 op_log: AND_OP
   74       | OR_OP
   75       | NOT_OP

   76 op_comp: SE_OP
   77        | S_OP
   78        | GE_OP
   79        | G_OP
   80        | EQ_OP
   81        | NE_OP

   82 term: term_num
   83     | log_term
   84     | IDENTIFIER

   85 term_num: LITERAL_INT
   86         | LITERAL_FLOAT
   87         | LITERAL_DOUBLE

   88 log_term: TRUE_VAL
   89         | FALSE_VAL

   90 literal_term: term
   91             | literal_string

   92 literal_string: LITERAL_CHAR
   93               | LITERAL_STRING


Terminais, com as regras onde eles aparecem

    $end (0) 0
    error (256)
    LITERAL_STRING <sValue> (258) 93
    IDENTIFIER <sValue> (259) 13 14 19 20 42 56 84
    INT_TYPE <sValue> (260) 46
    FLOAT_TYPE <sValue> (261) 47
    DOUBLE_TYPE <sValue> (262) 48
    STRING_TYPE <sValue> (263) 50
    BOOLEAN_TYPE <sValue> (264) 51
    MATRIZ_TYPE <sValue> (265) 52
    VOID_TYPE <sValue> (266) 45
    LITERAL_CHAR <sValue> (267) 92
    CHAR_TYPE <sValue> (268) 49
    LITERAL_INT <iValue> (269) 85
    LITERAL_FLOAT <fValue> (270) 86
    LITERAL_DOUBLE <dValue> (271) 87
    TRUE_VAL <bValue> (272) 88
    FALSE_VAL <bValue> (273) 89
    PLUS_OP (274) 59
    SUB_OP (275) 60
    DIV_OP (276) 61
    STAR (277) 62
    MOD_OP (278) 63
    FACT_OP (279)
    ASSINGMENT (280) 13 14
    INC_OP (281) 64
    DEC_OP (282) 65
    GE_OP (283) 78
    SE_OP (284) 76
    EQ_OP (285) 71 80
    NE_OP (286) 72 81
    G_OP (287) 79
    S_OP (288) 77
    AND_OP (289) 73
    OR_OP (290) 74
    NOT_OP (291) 75
    L_PARENTHESIS (292) 15 16 17 18 27 32 33 39 40 41 42 58 67
    R_PARENTHESIS (293) 15 16 17 18 27 32 33 39 40 41 42 58 67
    L_KEY (294) 33 39 40 41 42 44
    R_KEY (295) 33 39 40 41 42 44
    L_BRACKET (296)
    R_BRACKET (297)
    IF_STM (298) 27
    ELSE_STM (299) 29
    ELSE_IF_STM (300) 32
    FOR_STM (301) 41
    DO_STM (302) 40
    WHILE_STM (303) 39 40
    SWITCH_STM (304) 33
    CONTINUE (305)
    BREAK (306) 33 36
    PRINT (307) 15 16
    PRINTF (308) 17 18
    CASE (309) 36
    DEFAULT (310) 33
    CONSTANT (311)
    RETURN (312)
    EOL (313)
    ADDRESS (314)
    SEMICOLON (315) 2 3 21 22 33 36 41
    COMMA (316) 16 18 20 55
    DOT (317)
    DOUBLE_DOT (318) 33 36
    MALLOC_OP (319)
    FREE_OP (320)
    CALLOC_OP (321)


Não terminais com as regras onde eles aparecem

    $accept (67)
        à esquerda: 0
    program (68)
        à esquerda: 1
        à direita: 0
    stm_list <sValue> (69)
        à esquerda: 2 3
        à direita: 1 3 33 36 39 40 41 42 44
    stm <sValue> (70)
        à esquerda: 4 5 6 7 8 9 10 11
        à direita: 2 3
    decl <sValue> (71)
        à esquerda: 12
        à direita: 4
    assingment <sValue> (72)
        à esquerda: 13
        à direita: 10
    initialization <sValue> (73)
        à esquerda: 14
        à direita: 11
    print_stm <sValue> (74)
        à esquerda: 15 16 17 18
        à direita: 8
    id_list <sValue> (75)
        à esquerda: 19 20
        à direita: 12 16 18 20
    expres_list <sValue> (76)
        à esquerda: 21 22
        à direita: 9 22
    expr <strValue> (77)
        à esquerda: 23 24
        à direita: 13 14 21 22
    cond_stm <sValue> (78)
        à esquerda: 25 26
        à direita: 5
    if_struct <sValue> (79)
        à esquerda: 27
        à direita: 25
    else_struct <sValue> (80)
        à esquerda: 28 29
        à direita: 27
    elseif_list <sValue> (81)
        à esquerda: 30 31
        à direita: 29 31
    elseif_struct <sValue> (82)
        à esquerda: 32
        à direita: 31
    switch_struct <sValue> (83)
        à esquerda: 33
        à direita: 26
    case_list_switch <sValue> (84)
        à esquerda: 34 35
        à direita: 33 35
    case_switch <sValue> (85)
        à esquerda: 36
        à direita: 35
    loop_stm <sValue> (86)
        à esquerda: 37 38
        à direita: 6
    while_struct <sValue> (87)
        à esquerda: 39 40
        à direita: 37
    for_struct <sValue> (88)
        à esquerda: 41
        à direita: 38
    fun_struct <sValue> (89)
        à esquerda: 42
        à direita: 7
    block <sValue> (90)
        à esquerda: 44
        à direita: 27 29 32
    $@1 (91)
        à esquerda: 43
        à direita: 44
    type <sValue> (92)
        à esquerda: 45 46 47 48 49 50 51 52
        à direita: 12 14 42 56
    par_list <sValue> (93)
        à esquerda: 53 54 55
        à direita: 42 55
    par_term <sValue> (94)
        à esquerda: 56
        à direita: 54 55
    arit_expr <strValue> (95)
        à esquerda: 57 58 59 60 61 62 63 64 65
        à direita: 24 58 59 60 61 62 63 64 65 69 70
    log_expr <strValue> (96)
        à esquerda: 66 67 68
        à direita: 23 27 32 39 40 41 67 68
    comp_expr <strValue> (97)
        à esquerda: 69 70 71 72
        à direita: 66 68 70
    op_log <sValue> (98)
        à esquerda: 73 74 75
        à direita: 68
    op_comp <sValue> (99)
        à esquerda: 76 77 78 79 80 81
        à direita: 70
    term <strValue> (100)
        à esquerda: 82 83 84
        à direita: 57 59 60 61 62 63 90
    term_num <strValue> (101)
        à esquerda: 85 86 87
        à direita: 82
    log_term <strValue> (102)
        à esquerda: 88 89
        à direita: 83
    literal_term <strValue> (103)
        à esquerda: 90 91
        à direita: 33 36
    literal_string <strValue> (104)
        à esquerda: 92 93
        à direita: 15 16 17 18 71 72 91


Estado 0

    0 $accept: . program $end

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 2
    INT_TYPE        deslocar, e ir ao estado 3
    FLOAT_TYPE      deslocar, e ir ao estado 4
    DOUBLE_TYPE     deslocar, e ir ao estado 5
    STRING_TYPE     deslocar, e ir ao estado 6
    BOOLEAN_TYPE    deslocar, e ir ao estado 7
    MATRIZ_TYPE     deslocar, e ir ao estado 8
    VOID_TYPE       deslocar, e ir ao estado 9
    LITERAL_CHAR    deslocar, e ir ao estado 10
    CHAR_TYPE       deslocar, e ir ao estado 11
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17
    IF_STM          deslocar, e ir ao estado 18
    FOR_STM         deslocar, e ir ao estado 19
    DO_STM          deslocar, e ir ao estado 20
    WHILE_STM       deslocar, e ir ao estado 21
    SWITCH_STM      deslocar, e ir ao estado 22
    PRINT           deslocar, e ir ao estado 23
    PRINTF          deslocar, e ir ao estado 24

    program         ir ao estado 25
    stm_list        ir ao estado 26
    stm             ir ao estado 27
    decl            ir ao estado 28
    assingment      ir ao estado 29
    initialization  ir ao estado 30
    print_stm       ir ao estado 31
    expres_list     ir ao estado 32
    expr            ir ao estado 33
    cond_stm        ir ao estado 34
    if_struct       ir ao estado 35
    switch_struct   ir ao estado 36
    loop_stm        ir ao estado 37
    while_struct    ir ao estado 38
    for_struct      ir ao estado 39
    fun_struct      ir ao estado 40
    type            ir ao estado 41
    arit_expr       ir ao estado 42
    log_expr        ir ao estado 43
    comp_expr       ir ao estado 44
    term            ir ao estado 45
    term_num        ir ao estado 46
    log_term        ir ao estado 47
    literal_string  ir ao estado 48


Estado 1

   93 literal_string: LITERAL_STRING .

    $padrão  reduzir usando a regra 93 (literal_string)


Estado 2

   13 assingment: IDENTIFIER . ASSINGMENT expr
   84 term: IDENTIFIER .

    ASSINGMENT  deslocar, e ir ao estado 49

    $padrão  reduzir usando a regra 84 (term)


Estado 3

   46 type: INT_TYPE .

    $padrão  reduzir usando a regra 46 (type)


Estado 4

   47 type: FLOAT_TYPE .

    $padrão  reduzir usando a regra 47 (type)


Estado 5

   48 type: DOUBLE_TYPE .

    $padrão  reduzir usando a regra 48 (type)


Estado 6

   50 type: STRING_TYPE .

    $padrão  reduzir usando a regra 50 (type)


Estado 7

   51 type: BOOLEAN_TYPE .

    $padrão  reduzir usando a regra 51 (type)


Estado 8

   52 type: MATRIZ_TYPE .

    $padrão  reduzir usando a regra 52 (type)


Estado 9

   45 type: VOID_TYPE .

    $padrão  reduzir usando a regra 45 (type)


Estado 10

   92 literal_string: LITERAL_CHAR .

    $padrão  reduzir usando a regra 92 (literal_string)


Estado 11

   49 type: CHAR_TYPE .

    $padrão  reduzir usando a regra 49 (type)


Estado 12

   85 term_num: LITERAL_INT .

    $padrão  reduzir usando a regra 85 (term_num)


Estado 13

   86 term_num: LITERAL_FLOAT .

    $padrão  reduzir usando a regra 86 (term_num)


Estado 14

   87 term_num: LITERAL_DOUBLE .

    $padrão  reduzir usando a regra 87 (term_num)


Estado 15

   88 log_term: TRUE_VAL .

    $padrão  reduzir usando a regra 88 (log_term)


Estado 16

   89 log_term: FALSE_VAL .

    $padrão  reduzir usando a regra 89 (log_term)


Estado 17

   58 arit_expr: L_PARENTHESIS . arit_expr R_PARENTHESIS
   67 log_expr: L_PARENTHESIS . log_expr R_PARENTHESIS

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 50
    LITERAL_CHAR    deslocar, e ir ao estado 10
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17

    arit_expr       ir ao estado 51
    log_expr        ir ao estado 52
    comp_expr       ir ao estado 44
    term            ir ao estado 45
    term_num        ir ao estado 46
    log_term        ir ao estado 47
    literal_string  ir ao estado 48


Estado 18

   27 if_struct: IF_STM . L_PARENTHESIS log_expr R_PARENTHESIS block else_struct

    L_PARENTHESIS  deslocar, e ir ao estado 53


Estado 19

   41 for_struct: FOR_STM . L_PARENTHESIS SEMICOLON log_expr SEMICOLON R_PARENTHESIS L_KEY stm_list R_KEY

    L_PARENTHESIS  deslocar, e ir ao estado 54


Estado 20

   40 while_struct: DO_STM . L_KEY stm_list R_KEY WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS

    L_KEY  deslocar, e ir ao estado 55


Estado 21

   39 while_struct: WHILE_STM . L_PARENTHESIS log_expr R_PARENTHESIS L_KEY stm_list R_KEY

    L_PARENTHESIS  deslocar, e ir ao estado 56


Estado 22

   33 switch_struct: SWITCH_STM . L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

    L_PARENTHESIS  deslocar, e ir ao estado 57


Estado 23

   15 print_stm: PRINT . L_PARENTHESIS literal_string R_PARENTHESIS
   16          | PRINT . L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS

    L_PARENTHESIS  deslocar, e ir ao estado 58


Estado 24

   17 print_stm: PRINTF . L_PARENTHESIS literal_string R_PARENTHESIS
   18          | PRINTF . L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS

    L_PARENTHESIS  deslocar, e ir ao estado 59


Estado 25

    0 $accept: program . $end

    $end  deslocar, e ir ao estado 60


Estado 26

    1 program: stm_list .

    $padrão  reduzir usando a regra 1 (program)


Estado 27

    2 stm_list: stm . SEMICOLON
    3         | stm . SEMICOLON stm_list

    SEMICOLON  deslocar, e ir ao estado 61


Estado 28

    4 stm: decl .

    $padrão  reduzir usando a regra 4 (stm)


Estado 29

   10 stm: assingment .

    $padrão  reduzir usando a regra 10 (stm)


Estado 30

   11 stm: initialization .

    $padrão  reduzir usando a regra 11 (stm)


Estado 31

    8 stm: print_stm .

    $padrão  reduzir usando a regra 8 (stm)


Estado 32

    9 stm: expres_list .

    $padrão  reduzir usando a regra 9 (stm)


Estado 33

   21 expres_list: expr . SEMICOLON
   22            | expr . SEMICOLON expres_list

    SEMICOLON  deslocar, e ir ao estado 62


Estado 34

    5 stm: cond_stm .

    $padrão  reduzir usando a regra 5 (stm)


Estado 35

   25 cond_stm: if_struct .

    $padrão  reduzir usando a regra 25 (cond_stm)


Estado 36

   26 cond_stm: switch_struct .

    $padrão  reduzir usando a regra 26 (cond_stm)


Estado 37

    6 stm: loop_stm .

    $padrão  reduzir usando a regra 6 (stm)


Estado 38

   37 loop_stm: while_struct .

    $padrão  reduzir usando a regra 37 (loop_stm)


Estado 39

   38 loop_stm: for_struct .

    $padrão  reduzir usando a regra 38 (loop_stm)


Estado 40

    7 stm: fun_struct .

    $padrão  reduzir usando a regra 7 (stm)


Estado 41

   12 decl: type . id_list
   14 initialization: type . IDENTIFIER ASSINGMENT expr
   42 fun_struct: type . IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS L_KEY stm_list R_KEY

    IDENTIFIER  deslocar, e ir ao estado 63

    id_list  ir ao estado 64


Estado 42

   24 expr: arit_expr .
   59 arit_expr: arit_expr . PLUS_OP term
   60          | arit_expr . SUB_OP term
   61          | arit_expr . DIV_OP term
   62          | arit_expr . STAR term
   63          | arit_expr . MOD_OP term
   64          | arit_expr . INC_OP
   65          | arit_expr . DEC_OP
   69 comp_expr: arit_expr .

    PLUS_OP  deslocar, e ir ao estado 65
    SUB_OP   deslocar, e ir ao estado 66
    DIV_OP   deslocar, e ir ao estado 67
    STAR     deslocar, e ir ao estado 68
    MOD_OP   deslocar, e ir ao estado 69
    INC_OP   deslocar, e ir ao estado 70
    DEC_OP   deslocar, e ir ao estado 71

    SEMICOLON  reduzir usando a regra 24 (expr)
    SEMICOLON  [reduzir usando a regra 69 (comp_expr)]
    $padrão   reduzir usando a regra 69 (comp_expr)


Estado 43

   23 expr: log_expr .
   68 log_expr: log_expr . op_log comp_expr

    AND_OP  deslocar, e ir ao estado 72
    OR_OP   deslocar, e ir ao estado 73
    NOT_OP  deslocar, e ir ao estado 74

    $padrão  reduzir usando a regra 23 (expr)

    op_log  ir ao estado 75


Estado 44

   66 log_expr: comp_expr .
   70 comp_expr: comp_expr . op_comp arit_expr

    GE_OP  deslocar, e ir ao estado 76
    SE_OP  deslocar, e ir ao estado 77
    EQ_OP  deslocar, e ir ao estado 78
    NE_OP  deslocar, e ir ao estado 79
    G_OP   deslocar, e ir ao estado 80
    S_OP   deslocar, e ir ao estado 81

    $padrão  reduzir usando a regra 66 (log_expr)

    op_comp  ir ao estado 82


Estado 45

   57 arit_expr: term .

    $padrão  reduzir usando a regra 57 (arit_expr)


Estado 46

   82 term: term_num .

    $padrão  reduzir usando a regra 82 (term)


Estado 47

   83 term: log_term .

    $padrão  reduzir usando a regra 83 (term)


Estado 48

   71 comp_expr: literal_string . EQ_OP literal_string
   72          | literal_string . NE_OP literal_string

    EQ_OP  deslocar, e ir ao estado 83
    NE_OP  deslocar, e ir ao estado 84


Estado 49

   13 assingment: IDENTIFIER ASSINGMENT . expr

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 50
    LITERAL_CHAR    deslocar, e ir ao estado 10
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17

    expr            ir ao estado 85
    arit_expr       ir ao estado 42
    log_expr        ir ao estado 43
    comp_expr       ir ao estado 44
    term            ir ao estado 45
    term_num        ir ao estado 46
    log_term        ir ao estado 47
    literal_string  ir ao estado 48


Estado 50

   84 term: IDENTIFIER .

    $padrão  reduzir usando a regra 84 (term)


Estado 51

   58 arit_expr: L_PARENTHESIS arit_expr . R_PARENTHESIS
   59          | arit_expr . PLUS_OP term
   60          | arit_expr . SUB_OP term
   61          | arit_expr . DIV_OP term
   62          | arit_expr . STAR term
   63          | arit_expr . MOD_OP term
   64          | arit_expr . INC_OP
   65          | arit_expr . DEC_OP
   69 comp_expr: arit_expr .

    PLUS_OP        deslocar, e ir ao estado 65
    SUB_OP         deslocar, e ir ao estado 66
    DIV_OP         deslocar, e ir ao estado 67
    STAR           deslocar, e ir ao estado 68
    MOD_OP         deslocar, e ir ao estado 69
    INC_OP         deslocar, e ir ao estado 70
    DEC_OP         deslocar, e ir ao estado 71
    R_PARENTHESIS  deslocar, e ir ao estado 86

    R_PARENTHESIS  [reduzir usando a regra 69 (comp_expr)]
    $padrão       reduzir usando a regra 69 (comp_expr)


Estado 52

   67 log_expr: L_PARENTHESIS log_expr . R_PARENTHESIS
   68         | log_expr . op_log comp_expr

    AND_OP         deslocar, e ir ao estado 72
    OR_OP          deslocar, e ir ao estado 73
    NOT_OP         deslocar, e ir ao estado 74
    R_PARENTHESIS  deslocar, e ir ao estado 87

    op_log  ir ao estado 75


Estado 53

   27 if_struct: IF_STM L_PARENTHESIS . log_expr R_PARENTHESIS block else_struct

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 50
    LITERAL_CHAR    deslocar, e ir ao estado 10
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17

    arit_expr       ir ao estado 88
    log_expr        ir ao estado 89
    comp_expr       ir ao estado 44
    term            ir ao estado 45
    term_num        ir ao estado 46
    log_term        ir ao estado 47
    literal_string  ir ao estado 48


Estado 54

   41 for_struct: FOR_STM L_PARENTHESIS . SEMICOLON log_expr SEMICOLON R_PARENTHESIS L_KEY stm_list R_KEY

    SEMICOLON  deslocar, e ir ao estado 90


Estado 55

   40 while_struct: DO_STM L_KEY . stm_list R_KEY WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 2
    INT_TYPE        deslocar, e ir ao estado 3
    FLOAT_TYPE      deslocar, e ir ao estado 4
    DOUBLE_TYPE     deslocar, e ir ao estado 5
    STRING_TYPE     deslocar, e ir ao estado 6
    BOOLEAN_TYPE    deslocar, e ir ao estado 7
    MATRIZ_TYPE     deslocar, e ir ao estado 8
    VOID_TYPE       deslocar, e ir ao estado 9
    LITERAL_CHAR    deslocar, e ir ao estado 10
    CHAR_TYPE       deslocar, e ir ao estado 11
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17
    IF_STM          deslocar, e ir ao estado 18
    FOR_STM         deslocar, e ir ao estado 19
    DO_STM          deslocar, e ir ao estado 20
    WHILE_STM       deslocar, e ir ao estado 21
    SWITCH_STM      deslocar, e ir ao estado 22
    PRINT           deslocar, e ir ao estado 23
    PRINTF          deslocar, e ir ao estado 24

    stm_list        ir ao estado 91
    stm             ir ao estado 27
    decl            ir ao estado 28
    assingment      ir ao estado 29
    initialization  ir ao estado 30
    print_stm       ir ao estado 31
    expres_list     ir ao estado 32
    expr            ir ao estado 33
    cond_stm        ir ao estado 34
    if_struct       ir ao estado 35
    switch_struct   ir ao estado 36
    loop_stm        ir ao estado 37
    while_struct    ir ao estado 38
    for_struct      ir ao estado 39
    fun_struct      ir ao estado 40
    type            ir ao estado 41
    arit_expr       ir ao estado 42
    log_expr        ir ao estado 43
    comp_expr       ir ao estado 44
    term            ir ao estado 45
    term_num        ir ao estado 46
    log_term        ir ao estado 47
    literal_string  ir ao estado 48


Estado 56

   39 while_struct: WHILE_STM L_PARENTHESIS . log_expr R_PARENTHESIS L_KEY stm_list R_KEY

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 50
    LITERAL_CHAR    deslocar, e ir ao estado 10
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17

    arit_expr       ir ao estado 88
    log_expr        ir ao estado 92
    comp_expr       ir ao estado 44
    term            ir ao estado 45
    term_num        ir ao estado 46
    log_term        ir ao estado 47
    literal_string  ir ao estado 48


Estado 57

   33 switch_struct: SWITCH_STM L_PARENTHESIS . literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 50
    LITERAL_CHAR    deslocar, e ir ao estado 10
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16

    term            ir ao estado 93
    term_num        ir ao estado 46
    log_term        ir ao estado 47
    literal_term    ir ao estado 94
    literal_string  ir ao estado 95


Estado 58

   15 print_stm: PRINT L_PARENTHESIS . literal_string R_PARENTHESIS
   16          | PRINT L_PARENTHESIS . literal_string COMMA id_list R_PARENTHESIS

    LITERAL_STRING  deslocar, e ir ao estado 1
    LITERAL_CHAR    deslocar, e ir ao estado 10

    literal_string  ir ao estado 96


Estado 59

   17 print_stm: PRINTF L_PARENTHESIS . literal_string R_PARENTHESIS
   18          | PRINTF L_PARENTHESIS . literal_string COMMA id_list R_PARENTHESIS

    LITERAL_STRING  deslocar, e ir ao estado 1
    LITERAL_CHAR    deslocar, e ir ao estado 10

    literal_string  ir ao estado 97


Estado 60

    0 $accept: program $end .

    $padrão  aceitar


Estado 61

    2 stm_list: stm SEMICOLON .
    3         | stm SEMICOLON . stm_list

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 2
    INT_TYPE        deslocar, e ir ao estado 3
    FLOAT_TYPE      deslocar, e ir ao estado 4
    DOUBLE_TYPE     deslocar, e ir ao estado 5
    STRING_TYPE     deslocar, e ir ao estado 6
    BOOLEAN_TYPE    deslocar, e ir ao estado 7
    MATRIZ_TYPE     deslocar, e ir ao estado 8
    VOID_TYPE       deslocar, e ir ao estado 9
    LITERAL_CHAR    deslocar, e ir ao estado 10
    CHAR_TYPE       deslocar, e ir ao estado 11
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17
    IF_STM          deslocar, e ir ao estado 18
    FOR_STM         deslocar, e ir ao estado 19
    DO_STM          deslocar, e ir ao estado 20
    WHILE_STM       deslocar, e ir ao estado 21
    SWITCH_STM      deslocar, e ir ao estado 22
    PRINT           deslocar, e ir ao estado 23
    PRINTF          deslocar, e ir ao estado 24

    $padrão  reduzir usando a regra 2 (stm_list)

    stm_list        ir ao estado 98
    stm             ir ao estado 27
    decl            ir ao estado 28
    assingment      ir ao estado 29
    initialization  ir ao estado 30
    print_stm       ir ao estado 31
    expres_list     ir ao estado 32
    expr            ir ao estado 33
    cond_stm        ir ao estado 34
    if_struct       ir ao estado 35
    switch_struct   ir ao estado 36
    loop_stm        ir ao estado 37
    while_struct    ir ao estado 38
    for_struct      ir ao estado 39
    fun_struct      ir ao estado 40
    type            ir ao estado 41
    arit_expr       ir ao estado 42
    log_expr        ir ao estado 43
    comp_expr       ir ao estado 44
    term            ir ao estado 45
    term_num        ir ao estado 46
    log_term        ir ao estado 47
    literal_string  ir ao estado 48


Estado 62

   21 expres_list: expr SEMICOLON .
   22            | expr SEMICOLON . expres_list

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 50
    LITERAL_CHAR    deslocar, e ir ao estado 10
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17

    $padrão  reduzir usando a regra 21 (expres_list)

    expres_list     ir ao estado 99
    expr            ir ao estado 33
    arit_expr       ir ao estado 42
    log_expr        ir ao estado 43
    comp_expr       ir ao estado 44
    term            ir ao estado 45
    term_num        ir ao estado 46
    log_term        ir ao estado 47
    literal_string  ir ao estado 48


Estado 63

   14 initialization: type IDENTIFIER . ASSINGMENT expr
   19 id_list: IDENTIFIER .
   20        | IDENTIFIER . COMMA id_list
   42 fun_struct: type IDENTIFIER . L_PARENTHESIS par_list R_PARENTHESIS L_KEY stm_list R_KEY

    ASSINGMENT     deslocar, e ir ao estado 100
    L_PARENTHESIS  deslocar, e ir ao estado 101
    COMMA          deslocar, e ir ao estado 102

    $padrão  reduzir usando a regra 19 (id_list)


Estado 64

   12 decl: type id_list .

    $padrão  reduzir usando a regra 12 (decl)


Estado 65

   59 arit_expr: arit_expr PLUS_OP . term

    IDENTIFIER      deslocar, e ir ao estado 50
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16

    term      ir ao estado 103
    term_num  ir ao estado 46
    log_term  ir ao estado 47


Estado 66

   60 arit_expr: arit_expr SUB_OP . term

    IDENTIFIER      deslocar, e ir ao estado 50
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16

    term      ir ao estado 104
    term_num  ir ao estado 46
    log_term  ir ao estado 47


Estado 67

   61 arit_expr: arit_expr DIV_OP . term

    IDENTIFIER      deslocar, e ir ao estado 50
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16

    term      ir ao estado 105
    term_num  ir ao estado 46
    log_term  ir ao estado 47


Estado 68

   62 arit_expr: arit_expr STAR . term

    IDENTIFIER      deslocar, e ir ao estado 50
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16

    term      ir ao estado 106
    term_num  ir ao estado 46
    log_term  ir ao estado 47


Estado 69

   63 arit_expr: arit_expr MOD_OP . term

    IDENTIFIER      deslocar, e ir ao estado 50
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16

    term      ir ao estado 107
    term_num  ir ao estado 46
    log_term  ir ao estado 47


Estado 70

   64 arit_expr: arit_expr INC_OP .

    $padrão  reduzir usando a regra 64 (arit_expr)


Estado 71

   65 arit_expr: arit_expr DEC_OP .

    $padrão  reduzir usando a regra 65 (arit_expr)


Estado 72

   73 op_log: AND_OP .

    $padrão  reduzir usando a regra 73 (op_log)


Estado 73

   74 op_log: OR_OP .

    $padrão  reduzir usando a regra 74 (op_log)


Estado 74

   75 op_log: NOT_OP .

    $padrão  reduzir usando a regra 75 (op_log)


Estado 75

   68 log_expr: log_expr op_log . comp_expr

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 50
    LITERAL_CHAR    deslocar, e ir ao estado 10
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 108

    arit_expr       ir ao estado 88
    comp_expr       ir ao estado 109
    term            ir ao estado 45
    term_num        ir ao estado 46
    log_term        ir ao estado 47
    literal_string  ir ao estado 48


Estado 76

   78 op_comp: GE_OP .

    $padrão  reduzir usando a regra 78 (op_comp)


Estado 77

   76 op_comp: SE_OP .

    $padrão  reduzir usando a regra 76 (op_comp)


Estado 78

   80 op_comp: EQ_OP .

    $padrão  reduzir usando a regra 80 (op_comp)


Estado 79

   81 op_comp: NE_OP .

    $padrão  reduzir usando a regra 81 (op_comp)


Estado 80

   79 op_comp: G_OP .

    $padrão  reduzir usando a regra 79 (op_comp)


Estado 81

   77 op_comp: S_OP .

    $padrão  reduzir usando a regra 77 (op_comp)


Estado 82

   70 comp_expr: comp_expr op_comp . arit_expr

    IDENTIFIER      deslocar, e ir ao estado 50
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 108

    arit_expr  ir ao estado 110
    term       ir ao estado 45
    term_num   ir ao estado 46
    log_term   ir ao estado 47


Estado 83

   71 comp_expr: literal_string EQ_OP . literal_string

    LITERAL_STRING  deslocar, e ir ao estado 1
    LITERAL_CHAR    deslocar, e ir ao estado 10

    literal_string  ir ao estado 111


Estado 84

   72 comp_expr: literal_string NE_OP . literal_string

    LITERAL_STRING  deslocar, e ir ao estado 1
    LITERAL_CHAR    deslocar, e ir ao estado 10

    literal_string  ir ao estado 112


Estado 85

   13 assingment: IDENTIFIER ASSINGMENT expr .

    $padrão  reduzir usando a regra 13 (assingment)


Estado 86

   58 arit_expr: L_PARENTHESIS arit_expr R_PARENTHESIS .

    $padrão  reduzir usando a regra 58 (arit_expr)


Estado 87

   67 log_expr: L_PARENTHESIS log_expr R_PARENTHESIS .

    $padrão  reduzir usando a regra 67 (log_expr)


Estado 88

   59 arit_expr: arit_expr . PLUS_OP term
   60          | arit_expr . SUB_OP term
   61          | arit_expr . DIV_OP term
   62          | arit_expr . STAR term
   63          | arit_expr . MOD_OP term
   64          | arit_expr . INC_OP
   65          | arit_expr . DEC_OP
   69 comp_expr: arit_expr .

    PLUS_OP  deslocar, e ir ao estado 65
    SUB_OP   deslocar, e ir ao estado 66
    DIV_OP   deslocar, e ir ao estado 67
    STAR     deslocar, e ir ao estado 68
    MOD_OP   deslocar, e ir ao estado 69
    INC_OP   deslocar, e ir ao estado 70
    DEC_OP   deslocar, e ir ao estado 71

    $padrão  reduzir usando a regra 69 (comp_expr)


Estado 89

   27 if_struct: IF_STM L_PARENTHESIS log_expr . R_PARENTHESIS block else_struct
   68 log_expr: log_expr . op_log comp_expr

    AND_OP         deslocar, e ir ao estado 72
    OR_OP          deslocar, e ir ao estado 73
    NOT_OP         deslocar, e ir ao estado 74
    R_PARENTHESIS  deslocar, e ir ao estado 113

    op_log  ir ao estado 75


Estado 90

   41 for_struct: FOR_STM L_PARENTHESIS SEMICOLON . log_expr SEMICOLON R_PARENTHESIS L_KEY stm_list R_KEY

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 50
    LITERAL_CHAR    deslocar, e ir ao estado 10
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17

    arit_expr       ir ao estado 88
    log_expr        ir ao estado 114
    comp_expr       ir ao estado 44
    term            ir ao estado 45
    term_num        ir ao estado 46
    log_term        ir ao estado 47
    literal_string  ir ao estado 48


Estado 91

   40 while_struct: DO_STM L_KEY stm_list . R_KEY WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS

    R_KEY  deslocar, e ir ao estado 115


Estado 92

   39 while_struct: WHILE_STM L_PARENTHESIS log_expr . R_PARENTHESIS L_KEY stm_list R_KEY
   68 log_expr: log_expr . op_log comp_expr

    AND_OP         deslocar, e ir ao estado 72
    OR_OP          deslocar, e ir ao estado 73
    NOT_OP         deslocar, e ir ao estado 74
    R_PARENTHESIS  deslocar, e ir ao estado 116

    op_log  ir ao estado 75


Estado 93

   90 literal_term: term .

    $padrão  reduzir usando a regra 90 (literal_term)


Estado 94

   33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term . R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

    R_PARENTHESIS  deslocar, e ir ao estado 117


Estado 95

   91 literal_term: literal_string .

    $padrão  reduzir usando a regra 91 (literal_term)


Estado 96

   15 print_stm: PRINT L_PARENTHESIS literal_string . R_PARENTHESIS
   16          | PRINT L_PARENTHESIS literal_string . COMMA id_list R_PARENTHESIS

    R_PARENTHESIS  deslocar, e ir ao estado 118
    COMMA          deslocar, e ir ao estado 119


Estado 97

   17 print_stm: PRINTF L_PARENTHESIS literal_string . R_PARENTHESIS
   18          | PRINTF L_PARENTHESIS literal_string . COMMA id_list R_PARENTHESIS

    R_PARENTHESIS  deslocar, e ir ao estado 120
    COMMA          deslocar, e ir ao estado 121


Estado 98

    3 stm_list: stm SEMICOLON stm_list .

    $padrão  reduzir usando a regra 3 (stm_list)


Estado 99

   22 expres_list: expr SEMICOLON expres_list .

    $padrão  reduzir usando a regra 22 (expres_list)


Estado 100

   14 initialization: type IDENTIFIER ASSINGMENT . expr

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 50
    LITERAL_CHAR    deslocar, e ir ao estado 10
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17

    expr            ir ao estado 122
    arit_expr       ir ao estado 42
    log_expr        ir ao estado 43
    comp_expr       ir ao estado 44
    term            ir ao estado 45
    term_num        ir ao estado 46
    log_term        ir ao estado 47
    literal_string  ir ao estado 48


Estado 101

   42 fun_struct: type IDENTIFIER L_PARENTHESIS . par_list R_PARENTHESIS L_KEY stm_list R_KEY

    INT_TYPE      deslocar, e ir ao estado 3
    FLOAT_TYPE    deslocar, e ir ao estado 4
    DOUBLE_TYPE   deslocar, e ir ao estado 5
    STRING_TYPE   deslocar, e ir ao estado 6
    BOOLEAN_TYPE  deslocar, e ir ao estado 7
    MATRIZ_TYPE   deslocar, e ir ao estado 8
    VOID_TYPE     deslocar, e ir ao estado 9
    CHAR_TYPE     deslocar, e ir ao estado 11

    $padrão  reduzir usando a regra 53 (par_list)

    type      ir ao estado 123
    par_list  ir ao estado 124
    par_term  ir ao estado 125


Estado 102

   20 id_list: IDENTIFIER COMMA . id_list

    IDENTIFIER  deslocar, e ir ao estado 126

    id_list  ir ao estado 127


Estado 103

   59 arit_expr: arit_expr PLUS_OP term .

    $padrão  reduzir usando a regra 59 (arit_expr)


Estado 104

   60 arit_expr: arit_expr SUB_OP term .

    $padrão  reduzir usando a regra 60 (arit_expr)


Estado 105

   61 arit_expr: arit_expr DIV_OP term .

    $padrão  reduzir usando a regra 61 (arit_expr)


Estado 106

   62 arit_expr: arit_expr STAR term .

    $padrão  reduzir usando a regra 62 (arit_expr)


Estado 107

   63 arit_expr: arit_expr MOD_OP term .

    $padrão  reduzir usando a regra 63 (arit_expr)


Estado 108

   58 arit_expr: L_PARENTHESIS . arit_expr R_PARENTHESIS

    IDENTIFIER      deslocar, e ir ao estado 50
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 108

    arit_expr  ir ao estado 128
    term       ir ao estado 45
    term_num   ir ao estado 46
    log_term   ir ao estado 47


Estado 109

   68 log_expr: log_expr op_log comp_expr .
   70 comp_expr: comp_expr . op_comp arit_expr

    GE_OP  deslocar, e ir ao estado 76
    SE_OP  deslocar, e ir ao estado 77
    EQ_OP  deslocar, e ir ao estado 78
    NE_OP  deslocar, e ir ao estado 79
    G_OP   deslocar, e ir ao estado 80
    S_OP   deslocar, e ir ao estado 81

    $padrão  reduzir usando a regra 68 (log_expr)

    op_comp  ir ao estado 82


Estado 110

   59 arit_expr: arit_expr . PLUS_OP term
   60          | arit_expr . SUB_OP term
   61          | arit_expr . DIV_OP term
   62          | arit_expr . STAR term
   63          | arit_expr . MOD_OP term
   64          | arit_expr . INC_OP
   65          | arit_expr . DEC_OP
   70 comp_expr: comp_expr op_comp arit_expr .

    PLUS_OP  deslocar, e ir ao estado 65
    SUB_OP   deslocar, e ir ao estado 66
    DIV_OP   deslocar, e ir ao estado 67
    STAR     deslocar, e ir ao estado 68
    MOD_OP   deslocar, e ir ao estado 69
    INC_OP   deslocar, e ir ao estado 70
    DEC_OP   deslocar, e ir ao estado 71

    $padrão  reduzir usando a regra 70 (comp_expr)


Estado 111

   71 comp_expr: literal_string EQ_OP literal_string .

    $padrão  reduzir usando a regra 71 (comp_expr)


Estado 112

   72 comp_expr: literal_string NE_OP literal_string .

    $padrão  reduzir usando a regra 72 (comp_expr)


Estado 113

   27 if_struct: IF_STM L_PARENTHESIS log_expr R_PARENTHESIS . block else_struct

    L_KEY  deslocar, e ir ao estado 129

    block  ir ao estado 130


Estado 114

   41 for_struct: FOR_STM L_PARENTHESIS SEMICOLON log_expr . SEMICOLON R_PARENTHESIS L_KEY stm_list R_KEY
   68 log_expr: log_expr . op_log comp_expr

    AND_OP     deslocar, e ir ao estado 72
    OR_OP      deslocar, e ir ao estado 73
    NOT_OP     deslocar, e ir ao estado 74
    SEMICOLON  deslocar, e ir ao estado 131

    op_log  ir ao estado 75


Estado 115

   40 while_struct: DO_STM L_KEY stm_list R_KEY . WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS

    WHILE_STM  deslocar, e ir ao estado 132


Estado 116

   39 while_struct: WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS . L_KEY stm_list R_KEY

    L_KEY  deslocar, e ir ao estado 133


Estado 117

   33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS . L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

    L_KEY  deslocar, e ir ao estado 134


Estado 118

   15 print_stm: PRINT L_PARENTHESIS literal_string R_PARENTHESIS .

    $padrão  reduzir usando a regra 15 (print_stm)


Estado 119

   16 print_stm: PRINT L_PARENTHESIS literal_string COMMA . id_list R_PARENTHESIS

    IDENTIFIER  deslocar, e ir ao estado 126

    id_list  ir ao estado 135


Estado 120

   17 print_stm: PRINTF L_PARENTHESIS literal_string R_PARENTHESIS .

    $padrão  reduzir usando a regra 17 (print_stm)


Estado 121

   18 print_stm: PRINTF L_PARENTHESIS literal_string COMMA . id_list R_PARENTHESIS

    IDENTIFIER  deslocar, e ir ao estado 126

    id_list  ir ao estado 136


Estado 122

   14 initialization: type IDENTIFIER ASSINGMENT expr .

    $padrão  reduzir usando a regra 14 (initialization)


Estado 123

   56 par_term: type . IDENTIFIER

    IDENTIFIER  deslocar, e ir ao estado 137


Estado 124

   42 fun_struct: type IDENTIFIER L_PARENTHESIS par_list . R_PARENTHESIS L_KEY stm_list R_KEY

    R_PARENTHESIS  deslocar, e ir ao estado 138


Estado 125

   54 par_list: par_term .
   55         | par_term . COMMA par_list

    COMMA  deslocar, e ir ao estado 139

    $padrão  reduzir usando a regra 54 (par_list)


Estado 126

   19 id_list: IDENTIFIER .
   20        | IDENTIFIER . COMMA id_list

    COMMA  deslocar, e ir ao estado 102

    $padrão  reduzir usando a regra 19 (id_list)


Estado 127

   20 id_list: IDENTIFIER COMMA id_list .

    $padrão  reduzir usando a regra 20 (id_list)


Estado 128

   58 arit_expr: L_PARENTHESIS arit_expr . R_PARENTHESIS
   59          | arit_expr . PLUS_OP term
   60          | arit_expr . SUB_OP term
   61          | arit_expr . DIV_OP term
   62          | arit_expr . STAR term
   63          | arit_expr . MOD_OP term
   64          | arit_expr . INC_OP
   65          | arit_expr . DEC_OP

    PLUS_OP        deslocar, e ir ao estado 65
    SUB_OP         deslocar, e ir ao estado 66
    DIV_OP         deslocar, e ir ao estado 67
    STAR           deslocar, e ir ao estado 68
    MOD_OP         deslocar, e ir ao estado 69
    INC_OP         deslocar, e ir ao estado 70
    DEC_OP         deslocar, e ir ao estado 71
    R_PARENTHESIS  deslocar, e ir ao estado 86


Estado 129

   44 block: L_KEY . $@1 stm_list R_KEY

    $padrão  reduzir usando a regra 43 ($@1)

    $@1  ir ao estado 140


Estado 130

   27 if_struct: IF_STM L_PARENTHESIS log_expr R_PARENTHESIS block . else_struct

    ELSE_IF_STM  deslocar, e ir ao estado 141

    ELSE_STM  reduzir usando a regra 30 (elseif_list)
    $padrão  reduzir usando a regra 28 (else_struct)

    else_struct    ir ao estado 142
    elseif_list    ir ao estado 143
    elseif_struct  ir ao estado 144


Estado 131

   41 for_struct: FOR_STM L_PARENTHESIS SEMICOLON log_expr SEMICOLON . R_PARENTHESIS L_KEY stm_list R_KEY

    R_PARENTHESIS  deslocar, e ir ao estado 145


Estado 132

   40 while_struct: DO_STM L_KEY stm_list R_KEY WHILE_STM . L_PARENTHESIS log_expr R_PARENTHESIS

    L_PARENTHESIS  deslocar, e ir ao estado 146


Estado 133

   39 while_struct: WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS L_KEY . stm_list R_KEY

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 2
    INT_TYPE        deslocar, e ir ao estado 3
    FLOAT_TYPE      deslocar, e ir ao estado 4
    DOUBLE_TYPE     deslocar, e ir ao estado 5
    STRING_TYPE     deslocar, e ir ao estado 6
    BOOLEAN_TYPE    deslocar, e ir ao estado 7
    MATRIZ_TYPE     deslocar, e ir ao estado 8
    VOID_TYPE       deslocar, e ir ao estado 9
    LITERAL_CHAR    deslocar, e ir ao estado 10
    CHAR_TYPE       deslocar, e ir ao estado 11
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17
    IF_STM          deslocar, e ir ao estado 18
    FOR_STM         deslocar, e ir ao estado 19
    DO_STM          deslocar, e ir ao estado 20
    WHILE_STM       deslocar, e ir ao estado 21
    SWITCH_STM      deslocar, e ir ao estado 22
    PRINT           deslocar, e ir ao estado 23
    PRINTF          deslocar, e ir ao estado 24

    stm_list        ir ao estado 147
    stm             ir ao estado 27
    decl            ir ao estado 28
    assingment      ir ao estado 29
    initialization  ir ao estado 30
    print_stm       ir ao estado 31
    expres_list     ir ao estado 32
    expr            ir ao estado 33
    cond_stm        ir ao estado 34
    if_struct       ir ao estado 35
    switch_struct   ir ao estado 36
    loop_stm        ir ao estado 37
    while_struct    ir ao estado 38
    for_struct      ir ao estado 39
    fun_struct      ir ao estado 40
    type            ir ao estado 41
    arit_expr       ir ao estado 42
    log_expr        ir ao estado 43
    comp_expr       ir ao estado 44
    term            ir ao estado 45
    term_num        ir ao estado 46
    log_term        ir ao estado 47
    literal_string  ir ao estado 48


Estado 134

   33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY . case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

    CASE  deslocar, e ir ao estado 148

    $padrão  reduzir usando a regra 34 (case_list_switch)

    case_list_switch  ir ao estado 149
    case_switch       ir ao estado 150


Estado 135

   16 print_stm: PRINT L_PARENTHESIS literal_string COMMA id_list . R_PARENTHESIS

    R_PARENTHESIS  deslocar, e ir ao estado 151


Estado 136

   18 print_stm: PRINTF L_PARENTHESIS literal_string COMMA id_list . R_PARENTHESIS

    R_PARENTHESIS  deslocar, e ir ao estado 152


Estado 137

   56 par_term: type IDENTIFIER .

    $padrão  reduzir usando a regra 56 (par_term)


Estado 138

   42 fun_struct: type IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS . L_KEY stm_list R_KEY

    L_KEY  deslocar, e ir ao estado 153


Estado 139

   55 par_list: par_term COMMA . par_list

    INT_TYPE      deslocar, e ir ao estado 3
    FLOAT_TYPE    deslocar, e ir ao estado 4
    DOUBLE_TYPE   deslocar, e ir ao estado 5
    STRING_TYPE   deslocar, e ir ao estado 6
    BOOLEAN_TYPE  deslocar, e ir ao estado 7
    MATRIZ_TYPE   deslocar, e ir ao estado 8
    VOID_TYPE     deslocar, e ir ao estado 9
    CHAR_TYPE     deslocar, e ir ao estado 11

    $padrão  reduzir usando a regra 53 (par_list)

    type      ir ao estado 123
    par_list  ir ao estado 154
    par_term  ir ao estado 125


Estado 140

   44 block: L_KEY $@1 . stm_list R_KEY

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 2
    INT_TYPE        deslocar, e ir ao estado 3
    FLOAT_TYPE      deslocar, e ir ao estado 4
    DOUBLE_TYPE     deslocar, e ir ao estado 5
    STRING_TYPE     deslocar, e ir ao estado 6
    BOOLEAN_TYPE    deslocar, e ir ao estado 7
    MATRIZ_TYPE     deslocar, e ir ao estado 8
    VOID_TYPE       deslocar, e ir ao estado 9
    LITERAL_CHAR    deslocar, e ir ao estado 10
    CHAR_TYPE       deslocar, e ir ao estado 11
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17
    IF_STM          deslocar, e ir ao estado 18
    FOR_STM         deslocar, e ir ao estado 19
    DO_STM          deslocar, e ir ao estado 20
    WHILE_STM       deslocar, e ir ao estado 21
    SWITCH_STM      deslocar, e ir ao estado 22
    PRINT           deslocar, e ir ao estado 23
    PRINTF          deslocar, e ir ao estado 24

    stm_list        ir ao estado 155
    stm             ir ao estado 27
    decl            ir ao estado 28
    assingment      ir ao estado 29
    initialization  ir ao estado 30
    print_stm       ir ao estado 31
    expres_list     ir ao estado 32
    expr            ir ao estado 33
    cond_stm        ir ao estado 34
    if_struct       ir ao estado 35
    switch_struct   ir ao estado 36
    loop_stm        ir ao estado 37
    while_struct    ir ao estado 38
    for_struct      ir ao estado 39
    fun_struct      ir ao estado 40
    type            ir ao estado 41
    arit_expr       ir ao estado 42
    log_expr        ir ao estado 43
    comp_expr       ir ao estado 44
    term            ir ao estado 45
    term_num        ir ao estado 46
    log_term        ir ao estado 47
    literal_string  ir ao estado 48


Estado 141

   32 elseif_struct: ELSE_IF_STM . L_PARENTHESIS log_expr R_PARENTHESIS block

    L_PARENTHESIS  deslocar, e ir ao estado 156


Estado 142

   27 if_struct: IF_STM L_PARENTHESIS log_expr R_PARENTHESIS block else_struct .

    $padrão  reduzir usando a regra 27 (if_struct)


Estado 143

   29 else_struct: elseif_list . ELSE_STM block

    ELSE_STM  deslocar, e ir ao estado 157


Estado 144

   31 elseif_list: elseif_struct . elseif_list

    ELSE_IF_STM  deslocar, e ir ao estado 141

    $padrão  reduzir usando a regra 30 (elseif_list)

    elseif_list    ir ao estado 158
    elseif_struct  ir ao estado 144


Estado 145

   41 for_struct: FOR_STM L_PARENTHESIS SEMICOLON log_expr SEMICOLON R_PARENTHESIS . L_KEY stm_list R_KEY

    L_KEY  deslocar, e ir ao estado 159


Estado 146

   40 while_struct: DO_STM L_KEY stm_list R_KEY WHILE_STM L_PARENTHESIS . log_expr R_PARENTHESIS

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 50
    LITERAL_CHAR    deslocar, e ir ao estado 10
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17

    arit_expr       ir ao estado 88
    log_expr        ir ao estado 160
    comp_expr       ir ao estado 44
    term            ir ao estado 45
    term_num        ir ao estado 46
    log_term        ir ao estado 47
    literal_string  ir ao estado 48


Estado 147

   39 while_struct: WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS L_KEY stm_list . R_KEY

    R_KEY  deslocar, e ir ao estado 161


Estado 148

   36 case_switch: CASE . literal_term DOUBLE_DOT stm_list BREAK SEMICOLON

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 50
    LITERAL_CHAR    deslocar, e ir ao estado 10
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16

    term            ir ao estado 93
    term_num        ir ao estado 46
    log_term        ir ao estado 47
    literal_term    ir ao estado 162
    literal_string  ir ao estado 95


Estado 149

   33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch . DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

    DEFAULT  deslocar, e ir ao estado 163


Estado 150

   35 case_list_switch: case_switch . case_list_switch

    CASE  deslocar, e ir ao estado 148

    $padrão  reduzir usando a regra 34 (case_list_switch)

    case_list_switch  ir ao estado 164
    case_switch       ir ao estado 150


Estado 151

   16 print_stm: PRINT L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS .

    $padrão  reduzir usando a regra 16 (print_stm)


Estado 152

   18 print_stm: PRINTF L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS .

    $padrão  reduzir usando a regra 18 (print_stm)


Estado 153

   42 fun_struct: type IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS L_KEY . stm_list R_KEY

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 2
    INT_TYPE        deslocar, e ir ao estado 3
    FLOAT_TYPE      deslocar, e ir ao estado 4
    DOUBLE_TYPE     deslocar, e ir ao estado 5
    STRING_TYPE     deslocar, e ir ao estado 6
    BOOLEAN_TYPE    deslocar, e ir ao estado 7
    MATRIZ_TYPE     deslocar, e ir ao estado 8
    VOID_TYPE       deslocar, e ir ao estado 9
    LITERAL_CHAR    deslocar, e ir ao estado 10
    CHAR_TYPE       deslocar, e ir ao estado 11
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17
    IF_STM          deslocar, e ir ao estado 18
    FOR_STM         deslocar, e ir ao estado 19
    DO_STM          deslocar, e ir ao estado 20
    WHILE_STM       deslocar, e ir ao estado 21
    SWITCH_STM      deslocar, e ir ao estado 22
    PRINT           deslocar, e ir ao estado 23
    PRINTF          deslocar, e ir ao estado 24

    stm_list        ir ao estado 165
    stm             ir ao estado 27
    decl            ir ao estado 28
    assingment      ir ao estado 29
    initialization  ir ao estado 30
    print_stm       ir ao estado 31
    expres_list     ir ao estado 32
    expr            ir ao estado 33
    cond_stm        ir ao estado 34
    if_struct       ir ao estado 35
    switch_struct   ir ao estado 36
    loop_stm        ir ao estado 37
    while_struct    ir ao estado 38
    for_struct      ir ao estado 39
    fun_struct      ir ao estado 40
    type            ir ao estado 41
    arit_expr       ir ao estado 42
    log_expr        ir ao estado 43
    comp_expr       ir ao estado 44
    term            ir ao estado 45
    term_num        ir ao estado 46
    log_term        ir ao estado 47
    literal_string  ir ao estado 48


Estado 154

   55 par_list: par_term COMMA par_list .

    $padrão  reduzir usando a regra 55 (par_list)


Estado 155

   44 block: L_KEY $@1 stm_list . R_KEY

    R_KEY  deslocar, e ir ao estado 166


Estado 156

   32 elseif_struct: ELSE_IF_STM L_PARENTHESIS . log_expr R_PARENTHESIS block

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 50
    LITERAL_CHAR    deslocar, e ir ao estado 10
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17

    arit_expr       ir ao estado 88
    log_expr        ir ao estado 167
    comp_expr       ir ao estado 44
    term            ir ao estado 45
    term_num        ir ao estado 46
    log_term        ir ao estado 47
    literal_string  ir ao estado 48


Estado 157

   29 else_struct: elseif_list ELSE_STM . block

    L_KEY  deslocar, e ir ao estado 129

    block  ir ao estado 168


Estado 158

   31 elseif_list: elseif_struct elseif_list .

    $padrão  reduzir usando a regra 31 (elseif_list)


Estado 159

   41 for_struct: FOR_STM L_PARENTHESIS SEMICOLON log_expr SEMICOLON R_PARENTHESIS L_KEY . stm_list R_KEY

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 2
    INT_TYPE        deslocar, e ir ao estado 3
    FLOAT_TYPE      deslocar, e ir ao estado 4
    DOUBLE_TYPE     deslocar, e ir ao estado 5
    STRING_TYPE     deslocar, e ir ao estado 6
    BOOLEAN_TYPE    deslocar, e ir ao estado 7
    MATRIZ_TYPE     deslocar, e ir ao estado 8
    VOID_TYPE       deslocar, e ir ao estado 9
    LITERAL_CHAR    deslocar, e ir ao estado 10
    CHAR_TYPE       deslocar, e ir ao estado 11
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17
    IF_STM          deslocar, e ir ao estado 18
    FOR_STM         deslocar, e ir ao estado 19
    DO_STM          deslocar, e ir ao estado 20
    WHILE_STM       deslocar, e ir ao estado 21
    SWITCH_STM      deslocar, e ir ao estado 22
    PRINT           deslocar, e ir ao estado 23
    PRINTF          deslocar, e ir ao estado 24

    stm_list        ir ao estado 169
    stm             ir ao estado 27
    decl            ir ao estado 28
    assingment      ir ao estado 29
    initialization  ir ao estado 30
    print_stm       ir ao estado 31
    expres_list     ir ao estado 32
    expr            ir ao estado 33
    cond_stm        ir ao estado 34
    if_struct       ir ao estado 35
    switch_struct   ir ao estado 36
    loop_stm        ir ao estado 37
    while_struct    ir ao estado 38
    for_struct      ir ao estado 39
    fun_struct      ir ao estado 40
    type            ir ao estado 41
    arit_expr       ir ao estado 42
    log_expr        ir ao estado 43
    comp_expr       ir ao estado 44
    term            ir ao estado 45
    term_num        ir ao estado 46
    log_term        ir ao estado 47
    literal_string  ir ao estado 48


Estado 160

   40 while_struct: DO_STM L_KEY stm_list R_KEY WHILE_STM L_PARENTHESIS log_expr . R_PARENTHESIS
   68 log_expr: log_expr . op_log comp_expr

    AND_OP         deslocar, e ir ao estado 72
    OR_OP          deslocar, e ir ao estado 73
    NOT_OP         deslocar, e ir ao estado 74
    R_PARENTHESIS  deslocar, e ir ao estado 170

    op_log  ir ao estado 75


Estado 161

   39 while_struct: WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS L_KEY stm_list R_KEY .

    $padrão  reduzir usando a regra 39 (while_struct)


Estado 162

   36 case_switch: CASE literal_term . DOUBLE_DOT stm_list BREAK SEMICOLON

    DOUBLE_DOT  deslocar, e ir ao estado 171


Estado 163

   33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT . DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

    DOUBLE_DOT  deslocar, e ir ao estado 172


Estado 164

   35 case_list_switch: case_switch case_list_switch .

    $padrão  reduzir usando a regra 35 (case_list_switch)


Estado 165

   42 fun_struct: type IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS L_KEY stm_list . R_KEY

    R_KEY  deslocar, e ir ao estado 173


Estado 166

   44 block: L_KEY $@1 stm_list R_KEY .

    $padrão  reduzir usando a regra 44 (block)


Estado 167

   32 elseif_struct: ELSE_IF_STM L_PARENTHESIS log_expr . R_PARENTHESIS block
   68 log_expr: log_expr . op_log comp_expr

    AND_OP         deslocar, e ir ao estado 72
    OR_OP          deslocar, e ir ao estado 73
    NOT_OP         deslocar, e ir ao estado 74
    R_PARENTHESIS  deslocar, e ir ao estado 174

    op_log  ir ao estado 75


Estado 168

   29 else_struct: elseif_list ELSE_STM block .

    $padrão  reduzir usando a regra 29 (else_struct)


Estado 169

   41 for_struct: FOR_STM L_PARENTHESIS SEMICOLON log_expr SEMICOLON R_PARENTHESIS L_KEY stm_list . R_KEY

    R_KEY  deslocar, e ir ao estado 175


Estado 170

   40 while_struct: DO_STM L_KEY stm_list R_KEY WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS .

    $padrão  reduzir usando a regra 40 (while_struct)


Estado 171

   36 case_switch: CASE literal_term DOUBLE_DOT . stm_list BREAK SEMICOLON

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 2
    INT_TYPE        deslocar, e ir ao estado 3
    FLOAT_TYPE      deslocar, e ir ao estado 4
    DOUBLE_TYPE     deslocar, e ir ao estado 5
    STRING_TYPE     deslocar, e ir ao estado 6
    BOOLEAN_TYPE    deslocar, e ir ao estado 7
    MATRIZ_TYPE     deslocar, e ir ao estado 8
    VOID_TYPE       deslocar, e ir ao estado 9
    LITERAL_CHAR    deslocar, e ir ao estado 10
    CHAR_TYPE       deslocar, e ir ao estado 11
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17
    IF_STM          deslocar, e ir ao estado 18
    FOR_STM         deslocar, e ir ao estado 19
    DO_STM          deslocar, e ir ao estado 20
    WHILE_STM       deslocar, e ir ao estado 21
    SWITCH_STM      deslocar, e ir ao estado 22
    PRINT           deslocar, e ir ao estado 23
    PRINTF          deslocar, e ir ao estado 24

    stm_list        ir ao estado 176
    stm             ir ao estado 27
    decl            ir ao estado 28
    assingment      ir ao estado 29
    initialization  ir ao estado 30
    print_stm       ir ao estado 31
    expres_list     ir ao estado 32
    expr            ir ao estado 33
    cond_stm        ir ao estado 34
    if_struct       ir ao estado 35
    switch_struct   ir ao estado 36
    loop_stm        ir ao estado 37
    while_struct    ir ao estado 38
    for_struct      ir ao estado 39
    fun_struct      ir ao estado 40
    type            ir ao estado 41
    arit_expr       ir ao estado 42
    log_expr        ir ao estado 43
    comp_expr       ir ao estado 44
    term            ir ao estado 45
    term_num        ir ao estado 46
    log_term        ir ao estado 47
    literal_string  ir ao estado 48


Estado 172

   33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT . stm_list BREAK SEMICOLON R_KEY

    LITERAL_STRING  deslocar, e ir ao estado 1
    IDENTIFIER      deslocar, e ir ao estado 2
    INT_TYPE        deslocar, e ir ao estado 3
    FLOAT_TYPE      deslocar, e ir ao estado 4
    DOUBLE_TYPE     deslocar, e ir ao estado 5
    STRING_TYPE     deslocar, e ir ao estado 6
    BOOLEAN_TYPE    deslocar, e ir ao estado 7
    MATRIZ_TYPE     deslocar, e ir ao estado 8
    VOID_TYPE       deslocar, e ir ao estado 9
    LITERAL_CHAR    deslocar, e ir ao estado 10
    CHAR_TYPE       deslocar, e ir ao estado 11
    LITERAL_INT     deslocar, e ir ao estado 12
    LITERAL_FLOAT   deslocar, e ir ao estado 13
    LITERAL_DOUBLE  deslocar, e ir ao estado 14
    TRUE_VAL        deslocar, e ir ao estado 15
    FALSE_VAL       deslocar, e ir ao estado 16
    L_PARENTHESIS   deslocar, e ir ao estado 17
    IF_STM          deslocar, e ir ao estado 18
    FOR_STM         deslocar, e ir ao estado 19
    DO_STM          deslocar, e ir ao estado 20
    WHILE_STM       deslocar, e ir ao estado 21
    SWITCH_STM      deslocar, e ir ao estado 22
    PRINT           deslocar, e ir ao estado 23
    PRINTF          deslocar, e ir ao estado 24

    stm_list        ir ao estado 177
    stm             ir ao estado 27
    decl            ir ao estado 28
    assingment      ir ao estado 29
    initialization  ir ao estado 30
    print_stm       ir ao estado 31
    expres_list     ir ao estado 32
    expr            ir ao estado 33
    cond_stm        ir ao estado 34
    if_struct       ir ao estado 35
    switch_struct   ir ao estado 36
    loop_stm        ir ao estado 37
    while_struct    ir ao estado 38
    for_struct      ir ao estado 39
    fun_struct      ir ao estado 40
    type            ir ao estado 41
    arit_expr       ir ao estado 42
    log_expr        ir ao estado 43
    comp_expr       ir ao estado 44
    term            ir ao estado 45
    term_num        ir ao estado 46
    log_term        ir ao estado 47
    literal_string  ir ao estado 48


Estado 173

   42 fun_struct: type IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS L_KEY stm_list R_KEY .

    $padrão  reduzir usando a regra 42 (fun_struct)


Estado 174

   32 elseif_struct: ELSE_IF_STM L_PARENTHESIS log_expr R_PARENTHESIS . block

    L_KEY  deslocar, e ir ao estado 129

    block  ir ao estado 178


Estado 175

   41 for_struct: FOR_STM L_PARENTHESIS SEMICOLON log_expr SEMICOLON R_PARENTHESIS L_KEY stm_list R_KEY .

    $padrão  reduzir usando a regra 41 (for_struct)


Estado 176

   36 case_switch: CASE literal_term DOUBLE_DOT stm_list . BREAK SEMICOLON

    BREAK  deslocar, e ir ao estado 179


Estado 177

   33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list . BREAK SEMICOLON R_KEY

    BREAK  deslocar, e ir ao estado 180


Estado 178

   32 elseif_struct: ELSE_IF_STM L_PARENTHESIS log_expr R_PARENTHESIS block .

    $padrão  reduzir usando a regra 32 (elseif_struct)


Estado 179

   36 case_switch: CASE literal_term DOUBLE_DOT stm_list BREAK . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 181


Estado 180

   33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK . SEMICOLON R_KEY

    SEMICOLON  deslocar, e ir ao estado 182


Estado 181

   36 case_switch: CASE literal_term DOUBLE_DOT stm_list BREAK SEMICOLON .

    $padrão  reduzir usando a regra 36 (case_switch)


Estado 182

   33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON . R_KEY

    R_KEY  deslocar, e ir ao estado 183


Estado 183

   33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY .

    $padrão  reduzir usando a regra 33 (switch_struct)
