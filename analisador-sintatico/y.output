Terminais sem uso na gramática

    FACT_OP
    L_BRACKET
    R_BRACKET
    CONTINUE
    CONSTANT
    RETURN
    EOL
    ADDRESS
    DOT
    MALLOC_OP
    FREE_OP
    CALLOC_OP


Estado 40 conflitos: 2 de redução/redução


Gramática

    0 $accept: program $end

    1 program: decls_list

    2 decls_list: decls
    3           | decls decls_list

    4 decls: decl SEMICOLON
    5      | assingment SEMICOLON
    6      | initialization SEMICOLON
    7      | fun_struct

    8 decl: type id_list

    9 assingment: IDENTIFIER ASSINGMENT expr

   10 initialization: type IDENTIFIER ASSINGMENT expr

   11 print_stm: PRINT L_PARENTHESIS literal_string R_PARENTHESIS
   12          | PRINT L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS
   13          | PRINTF L_PARENTHESIS literal_string R_PARENTHESIS
   14          | PRINTF L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS
   15          | PRINT L_PARENTHESIS IDENTIFIER R_PARENTHESIS
   16          | PRINTF L_PARENTHESIS IDENTIFIER R_PARENTHESIS

   17 id_list: IDENTIFIER
   18        | IDENTIFIER COMMA id_list

   19 expres_list: expr SEMICOLON
   20            | expr SEMICOLON expres_list

   21 expr: log_expr
   22     | arit_expr

   23 cond_stm: if_struct
   24         | switch_struct

   25 if_struct: IF_STM L_PARENTHESIS log_expr R_PARENTHESIS L_KEY stm_list R_KEY else_struct

   26 else_struct: %empty
   27            | elseif_list ELSE_STM L_KEY stm_list R_KEY

   28 elseif_list: %empty
   29            | elseif_struct elseif_list

   30 elseif_struct: ELSE_IF_STM L_PARENTHESIS log_expr R_PARENTHESIS L_KEY stm_list R_KEY

   31 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

   32 case_list_switch: %empty
   33                 | case_switch case_list_switch

   34 case_switch: CASE literal_term DOUBLE_DOT stm_list BREAK SEMICOLON

   35 loop_stm: while_struct
   36         | for_struct

   37 while_struct: WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS block
   38             | DO_STM block WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS SEMICOLON

   39 $@1: %empty

   40 $@2: %empty

   41 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 block

   42 for_struct_stm: arit_expr
   43               | assingment

   44 fun_struct: type IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS block

   45 $@3: %empty

   46 block: L_KEY $@3 stm_list R_KEY

   47 stm_list: stm
   48         | stm stm_list

   49 stm: decl SEMICOLON
   50    | cond_stm
   51    | loop_stm
   52    | print_stm SEMICOLON
   53    | expres_list SEMICOLON
   54    | assingment SEMICOLON
   55    | initialization SEMICOLON

   56 type: VOID_TYPE
   57     | INT_TYPE
   58     | FLOAT_TYPE
   59     | DOUBLE_TYPE
   60     | CHAR_TYPE
   61     | STRING_TYPE
   62     | BOOLEAN_TYPE
   63     | MATRIZ_TYPE

   64 par_list: %empty
   65         | par_term
   66         | par_term COMMA par_list

   67 par_term: type IDENTIFIER

   68 arit_expr: arit_expr_base
   69          | arit_expr INC_OP
   70          | arit_expr DEC_OP
   71          | arit_expr PLUS_OP arit_expr_base
   72          | arit_expr SUB_OP arit_expr_base
   73          | arit_expr DIV_OP arit_expr_base
   74          | arit_expr STAR arit_expr_base
   75          | arit_expr MOD_OP arit_expr_base

   76 arit_expr_base: term
   77               | L_PARENTHESIS arit_expr R_PARENTHESIS

   78 log_expr: comp_expr
   79         | L_PARENTHESIS log_expr R_PARENTHESIS
   80         | log_expr op_log comp_expr

   81 comp_expr: term
   82          | comp_expr op_comp arit_expr
   83          | literal_string EQ_OP literal_string
   84          | literal_string NE_OP literal_string

   85 op_log: AND_OP
   86       | OR_OP
   87       | NOT_OP

   88 op_comp: SE_OP
   89        | S_OP
   90        | GE_OP
   91        | G_OP
   92        | EQ_OP
   93        | NE_OP

   94 term: term_num
   95     | log_term
   96     | IDENTIFIER

   97 term_num: LITERAL_INT
   98         | LITERAL_FLOAT
   99         | LITERAL_DOUBLE

  100 log_term: TRUE_VAL
  101         | FALSE_VAL

  102 literal_term: term
  103             | literal_string

  104 literal_string: LITERAL_CHAR
  105               | LITERAL_STRING


Terminais, com as regras onde eles aparecem

    $end (0) 0
    error (256)
    LITERAL_STRING <sValue> (258) 105
    IDENTIFIER <sValue> (259) 9 10 15 16 17 18 44 67 96
    INT_TYPE <sValue> (260) 57
    FLOAT_TYPE <sValue> (261) 58
    DOUBLE_TYPE <sValue> (262) 59
    STRING_TYPE <sValue> (263) 61
    BOOLEAN_TYPE <sValue> (264) 62
    MATRIZ_TYPE <sValue> (265) 63
    VOID_TYPE <sValue> (266) 56
    LITERAL_CHAR <sValue> (267) 104
    CHAR_TYPE <sValue> (268) 60
    LITERAL_INT <iValue> (269) 97
    LITERAL_FLOAT <fValue> (270) 98
    LITERAL_DOUBLE <dValue> (271) 99
    TRUE_VAL <bValue> (272) 100
    FALSE_VAL <bValue> (273) 101
    PLUS_OP (274) 71
    SUB_OP (275) 72
    DIV_OP (276) 73
    STAR (277) 74
    MOD_OP (278) 75
    FACT_OP (279)
    ASSINGMENT (280) 9 10
    INC_OP (281) 69
    DEC_OP (282) 70
    GE_OP (283) 90
    SE_OP (284) 88
    EQ_OP (285) 83 92
    NE_OP (286) 84 93
    G_OP (287) 91
    S_OP (288) 89
    AND_OP (289) 85
    OR_OP (290) 86
    NOT_OP (291) 87
    L_PARENTHESIS (292) 11 12 13 14 15 16 25 30 31 37 38 41 44 77 79
    R_PARENTHESIS (293) 11 12 13 14 15 16 25 30 31 37 38 41 44 77 79
    L_KEY (294) 25 27 30 31 46
    R_KEY (295) 25 27 30 31 46
    L_BRACKET (296)
    R_BRACKET (297)
    IF_STM (298) 25
    ELSE_STM (299) 27
    ELSE_IF_STM (300) 30
    FOR_STM (301) 41
    DO_STM (302) 38
    WHILE_STM (303) 37 38
    SWITCH_STM (304) 31
    CONTINUE (305)
    BREAK (306) 31 34
    PRINT (307) 11 12 15
    PRINTF (308) 13 14 16
    CASE (309) 34
    DEFAULT (310) 31
    CONSTANT (311)
    RETURN (312)
    EOL (313)
    ADDRESS (314)
    SEMICOLON (315) 4 5 6 19 20 31 34 38 41 49 52 53 54 55
    COMMA (316) 12 14 18 66
    DOT (317)
    DOUBLE_DOT (318) 31 34
    MALLOC_OP (319)
    FREE_OP (320)
    CALLOC_OP (321)


Não terminais com as regras onde eles aparecem

    $accept (67)
        à esquerda: 0
    program (68)
        à esquerda: 1
        à direita: 0
    decls_list <sValue> (69)
        à esquerda: 2 3
        à direita: 1 3
    decls <sValue> (70)
        à esquerda: 4 5 6 7
        à direita: 2 3
    decl <sValue> (71)
        à esquerda: 8
        à direita: 4 49
    assingment <sValue> (72)
        à esquerda: 9
        à direita: 5 43 54
    initialization <sValue> (73)
        à esquerda: 10
        à direita: 6 41 55
    print_stm <sValue> (74)
        à esquerda: 11 12 13 14 15 16
        à direita: 52
    id_list <sValue> (75)
        à esquerda: 17 18
        à direita: 8 12 14 18
    expres_list <sValue> (76)
        à esquerda: 19 20
        à direita: 20 53
    expr <strValue> (77)
        à esquerda: 21 22
        à direita: 9 10 19 20
    cond_stm <sValue> (78)
        à esquerda: 23 24
        à direita: 50
    if_struct <sValue> (79)
        à esquerda: 25
        à direita: 23
    else_struct <sValue> (80)
        à esquerda: 26 27
        à direita: 25
    elseif_list <sValue> (81)
        à esquerda: 28 29
        à direita: 27 29
    elseif_struct <sValue> (82)
        à esquerda: 30
        à direita: 29
    switch_struct <sValue> (83)
        à esquerda: 31
        à direita: 24
    case_list_switch <sValue> (84)
        à esquerda: 32 33
        à direita: 31 33
    case_switch <sValue> (85)
        à esquerda: 34
        à direita: 33
    loop_stm <sValue> (86)
        à esquerda: 35 36
        à direita: 51
    while_struct <sValue> (87)
        à esquerda: 37 38
        à direita: 35
    for_struct <sValue> (88)
        à esquerda: 41
        à direita: 36
    $@1 (89)
        à esquerda: 39
        à direita: 41
    $@2 (90)
        à esquerda: 40
        à direita: 41
    for_struct_stm <strValue> (91)
        à esquerda: 42 43
        à direita: 41
    fun_struct <sValue> (92)
        à esquerda: 44
        à direita: 7
    block <sValue> (93)
        à esquerda: 46
        à direita: 37 38 41 44
    $@3 (94)
        à esquerda: 45
        à direita: 46
    stm_list <sValue> (95)
        à esquerda: 47 48
        à direita: 25 27 30 31 34 46 48
    stm <sValue> (96)
        à esquerda: 49 50 51 52 53 54 55
        à direita: 47 48
    type <sValue> (97)
        à esquerda: 56 57 58 59 60 61 62 63
        à direita: 8 10 44 67
    par_list <sValue> (98)
        à esquerda: 64 65 66
        à direita: 44 66
    par_term <sValue> (99)
        à esquerda: 67
        à direita: 65 66
    arit_expr <strValue> (100)
        à esquerda: 68 69 70 71 72 73 74 75
        à direita: 22 42 69 70 71 72 73 74 75 77 82
    arit_expr_base <strValue> (101)
        à esquerda: 76 77
        à direita: 68 71 72 73 74 75
    log_expr <strValue> (102)
        à esquerda: 78 79 80
        à direita: 21 25 30 37 38 41 79 80
    comp_expr <strValue> (103)
        à esquerda: 81 82 83 84
        à direita: 78 80 82
    op_log <sValue> (104)
        à esquerda: 85 86 87
        à direita: 80
    op_comp <sValue> (105)
        à esquerda: 88 89 90 91 92 93
        à direita: 82
    term <strValue> (106)
        à esquerda: 94 95 96
        à direita: 76 81 102
    term_num <strValue> (107)
        à esquerda: 97 98 99
        à direita: 94
    log_term <strValue> (108)
        à esquerda: 100 101
        à direita: 95
    literal_term <strValue> (109)
        à esquerda: 102 103
        à direita: 31 34
    literal_string <strValue> (110)
        à esquerda: 104 105
        à direita: 11 12 13 14 83 84 103


Estado 0

    0 $accept: . program $end

    IDENTIFIER    deslocar, e ir ao estado 1
    INT_TYPE      deslocar, e ir ao estado 2
    FLOAT_TYPE    deslocar, e ir ao estado 3
    DOUBLE_TYPE   deslocar, e ir ao estado 4
    STRING_TYPE   deslocar, e ir ao estado 5
    BOOLEAN_TYPE  deslocar, e ir ao estado 6
    MATRIZ_TYPE   deslocar, e ir ao estado 7
    VOID_TYPE     deslocar, e ir ao estado 8
    CHAR_TYPE     deslocar, e ir ao estado 9

    program         ir ao estado 10
    decls_list      ir ao estado 11
    decls           ir ao estado 12
    decl            ir ao estado 13
    assingment      ir ao estado 14
    initialization  ir ao estado 15
    fun_struct      ir ao estado 16
    type            ir ao estado 17


Estado 1

    9 assingment: IDENTIFIER . ASSINGMENT expr

    ASSINGMENT  deslocar, e ir ao estado 18


Estado 2

   57 type: INT_TYPE .

    $padrão  reduzir usando a regra 57 (type)


Estado 3

   58 type: FLOAT_TYPE .

    $padrão  reduzir usando a regra 58 (type)


Estado 4

   59 type: DOUBLE_TYPE .

    $padrão  reduzir usando a regra 59 (type)


Estado 5

   61 type: STRING_TYPE .

    $padrão  reduzir usando a regra 61 (type)


Estado 6

   62 type: BOOLEAN_TYPE .

    $padrão  reduzir usando a regra 62 (type)


Estado 7

   63 type: MATRIZ_TYPE .

    $padrão  reduzir usando a regra 63 (type)


Estado 8

   56 type: VOID_TYPE .

    $padrão  reduzir usando a regra 56 (type)


Estado 9

   60 type: CHAR_TYPE .

    $padrão  reduzir usando a regra 60 (type)


Estado 10

    0 $accept: program . $end

    $end  deslocar, e ir ao estado 19


Estado 11

    1 program: decls_list .

    $padrão  reduzir usando a regra 1 (program)


Estado 12

    2 decls_list: decls .
    3           | decls . decls_list

    IDENTIFIER    deslocar, e ir ao estado 1
    INT_TYPE      deslocar, e ir ao estado 2
    FLOAT_TYPE    deslocar, e ir ao estado 3
    DOUBLE_TYPE   deslocar, e ir ao estado 4
    STRING_TYPE   deslocar, e ir ao estado 5
    BOOLEAN_TYPE  deslocar, e ir ao estado 6
    MATRIZ_TYPE   deslocar, e ir ao estado 7
    VOID_TYPE     deslocar, e ir ao estado 8
    CHAR_TYPE     deslocar, e ir ao estado 9

    $padrão  reduzir usando a regra 2 (decls_list)

    decls_list      ir ao estado 20
    decls           ir ao estado 12
    decl            ir ao estado 13
    assingment      ir ao estado 14
    initialization  ir ao estado 15
    fun_struct      ir ao estado 16
    type            ir ao estado 17


Estado 13

    4 decls: decl . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 21


Estado 14

    5 decls: assingment . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 22


Estado 15

    6 decls: initialization . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 23


Estado 16

    7 decls: fun_struct .

    $padrão  reduzir usando a regra 7 (decls)


Estado 17

    8 decl: type . id_list
   10 initialization: type . IDENTIFIER ASSINGMENT expr
   44 fun_struct: type . IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS block

    IDENTIFIER  deslocar, e ir ao estado 24

    id_list  ir ao estado 25


Estado 18

    9 assingment: IDENTIFIER ASSINGMENT . expr

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_CHAR    deslocar, e ir ao estado 28
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 34

    expr            ir ao estado 35
    arit_expr       ir ao estado 36
    arit_expr_base  ir ao estado 37
    log_expr        ir ao estado 38
    comp_expr       ir ao estado 39
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 19

    0 $accept: program $end .

    $padrão  aceitar


Estado 20

    3 decls_list: decls decls_list .

    $padrão  reduzir usando a regra 3 (decls_list)


Estado 21

    4 decls: decl SEMICOLON .

    $padrão  reduzir usando a regra 4 (decls)


Estado 22

    5 decls: assingment SEMICOLON .

    $padrão  reduzir usando a regra 5 (decls)


Estado 23

    6 decls: initialization SEMICOLON .

    $padrão  reduzir usando a regra 6 (decls)


Estado 24

   10 initialization: type IDENTIFIER . ASSINGMENT expr
   17 id_list: IDENTIFIER .
   18        | IDENTIFIER . COMMA id_list
   44 fun_struct: type IDENTIFIER . L_PARENTHESIS par_list R_PARENTHESIS block

    ASSINGMENT     deslocar, e ir ao estado 44
    L_PARENTHESIS  deslocar, e ir ao estado 45
    COMMA          deslocar, e ir ao estado 46

    $padrão  reduzir usando a regra 17 (id_list)


Estado 25

    8 decl: type id_list .

    $padrão  reduzir usando a regra 8 (decl)


Estado 26

  105 literal_string: LITERAL_STRING .

    $padrão  reduzir usando a regra 105 (literal_string)


Estado 27

   96 term: IDENTIFIER .

    $padrão  reduzir usando a regra 96 (term)


Estado 28

  104 literal_string: LITERAL_CHAR .

    $padrão  reduzir usando a regra 104 (literal_string)


Estado 29

   97 term_num: LITERAL_INT .

    $padrão  reduzir usando a regra 97 (term_num)


Estado 30

   98 term_num: LITERAL_FLOAT .

    $padrão  reduzir usando a regra 98 (term_num)


Estado 31

   99 term_num: LITERAL_DOUBLE .

    $padrão  reduzir usando a regra 99 (term_num)


Estado 32

  100 log_term: TRUE_VAL .

    $padrão  reduzir usando a regra 100 (log_term)


Estado 33

  101 log_term: FALSE_VAL .

    $padrão  reduzir usando a regra 101 (log_term)


Estado 34

   77 arit_expr_base: L_PARENTHESIS . arit_expr R_PARENTHESIS
   79 log_expr: L_PARENTHESIS . log_expr R_PARENTHESIS

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_CHAR    deslocar, e ir ao estado 28
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 34

    arit_expr       ir ao estado 47
    arit_expr_base  ir ao estado 37
    log_expr        ir ao estado 48
    comp_expr       ir ao estado 39
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 35

    9 assingment: IDENTIFIER ASSINGMENT expr .

    $padrão  reduzir usando a regra 9 (assingment)


Estado 36

   22 expr: arit_expr .
   69 arit_expr: arit_expr . INC_OP
   70          | arit_expr . DEC_OP
   71          | arit_expr . PLUS_OP arit_expr_base
   72          | arit_expr . SUB_OP arit_expr_base
   73          | arit_expr . DIV_OP arit_expr_base
   74          | arit_expr . STAR arit_expr_base
   75          | arit_expr . MOD_OP arit_expr_base

    PLUS_OP  deslocar, e ir ao estado 49
    SUB_OP   deslocar, e ir ao estado 50
    DIV_OP   deslocar, e ir ao estado 51
    STAR     deslocar, e ir ao estado 52
    MOD_OP   deslocar, e ir ao estado 53
    INC_OP   deslocar, e ir ao estado 54
    DEC_OP   deslocar, e ir ao estado 55

    $padrão  reduzir usando a regra 22 (expr)


Estado 37

   68 arit_expr: arit_expr_base .

    $padrão  reduzir usando a regra 68 (arit_expr)


Estado 38

   21 expr: log_expr .
   80 log_expr: log_expr . op_log comp_expr

    AND_OP  deslocar, e ir ao estado 56
    OR_OP   deslocar, e ir ao estado 57
    NOT_OP  deslocar, e ir ao estado 58

    $padrão  reduzir usando a regra 21 (expr)

    op_log  ir ao estado 59


Estado 39

   78 log_expr: comp_expr .
   82 comp_expr: comp_expr . op_comp arit_expr

    GE_OP  deslocar, e ir ao estado 60
    SE_OP  deslocar, e ir ao estado 61
    EQ_OP  deslocar, e ir ao estado 62
    NE_OP  deslocar, e ir ao estado 63
    G_OP   deslocar, e ir ao estado 64
    S_OP   deslocar, e ir ao estado 65

    $padrão  reduzir usando a regra 78 (log_expr)

    op_comp  ir ao estado 66


Estado 40

   76 arit_expr_base: term .
   81 comp_expr: term .

    GE_OP          reduzir usando a regra 81 (comp_expr)
    SE_OP          reduzir usando a regra 81 (comp_expr)
    EQ_OP          reduzir usando a regra 81 (comp_expr)
    NE_OP          reduzir usando a regra 81 (comp_expr)
    G_OP           reduzir usando a regra 81 (comp_expr)
    S_OP           reduzir usando a regra 81 (comp_expr)
    AND_OP         reduzir usando a regra 81 (comp_expr)
    OR_OP          reduzir usando a regra 81 (comp_expr)
    NOT_OP         reduzir usando a regra 81 (comp_expr)
    R_PARENTHESIS  reduzir usando a regra 76 (arit_expr_base)
    R_PARENTHESIS  [reduzir usando a regra 81 (comp_expr)]
    SEMICOLON      reduzir usando a regra 76 (arit_expr_base)
    SEMICOLON      [reduzir usando a regra 81 (comp_expr)]
    $padrão       reduzir usando a regra 76 (arit_expr_base)


Estado 41

   94 term: term_num .

    $padrão  reduzir usando a regra 94 (term)


Estado 42

   95 term: log_term .

    $padrão  reduzir usando a regra 95 (term)


Estado 43

   83 comp_expr: literal_string . EQ_OP literal_string
   84          | literal_string . NE_OP literal_string

    EQ_OP  deslocar, e ir ao estado 67
    NE_OP  deslocar, e ir ao estado 68


Estado 44

   10 initialization: type IDENTIFIER ASSINGMENT . expr

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_CHAR    deslocar, e ir ao estado 28
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 34

    expr            ir ao estado 69
    arit_expr       ir ao estado 36
    arit_expr_base  ir ao estado 37
    log_expr        ir ao estado 38
    comp_expr       ir ao estado 39
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 45

   44 fun_struct: type IDENTIFIER L_PARENTHESIS . par_list R_PARENTHESIS block

    INT_TYPE      deslocar, e ir ao estado 2
    FLOAT_TYPE    deslocar, e ir ao estado 3
    DOUBLE_TYPE   deslocar, e ir ao estado 4
    STRING_TYPE   deslocar, e ir ao estado 5
    BOOLEAN_TYPE  deslocar, e ir ao estado 6
    MATRIZ_TYPE   deslocar, e ir ao estado 7
    VOID_TYPE     deslocar, e ir ao estado 8
    CHAR_TYPE     deslocar, e ir ao estado 9

    $padrão  reduzir usando a regra 64 (par_list)

    type      ir ao estado 70
    par_list  ir ao estado 71
    par_term  ir ao estado 72


Estado 46

   18 id_list: IDENTIFIER COMMA . id_list

    IDENTIFIER  deslocar, e ir ao estado 73

    id_list  ir ao estado 74


Estado 47

   69 arit_expr: arit_expr . INC_OP
   70          | arit_expr . DEC_OP
   71          | arit_expr . PLUS_OP arit_expr_base
   72          | arit_expr . SUB_OP arit_expr_base
   73          | arit_expr . DIV_OP arit_expr_base
   74          | arit_expr . STAR arit_expr_base
   75          | arit_expr . MOD_OP arit_expr_base
   77 arit_expr_base: L_PARENTHESIS arit_expr . R_PARENTHESIS

    PLUS_OP        deslocar, e ir ao estado 49
    SUB_OP         deslocar, e ir ao estado 50
    DIV_OP         deslocar, e ir ao estado 51
    STAR           deslocar, e ir ao estado 52
    MOD_OP         deslocar, e ir ao estado 53
    INC_OP         deslocar, e ir ao estado 54
    DEC_OP         deslocar, e ir ao estado 55
    R_PARENTHESIS  deslocar, e ir ao estado 75


Estado 48

   79 log_expr: L_PARENTHESIS log_expr . R_PARENTHESIS
   80         | log_expr . op_log comp_expr

    AND_OP         deslocar, e ir ao estado 56
    OR_OP          deslocar, e ir ao estado 57
    NOT_OP         deslocar, e ir ao estado 58
    R_PARENTHESIS  deslocar, e ir ao estado 76

    op_log  ir ao estado 59


Estado 49

   71 arit_expr: arit_expr PLUS_OP . arit_expr_base

    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 77

    arit_expr_base  ir ao estado 78
    term            ir ao estado 79
    term_num        ir ao estado 41
    log_term        ir ao estado 42


Estado 50

   72 arit_expr: arit_expr SUB_OP . arit_expr_base

    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 77

    arit_expr_base  ir ao estado 80
    term            ir ao estado 79
    term_num        ir ao estado 41
    log_term        ir ao estado 42


Estado 51

   73 arit_expr: arit_expr DIV_OP . arit_expr_base

    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 77

    arit_expr_base  ir ao estado 81
    term            ir ao estado 79
    term_num        ir ao estado 41
    log_term        ir ao estado 42


Estado 52

   74 arit_expr: arit_expr STAR . arit_expr_base

    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 77

    arit_expr_base  ir ao estado 82
    term            ir ao estado 79
    term_num        ir ao estado 41
    log_term        ir ao estado 42


Estado 53

   75 arit_expr: arit_expr MOD_OP . arit_expr_base

    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 77

    arit_expr_base  ir ao estado 83
    term            ir ao estado 79
    term_num        ir ao estado 41
    log_term        ir ao estado 42


Estado 54

   69 arit_expr: arit_expr INC_OP .

    $padrão  reduzir usando a regra 69 (arit_expr)


Estado 55

   70 arit_expr: arit_expr DEC_OP .

    $padrão  reduzir usando a regra 70 (arit_expr)


Estado 56

   85 op_log: AND_OP .

    $padrão  reduzir usando a regra 85 (op_log)


Estado 57

   86 op_log: OR_OP .

    $padrão  reduzir usando a regra 86 (op_log)


Estado 58

   87 op_log: NOT_OP .

    $padrão  reduzir usando a regra 87 (op_log)


Estado 59

   80 log_expr: log_expr op_log . comp_expr

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_CHAR    deslocar, e ir ao estado 28
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33

    comp_expr       ir ao estado 84
    term            ir ao estado 85
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 60

   90 op_comp: GE_OP .

    $padrão  reduzir usando a regra 90 (op_comp)


Estado 61

   88 op_comp: SE_OP .

    $padrão  reduzir usando a regra 88 (op_comp)


Estado 62

   92 op_comp: EQ_OP .

    $padrão  reduzir usando a regra 92 (op_comp)


Estado 63

   93 op_comp: NE_OP .

    $padrão  reduzir usando a regra 93 (op_comp)


Estado 64

   91 op_comp: G_OP .

    $padrão  reduzir usando a regra 91 (op_comp)


Estado 65

   89 op_comp: S_OP .

    $padrão  reduzir usando a regra 89 (op_comp)


Estado 66

   82 comp_expr: comp_expr op_comp . arit_expr

    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 77

    arit_expr       ir ao estado 86
    arit_expr_base  ir ao estado 37
    term            ir ao estado 79
    term_num        ir ao estado 41
    log_term        ir ao estado 42


Estado 67

   83 comp_expr: literal_string EQ_OP . literal_string

    LITERAL_STRING  deslocar, e ir ao estado 26
    LITERAL_CHAR    deslocar, e ir ao estado 28

    literal_string  ir ao estado 87


Estado 68

   84 comp_expr: literal_string NE_OP . literal_string

    LITERAL_STRING  deslocar, e ir ao estado 26
    LITERAL_CHAR    deslocar, e ir ao estado 28

    literal_string  ir ao estado 88


Estado 69

   10 initialization: type IDENTIFIER ASSINGMENT expr .

    $padrão  reduzir usando a regra 10 (initialization)


Estado 70

   67 par_term: type . IDENTIFIER

    IDENTIFIER  deslocar, e ir ao estado 89


Estado 71

   44 fun_struct: type IDENTIFIER L_PARENTHESIS par_list . R_PARENTHESIS block

    R_PARENTHESIS  deslocar, e ir ao estado 90


Estado 72

   65 par_list: par_term .
   66         | par_term . COMMA par_list

    COMMA  deslocar, e ir ao estado 91

    $padrão  reduzir usando a regra 65 (par_list)


Estado 73

   17 id_list: IDENTIFIER .
   18        | IDENTIFIER . COMMA id_list

    COMMA  deslocar, e ir ao estado 46

    $padrão  reduzir usando a regra 17 (id_list)


Estado 74

   18 id_list: IDENTIFIER COMMA id_list .

    $padrão  reduzir usando a regra 18 (id_list)


Estado 75

   77 arit_expr_base: L_PARENTHESIS arit_expr R_PARENTHESIS .

    $padrão  reduzir usando a regra 77 (arit_expr_base)


Estado 76

   79 log_expr: L_PARENTHESIS log_expr R_PARENTHESIS .

    $padrão  reduzir usando a regra 79 (log_expr)


Estado 77

   77 arit_expr_base: L_PARENTHESIS . arit_expr R_PARENTHESIS

    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 77

    arit_expr       ir ao estado 47
    arit_expr_base  ir ao estado 37
    term            ir ao estado 79
    term_num        ir ao estado 41
    log_term        ir ao estado 42


Estado 78

   71 arit_expr: arit_expr PLUS_OP arit_expr_base .

    $padrão  reduzir usando a regra 71 (arit_expr)


Estado 79

   76 arit_expr_base: term .

    $padrão  reduzir usando a regra 76 (arit_expr_base)


Estado 80

   72 arit_expr: arit_expr SUB_OP arit_expr_base .

    $padrão  reduzir usando a regra 72 (arit_expr)


Estado 81

   73 arit_expr: arit_expr DIV_OP arit_expr_base .

    $padrão  reduzir usando a regra 73 (arit_expr)


Estado 82

   74 arit_expr: arit_expr STAR arit_expr_base .

    $padrão  reduzir usando a regra 74 (arit_expr)


Estado 83

   75 arit_expr: arit_expr MOD_OP arit_expr_base .

    $padrão  reduzir usando a regra 75 (arit_expr)


Estado 84

   80 log_expr: log_expr op_log comp_expr .
   82 comp_expr: comp_expr . op_comp arit_expr

    GE_OP  deslocar, e ir ao estado 60
    SE_OP  deslocar, e ir ao estado 61
    EQ_OP  deslocar, e ir ao estado 62
    NE_OP  deslocar, e ir ao estado 63
    G_OP   deslocar, e ir ao estado 64
    S_OP   deslocar, e ir ao estado 65

    $padrão  reduzir usando a regra 80 (log_expr)

    op_comp  ir ao estado 66


Estado 85

   81 comp_expr: term .

    $padrão  reduzir usando a regra 81 (comp_expr)


Estado 86

   69 arit_expr: arit_expr . INC_OP
   70          | arit_expr . DEC_OP
   71          | arit_expr . PLUS_OP arit_expr_base
   72          | arit_expr . SUB_OP arit_expr_base
   73          | arit_expr . DIV_OP arit_expr_base
   74          | arit_expr . STAR arit_expr_base
   75          | arit_expr . MOD_OP arit_expr_base
   82 comp_expr: comp_expr op_comp arit_expr .

    PLUS_OP  deslocar, e ir ao estado 49
    SUB_OP   deslocar, e ir ao estado 50
    DIV_OP   deslocar, e ir ao estado 51
    STAR     deslocar, e ir ao estado 52
    MOD_OP   deslocar, e ir ao estado 53
    INC_OP   deslocar, e ir ao estado 54
    DEC_OP   deslocar, e ir ao estado 55

    $padrão  reduzir usando a regra 82 (comp_expr)


Estado 87

   83 comp_expr: literal_string EQ_OP literal_string .

    $padrão  reduzir usando a regra 83 (comp_expr)


Estado 88

   84 comp_expr: literal_string NE_OP literal_string .

    $padrão  reduzir usando a regra 84 (comp_expr)


Estado 89

   67 par_term: type IDENTIFIER .

    $padrão  reduzir usando a regra 67 (par_term)


Estado 90

   44 fun_struct: type IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS . block

    L_KEY  deslocar, e ir ao estado 92

    block  ir ao estado 93


Estado 91

   66 par_list: par_term COMMA . par_list

    INT_TYPE      deslocar, e ir ao estado 2
    FLOAT_TYPE    deslocar, e ir ao estado 3
    DOUBLE_TYPE   deslocar, e ir ao estado 4
    STRING_TYPE   deslocar, e ir ao estado 5
    BOOLEAN_TYPE  deslocar, e ir ao estado 6
    MATRIZ_TYPE   deslocar, e ir ao estado 7
    VOID_TYPE     deslocar, e ir ao estado 8
    CHAR_TYPE     deslocar, e ir ao estado 9

    $padrão  reduzir usando a regra 64 (par_list)

    type      ir ao estado 70
    par_list  ir ao estado 94
    par_term  ir ao estado 72


Estado 92

   46 block: L_KEY . $@3 stm_list R_KEY

    $padrão  reduzir usando a regra 45 ($@3)

    $@3  ir ao estado 95


Estado 93

   44 fun_struct: type IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS block .

    $padrão  reduzir usando a regra 44 (fun_struct)


Estado 94

   66 par_list: par_term COMMA par_list .

    $padrão  reduzir usando a regra 66 (par_list)


Estado 95

   46 block: L_KEY $@3 . stm_list R_KEY

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 96
    INT_TYPE        deslocar, e ir ao estado 2
    FLOAT_TYPE      deslocar, e ir ao estado 3
    DOUBLE_TYPE     deslocar, e ir ao estado 4
    STRING_TYPE     deslocar, e ir ao estado 5
    BOOLEAN_TYPE    deslocar, e ir ao estado 6
    MATRIZ_TYPE     deslocar, e ir ao estado 7
    VOID_TYPE       deslocar, e ir ao estado 8
    LITERAL_CHAR    deslocar, e ir ao estado 28
    CHAR_TYPE       deslocar, e ir ao estado 9
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 34
    IF_STM          deslocar, e ir ao estado 97
    FOR_STM         deslocar, e ir ao estado 98
    DO_STM          deslocar, e ir ao estado 99
    WHILE_STM       deslocar, e ir ao estado 100
    SWITCH_STM      deslocar, e ir ao estado 101
    PRINT           deslocar, e ir ao estado 102
    PRINTF          deslocar, e ir ao estado 103

    decl            ir ao estado 104
    assingment      ir ao estado 105
    initialization  ir ao estado 106
    print_stm       ir ao estado 107
    expres_list     ir ao estado 108
    expr            ir ao estado 109
    cond_stm        ir ao estado 110
    if_struct       ir ao estado 111
    switch_struct   ir ao estado 112
    loop_stm        ir ao estado 113
    while_struct    ir ao estado 114
    for_struct      ir ao estado 115
    stm_list        ir ao estado 116
    stm             ir ao estado 117
    type            ir ao estado 118
    arit_expr       ir ao estado 36
    arit_expr_base  ir ao estado 37
    log_expr        ir ao estado 38
    comp_expr       ir ao estado 39
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 96

    9 assingment: IDENTIFIER . ASSINGMENT expr
   96 term: IDENTIFIER .

    ASSINGMENT  deslocar, e ir ao estado 18

    $padrão  reduzir usando a regra 96 (term)


Estado 97

   25 if_struct: IF_STM . L_PARENTHESIS log_expr R_PARENTHESIS L_KEY stm_list R_KEY else_struct

    L_PARENTHESIS  deslocar, e ir ao estado 119


Estado 98

   41 for_struct: FOR_STM . L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 block

    L_PARENTHESIS  deslocar, e ir ao estado 120


Estado 99

   38 while_struct: DO_STM . block WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS SEMICOLON

    L_KEY  deslocar, e ir ao estado 92

    block  ir ao estado 121


Estado 100

   37 while_struct: WHILE_STM . L_PARENTHESIS log_expr R_PARENTHESIS block

    L_PARENTHESIS  deslocar, e ir ao estado 122


Estado 101

   31 switch_struct: SWITCH_STM . L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

    L_PARENTHESIS  deslocar, e ir ao estado 123


Estado 102

   11 print_stm: PRINT . L_PARENTHESIS literal_string R_PARENTHESIS
   12          | PRINT . L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS
   15          | PRINT . L_PARENTHESIS IDENTIFIER R_PARENTHESIS

    L_PARENTHESIS  deslocar, e ir ao estado 124


Estado 103

   13 print_stm: PRINTF . L_PARENTHESIS literal_string R_PARENTHESIS
   14          | PRINTF . L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS
   16          | PRINTF . L_PARENTHESIS IDENTIFIER R_PARENTHESIS

    L_PARENTHESIS  deslocar, e ir ao estado 125


Estado 104

   49 stm: decl . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 126


Estado 105

   54 stm: assingment . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 127


Estado 106

   55 stm: initialization . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 128


Estado 107

   52 stm: print_stm . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 129


Estado 108

   53 stm: expres_list . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 130


Estado 109

   19 expres_list: expr . SEMICOLON
   20            | expr . SEMICOLON expres_list

    SEMICOLON  deslocar, e ir ao estado 131


Estado 110

   50 stm: cond_stm .

    $padrão  reduzir usando a regra 50 (stm)


Estado 111

   23 cond_stm: if_struct .

    $padrão  reduzir usando a regra 23 (cond_stm)


Estado 112

   24 cond_stm: switch_struct .

    $padrão  reduzir usando a regra 24 (cond_stm)


Estado 113

   51 stm: loop_stm .

    $padrão  reduzir usando a regra 51 (stm)


Estado 114

   35 loop_stm: while_struct .

    $padrão  reduzir usando a regra 35 (loop_stm)


Estado 115

   36 loop_stm: for_struct .

    $padrão  reduzir usando a regra 36 (loop_stm)


Estado 116

   46 block: L_KEY $@3 stm_list . R_KEY

    R_KEY  deslocar, e ir ao estado 132


Estado 117

   47 stm_list: stm .
   48         | stm . stm_list

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 96
    INT_TYPE        deslocar, e ir ao estado 2
    FLOAT_TYPE      deslocar, e ir ao estado 3
    DOUBLE_TYPE     deslocar, e ir ao estado 4
    STRING_TYPE     deslocar, e ir ao estado 5
    BOOLEAN_TYPE    deslocar, e ir ao estado 6
    MATRIZ_TYPE     deslocar, e ir ao estado 7
    VOID_TYPE       deslocar, e ir ao estado 8
    LITERAL_CHAR    deslocar, e ir ao estado 28
    CHAR_TYPE       deslocar, e ir ao estado 9
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 34
    IF_STM          deslocar, e ir ao estado 97
    FOR_STM         deslocar, e ir ao estado 98
    DO_STM          deslocar, e ir ao estado 99
    WHILE_STM       deslocar, e ir ao estado 100
    SWITCH_STM      deslocar, e ir ao estado 101
    PRINT           deslocar, e ir ao estado 102
    PRINTF          deslocar, e ir ao estado 103

    $padrão  reduzir usando a regra 47 (stm_list)

    decl            ir ao estado 104
    assingment      ir ao estado 105
    initialization  ir ao estado 106
    print_stm       ir ao estado 107
    expres_list     ir ao estado 108
    expr            ir ao estado 109
    cond_stm        ir ao estado 110
    if_struct       ir ao estado 111
    switch_struct   ir ao estado 112
    loop_stm        ir ao estado 113
    while_struct    ir ao estado 114
    for_struct      ir ao estado 115
    stm_list        ir ao estado 133
    stm             ir ao estado 117
    type            ir ao estado 118
    arit_expr       ir ao estado 36
    arit_expr_base  ir ao estado 37
    log_expr        ir ao estado 38
    comp_expr       ir ao estado 39
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 118

    8 decl: type . id_list
   10 initialization: type . IDENTIFIER ASSINGMENT expr

    IDENTIFIER  deslocar, e ir ao estado 134

    id_list  ir ao estado 25


Estado 119

   25 if_struct: IF_STM L_PARENTHESIS . log_expr R_PARENTHESIS L_KEY stm_list R_KEY else_struct

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_CHAR    deslocar, e ir ao estado 28
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 135

    log_expr        ir ao estado 136
    comp_expr       ir ao estado 39
    term            ir ao estado 85
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 120

   41 for_struct: FOR_STM L_PARENTHESIS . $@1 initialization SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 block

    $padrão  reduzir usando a regra 39 ($@1)

    $@1  ir ao estado 137


Estado 121

   38 while_struct: DO_STM block . WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS SEMICOLON

    WHILE_STM  deslocar, e ir ao estado 138


Estado 122

   37 while_struct: WHILE_STM L_PARENTHESIS . log_expr R_PARENTHESIS block

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_CHAR    deslocar, e ir ao estado 28
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 135

    log_expr        ir ao estado 139
    comp_expr       ir ao estado 39
    term            ir ao estado 85
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 123

   31 switch_struct: SWITCH_STM L_PARENTHESIS . literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_CHAR    deslocar, e ir ao estado 28
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33

    term            ir ao estado 140
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_term    ir ao estado 141
    literal_string  ir ao estado 142


Estado 124

   11 print_stm: PRINT L_PARENTHESIS . literal_string R_PARENTHESIS
   12          | PRINT L_PARENTHESIS . literal_string COMMA id_list R_PARENTHESIS
   15          | PRINT L_PARENTHESIS . IDENTIFIER R_PARENTHESIS

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 143
    LITERAL_CHAR    deslocar, e ir ao estado 28

    literal_string  ir ao estado 144


Estado 125

   13 print_stm: PRINTF L_PARENTHESIS . literal_string R_PARENTHESIS
   14          | PRINTF L_PARENTHESIS . literal_string COMMA id_list R_PARENTHESIS
   16          | PRINTF L_PARENTHESIS . IDENTIFIER R_PARENTHESIS

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 145
    LITERAL_CHAR    deslocar, e ir ao estado 28

    literal_string  ir ao estado 146


Estado 126

   49 stm: decl SEMICOLON .

    $padrão  reduzir usando a regra 49 (stm)


Estado 127

   54 stm: assingment SEMICOLON .

    $padrão  reduzir usando a regra 54 (stm)


Estado 128

   55 stm: initialization SEMICOLON .

    $padrão  reduzir usando a regra 55 (stm)


Estado 129

   52 stm: print_stm SEMICOLON .

    $padrão  reduzir usando a regra 52 (stm)


Estado 130

   53 stm: expres_list SEMICOLON .

    $padrão  reduzir usando a regra 53 (stm)


Estado 131

   19 expres_list: expr SEMICOLON .
   20            | expr SEMICOLON . expres_list

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_CHAR    deslocar, e ir ao estado 28
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 34

    $padrão  reduzir usando a regra 19 (expres_list)

    expres_list     ir ao estado 147
    expr            ir ao estado 109
    arit_expr       ir ao estado 36
    arit_expr_base  ir ao estado 37
    log_expr        ir ao estado 38
    comp_expr       ir ao estado 39
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 132

   46 block: L_KEY $@3 stm_list R_KEY .

    $padrão  reduzir usando a regra 46 (block)


Estado 133

   48 stm_list: stm stm_list .

    $padrão  reduzir usando a regra 48 (stm_list)


Estado 134

   10 initialization: type IDENTIFIER . ASSINGMENT expr
   17 id_list: IDENTIFIER .
   18        | IDENTIFIER . COMMA id_list

    ASSINGMENT  deslocar, e ir ao estado 44
    COMMA       deslocar, e ir ao estado 46

    $padrão  reduzir usando a regra 17 (id_list)


Estado 135

   79 log_expr: L_PARENTHESIS . log_expr R_PARENTHESIS

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_CHAR    deslocar, e ir ao estado 28
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 135

    log_expr        ir ao estado 48
    comp_expr       ir ao estado 39
    term            ir ao estado 85
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 136

   25 if_struct: IF_STM L_PARENTHESIS log_expr . R_PARENTHESIS L_KEY stm_list R_KEY else_struct
   80 log_expr: log_expr . op_log comp_expr

    AND_OP         deslocar, e ir ao estado 56
    OR_OP          deslocar, e ir ao estado 57
    NOT_OP         deslocar, e ir ao estado 58
    R_PARENTHESIS  deslocar, e ir ao estado 148

    op_log  ir ao estado 59


Estado 137

   41 for_struct: FOR_STM L_PARENTHESIS $@1 . initialization SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 block

    INT_TYPE      deslocar, e ir ao estado 2
    FLOAT_TYPE    deslocar, e ir ao estado 3
    DOUBLE_TYPE   deslocar, e ir ao estado 4
    STRING_TYPE   deslocar, e ir ao estado 5
    BOOLEAN_TYPE  deslocar, e ir ao estado 6
    MATRIZ_TYPE   deslocar, e ir ao estado 7
    VOID_TYPE     deslocar, e ir ao estado 8
    CHAR_TYPE     deslocar, e ir ao estado 9

    initialization  ir ao estado 149
    type            ir ao estado 150


Estado 138

   38 while_struct: DO_STM block WHILE_STM . L_PARENTHESIS log_expr R_PARENTHESIS SEMICOLON

    L_PARENTHESIS  deslocar, e ir ao estado 151


Estado 139

   37 while_struct: WHILE_STM L_PARENTHESIS log_expr . R_PARENTHESIS block
   80 log_expr: log_expr . op_log comp_expr

    AND_OP         deslocar, e ir ao estado 56
    OR_OP          deslocar, e ir ao estado 57
    NOT_OP         deslocar, e ir ao estado 58
    R_PARENTHESIS  deslocar, e ir ao estado 152

    op_log  ir ao estado 59


Estado 140

  102 literal_term: term .

    $padrão  reduzir usando a regra 102 (literal_term)


Estado 141

   31 switch_struct: SWITCH_STM L_PARENTHESIS literal_term . R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

    R_PARENTHESIS  deslocar, e ir ao estado 153


Estado 142

  103 literal_term: literal_string .

    $padrão  reduzir usando a regra 103 (literal_term)


Estado 143

   15 print_stm: PRINT L_PARENTHESIS IDENTIFIER . R_PARENTHESIS

    R_PARENTHESIS  deslocar, e ir ao estado 154


Estado 144

   11 print_stm: PRINT L_PARENTHESIS literal_string . R_PARENTHESIS
   12          | PRINT L_PARENTHESIS literal_string . COMMA id_list R_PARENTHESIS

    R_PARENTHESIS  deslocar, e ir ao estado 155
    COMMA          deslocar, e ir ao estado 156


Estado 145

   16 print_stm: PRINTF L_PARENTHESIS IDENTIFIER . R_PARENTHESIS

    R_PARENTHESIS  deslocar, e ir ao estado 157


Estado 146

   13 print_stm: PRINTF L_PARENTHESIS literal_string . R_PARENTHESIS
   14          | PRINTF L_PARENTHESIS literal_string . COMMA id_list R_PARENTHESIS

    R_PARENTHESIS  deslocar, e ir ao estado 158
    COMMA          deslocar, e ir ao estado 159


Estado 147

   20 expres_list: expr SEMICOLON expres_list .

    $padrão  reduzir usando a regra 20 (expres_list)


Estado 148

   25 if_struct: IF_STM L_PARENTHESIS log_expr R_PARENTHESIS . L_KEY stm_list R_KEY else_struct

    L_KEY  deslocar, e ir ao estado 160


Estado 149

   41 for_struct: FOR_STM L_PARENTHESIS $@1 initialization . SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 block

    SEMICOLON  deslocar, e ir ao estado 161


Estado 150

   10 initialization: type . IDENTIFIER ASSINGMENT expr

    IDENTIFIER  deslocar, e ir ao estado 162


Estado 151

   38 while_struct: DO_STM block WHILE_STM L_PARENTHESIS . log_expr R_PARENTHESIS SEMICOLON

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_CHAR    deslocar, e ir ao estado 28
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 135

    log_expr        ir ao estado 163
    comp_expr       ir ao estado 39
    term            ir ao estado 85
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 152

   37 while_struct: WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS . block

    L_KEY  deslocar, e ir ao estado 92

    block  ir ao estado 164


Estado 153

   31 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS . L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

    L_KEY  deslocar, e ir ao estado 165


Estado 154

   15 print_stm: PRINT L_PARENTHESIS IDENTIFIER R_PARENTHESIS .

    $padrão  reduzir usando a regra 15 (print_stm)


Estado 155

   11 print_stm: PRINT L_PARENTHESIS literal_string R_PARENTHESIS .

    $padrão  reduzir usando a regra 11 (print_stm)


Estado 156

   12 print_stm: PRINT L_PARENTHESIS literal_string COMMA . id_list R_PARENTHESIS

    IDENTIFIER  deslocar, e ir ao estado 73

    id_list  ir ao estado 166


Estado 157

   16 print_stm: PRINTF L_PARENTHESIS IDENTIFIER R_PARENTHESIS .

    $padrão  reduzir usando a regra 16 (print_stm)


Estado 158

   13 print_stm: PRINTF L_PARENTHESIS literal_string R_PARENTHESIS .

    $padrão  reduzir usando a regra 13 (print_stm)


Estado 159

   14 print_stm: PRINTF L_PARENTHESIS literal_string COMMA . id_list R_PARENTHESIS

    IDENTIFIER  deslocar, e ir ao estado 73

    id_list  ir ao estado 167


Estado 160

   25 if_struct: IF_STM L_PARENTHESIS log_expr R_PARENTHESIS L_KEY . stm_list R_KEY else_struct

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 96
    INT_TYPE        deslocar, e ir ao estado 2
    FLOAT_TYPE      deslocar, e ir ao estado 3
    DOUBLE_TYPE     deslocar, e ir ao estado 4
    STRING_TYPE     deslocar, e ir ao estado 5
    BOOLEAN_TYPE    deslocar, e ir ao estado 6
    MATRIZ_TYPE     deslocar, e ir ao estado 7
    VOID_TYPE       deslocar, e ir ao estado 8
    LITERAL_CHAR    deslocar, e ir ao estado 28
    CHAR_TYPE       deslocar, e ir ao estado 9
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 34
    IF_STM          deslocar, e ir ao estado 97
    FOR_STM         deslocar, e ir ao estado 98
    DO_STM          deslocar, e ir ao estado 99
    WHILE_STM       deslocar, e ir ao estado 100
    SWITCH_STM      deslocar, e ir ao estado 101
    PRINT           deslocar, e ir ao estado 102
    PRINTF          deslocar, e ir ao estado 103

    decl            ir ao estado 104
    assingment      ir ao estado 105
    initialization  ir ao estado 106
    print_stm       ir ao estado 107
    expres_list     ir ao estado 108
    expr            ir ao estado 109
    cond_stm        ir ao estado 110
    if_struct       ir ao estado 111
    switch_struct   ir ao estado 112
    loop_stm        ir ao estado 113
    while_struct    ir ao estado 114
    for_struct      ir ao estado 115
    stm_list        ir ao estado 168
    stm             ir ao estado 117
    type            ir ao estado 118
    arit_expr       ir ao estado 36
    arit_expr_base  ir ao estado 37
    log_expr        ir ao estado 38
    comp_expr       ir ao estado 39
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 161

   41 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON . log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 block

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_CHAR    deslocar, e ir ao estado 28
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 135

    log_expr        ir ao estado 169
    comp_expr       ir ao estado 39
    term            ir ao estado 85
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 162

   10 initialization: type IDENTIFIER . ASSINGMENT expr

    ASSINGMENT  deslocar, e ir ao estado 44


Estado 163

   38 while_struct: DO_STM block WHILE_STM L_PARENTHESIS log_expr . R_PARENTHESIS SEMICOLON
   80 log_expr: log_expr . op_log comp_expr

    AND_OP         deslocar, e ir ao estado 56
    OR_OP          deslocar, e ir ao estado 57
    NOT_OP         deslocar, e ir ao estado 58
    R_PARENTHESIS  deslocar, e ir ao estado 170

    op_log  ir ao estado 59


Estado 164

   37 while_struct: WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS block .

    $padrão  reduzir usando a regra 37 (while_struct)


Estado 165

   31 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY . case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

    CASE  deslocar, e ir ao estado 171

    $padrão  reduzir usando a regra 32 (case_list_switch)

    case_list_switch  ir ao estado 172
    case_switch       ir ao estado 173


Estado 166

   12 print_stm: PRINT L_PARENTHESIS literal_string COMMA id_list . R_PARENTHESIS

    R_PARENTHESIS  deslocar, e ir ao estado 174


Estado 167

   14 print_stm: PRINTF L_PARENTHESIS literal_string COMMA id_list . R_PARENTHESIS

    R_PARENTHESIS  deslocar, e ir ao estado 175


Estado 168

   25 if_struct: IF_STM L_PARENTHESIS log_expr R_PARENTHESIS L_KEY stm_list . R_KEY else_struct

    R_KEY  deslocar, e ir ao estado 176


Estado 169

   41 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr . SEMICOLON for_struct_stm R_PARENTHESIS $@2 block
   80 log_expr: log_expr . op_log comp_expr

    AND_OP     deslocar, e ir ao estado 56
    OR_OP      deslocar, e ir ao estado 57
    NOT_OP     deslocar, e ir ao estado 58
    SEMICOLON  deslocar, e ir ao estado 177

    op_log  ir ao estado 59


Estado 170

   38 while_struct: DO_STM block WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 178


Estado 171

   34 case_switch: CASE . literal_term DOUBLE_DOT stm_list BREAK SEMICOLON

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_CHAR    deslocar, e ir ao estado 28
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33

    term            ir ao estado 140
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_term    ir ao estado 179
    literal_string  ir ao estado 142


Estado 172

   31 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch . DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

    DEFAULT  deslocar, e ir ao estado 180


Estado 173

   33 case_list_switch: case_switch . case_list_switch

    CASE  deslocar, e ir ao estado 171

    $padrão  reduzir usando a regra 32 (case_list_switch)

    case_list_switch  ir ao estado 181
    case_switch       ir ao estado 173


Estado 174

   12 print_stm: PRINT L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS .

    $padrão  reduzir usando a regra 12 (print_stm)


Estado 175

   14 print_stm: PRINTF L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS .

    $padrão  reduzir usando a regra 14 (print_stm)


Estado 176

   25 if_struct: IF_STM L_PARENTHESIS log_expr R_PARENTHESIS L_KEY stm_list R_KEY . else_struct

    ELSE_IF_STM  deslocar, e ir ao estado 182

    ELSE_STM  reduzir usando a regra 28 (elseif_list)
    $padrão  reduzir usando a regra 26 (else_struct)

    else_struct    ir ao estado 183
    elseif_list    ir ao estado 184
    elseif_struct  ir ao estado 185


Estado 177

   41 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON . for_struct_stm R_PARENTHESIS $@2 block

    IDENTIFIER      deslocar, e ir ao estado 96
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 77

    assingment      ir ao estado 186
    for_struct_stm  ir ao estado 187
    arit_expr       ir ao estado 188
    arit_expr_base  ir ao estado 37
    term            ir ao estado 79
    term_num        ir ao estado 41
    log_term        ir ao estado 42


Estado 178

   38 while_struct: DO_STM block WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS SEMICOLON .

    $padrão  reduzir usando a regra 38 (while_struct)


Estado 179

   34 case_switch: CASE literal_term . DOUBLE_DOT stm_list BREAK SEMICOLON

    DOUBLE_DOT  deslocar, e ir ao estado 189


Estado 180

   31 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT . DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

    DOUBLE_DOT  deslocar, e ir ao estado 190


Estado 181

   33 case_list_switch: case_switch case_list_switch .

    $padrão  reduzir usando a regra 33 (case_list_switch)


Estado 182

   30 elseif_struct: ELSE_IF_STM . L_PARENTHESIS log_expr R_PARENTHESIS L_KEY stm_list R_KEY

    L_PARENTHESIS  deslocar, e ir ao estado 191


Estado 183

   25 if_struct: IF_STM L_PARENTHESIS log_expr R_PARENTHESIS L_KEY stm_list R_KEY else_struct .

    $padrão  reduzir usando a regra 25 (if_struct)


Estado 184

   27 else_struct: elseif_list . ELSE_STM L_KEY stm_list R_KEY

    ELSE_STM  deslocar, e ir ao estado 192


Estado 185

   29 elseif_list: elseif_struct . elseif_list

    ELSE_IF_STM  deslocar, e ir ao estado 182

    $padrão  reduzir usando a regra 28 (elseif_list)

    elseif_list    ir ao estado 193
    elseif_struct  ir ao estado 185


Estado 186

   43 for_struct_stm: assingment .

    $padrão  reduzir usando a regra 43 (for_struct_stm)


Estado 187

   41 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON for_struct_stm . R_PARENTHESIS $@2 block

    R_PARENTHESIS  deslocar, e ir ao estado 194


Estado 188

   42 for_struct_stm: arit_expr .
   69 arit_expr: arit_expr . INC_OP
   70          | arit_expr . DEC_OP
   71          | arit_expr . PLUS_OP arit_expr_base
   72          | arit_expr . SUB_OP arit_expr_base
   73          | arit_expr . DIV_OP arit_expr_base
   74          | arit_expr . STAR arit_expr_base
   75          | arit_expr . MOD_OP arit_expr_base

    PLUS_OP  deslocar, e ir ao estado 49
    SUB_OP   deslocar, e ir ao estado 50
    DIV_OP   deslocar, e ir ao estado 51
    STAR     deslocar, e ir ao estado 52
    MOD_OP   deslocar, e ir ao estado 53
    INC_OP   deslocar, e ir ao estado 54
    DEC_OP   deslocar, e ir ao estado 55

    $padrão  reduzir usando a regra 42 (for_struct_stm)


Estado 189

   34 case_switch: CASE literal_term DOUBLE_DOT . stm_list BREAK SEMICOLON

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 96
    INT_TYPE        deslocar, e ir ao estado 2
    FLOAT_TYPE      deslocar, e ir ao estado 3
    DOUBLE_TYPE     deslocar, e ir ao estado 4
    STRING_TYPE     deslocar, e ir ao estado 5
    BOOLEAN_TYPE    deslocar, e ir ao estado 6
    MATRIZ_TYPE     deslocar, e ir ao estado 7
    VOID_TYPE       deslocar, e ir ao estado 8
    LITERAL_CHAR    deslocar, e ir ao estado 28
    CHAR_TYPE       deslocar, e ir ao estado 9
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 34
    IF_STM          deslocar, e ir ao estado 97
    FOR_STM         deslocar, e ir ao estado 98
    DO_STM          deslocar, e ir ao estado 99
    WHILE_STM       deslocar, e ir ao estado 100
    SWITCH_STM      deslocar, e ir ao estado 101
    PRINT           deslocar, e ir ao estado 102
    PRINTF          deslocar, e ir ao estado 103

    decl            ir ao estado 104
    assingment      ir ao estado 105
    initialization  ir ao estado 106
    print_stm       ir ao estado 107
    expres_list     ir ao estado 108
    expr            ir ao estado 109
    cond_stm        ir ao estado 110
    if_struct       ir ao estado 111
    switch_struct   ir ao estado 112
    loop_stm        ir ao estado 113
    while_struct    ir ao estado 114
    for_struct      ir ao estado 115
    stm_list        ir ao estado 195
    stm             ir ao estado 117
    type            ir ao estado 118
    arit_expr       ir ao estado 36
    arit_expr_base  ir ao estado 37
    log_expr        ir ao estado 38
    comp_expr       ir ao estado 39
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 190

   31 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT . stm_list BREAK SEMICOLON R_KEY

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 96
    INT_TYPE        deslocar, e ir ao estado 2
    FLOAT_TYPE      deslocar, e ir ao estado 3
    DOUBLE_TYPE     deslocar, e ir ao estado 4
    STRING_TYPE     deslocar, e ir ao estado 5
    BOOLEAN_TYPE    deslocar, e ir ao estado 6
    MATRIZ_TYPE     deslocar, e ir ao estado 7
    VOID_TYPE       deslocar, e ir ao estado 8
    LITERAL_CHAR    deslocar, e ir ao estado 28
    CHAR_TYPE       deslocar, e ir ao estado 9
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 34
    IF_STM          deslocar, e ir ao estado 97
    FOR_STM         deslocar, e ir ao estado 98
    DO_STM          deslocar, e ir ao estado 99
    WHILE_STM       deslocar, e ir ao estado 100
    SWITCH_STM      deslocar, e ir ao estado 101
    PRINT           deslocar, e ir ao estado 102
    PRINTF          deslocar, e ir ao estado 103

    decl            ir ao estado 104
    assingment      ir ao estado 105
    initialization  ir ao estado 106
    print_stm       ir ao estado 107
    expres_list     ir ao estado 108
    expr            ir ao estado 109
    cond_stm        ir ao estado 110
    if_struct       ir ao estado 111
    switch_struct   ir ao estado 112
    loop_stm        ir ao estado 113
    while_struct    ir ao estado 114
    for_struct      ir ao estado 115
    stm_list        ir ao estado 196
    stm             ir ao estado 117
    type            ir ao estado 118
    arit_expr       ir ao estado 36
    arit_expr_base  ir ao estado 37
    log_expr        ir ao estado 38
    comp_expr       ir ao estado 39
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 191

   30 elseif_struct: ELSE_IF_STM L_PARENTHESIS . log_expr R_PARENTHESIS L_KEY stm_list R_KEY

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_CHAR    deslocar, e ir ao estado 28
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 135

    log_expr        ir ao estado 197
    comp_expr       ir ao estado 39
    term            ir ao estado 85
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 192

   27 else_struct: elseif_list ELSE_STM . L_KEY stm_list R_KEY

    L_KEY  deslocar, e ir ao estado 198


Estado 193

   29 elseif_list: elseif_struct elseif_list .

    $padrão  reduzir usando a regra 29 (elseif_list)


Estado 194

   41 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS . $@2 block

    $padrão  reduzir usando a regra 40 ($@2)

    $@2  ir ao estado 199


Estado 195

   34 case_switch: CASE literal_term DOUBLE_DOT stm_list . BREAK SEMICOLON

    BREAK  deslocar, e ir ao estado 200


Estado 196

   31 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list . BREAK SEMICOLON R_KEY

    BREAK  deslocar, e ir ao estado 201


Estado 197

   30 elseif_struct: ELSE_IF_STM L_PARENTHESIS log_expr . R_PARENTHESIS L_KEY stm_list R_KEY
   80 log_expr: log_expr . op_log comp_expr

    AND_OP         deslocar, e ir ao estado 56
    OR_OP          deslocar, e ir ao estado 57
    NOT_OP         deslocar, e ir ao estado 58
    R_PARENTHESIS  deslocar, e ir ao estado 202

    op_log  ir ao estado 59


Estado 198

   27 else_struct: elseif_list ELSE_STM L_KEY . stm_list R_KEY

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 96
    INT_TYPE        deslocar, e ir ao estado 2
    FLOAT_TYPE      deslocar, e ir ao estado 3
    DOUBLE_TYPE     deslocar, e ir ao estado 4
    STRING_TYPE     deslocar, e ir ao estado 5
    BOOLEAN_TYPE    deslocar, e ir ao estado 6
    MATRIZ_TYPE     deslocar, e ir ao estado 7
    VOID_TYPE       deslocar, e ir ao estado 8
    LITERAL_CHAR    deslocar, e ir ao estado 28
    CHAR_TYPE       deslocar, e ir ao estado 9
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 34
    IF_STM          deslocar, e ir ao estado 97
    FOR_STM         deslocar, e ir ao estado 98
    DO_STM          deslocar, e ir ao estado 99
    WHILE_STM       deslocar, e ir ao estado 100
    SWITCH_STM      deslocar, e ir ao estado 101
    PRINT           deslocar, e ir ao estado 102
    PRINTF          deslocar, e ir ao estado 103

    decl            ir ao estado 104
    assingment      ir ao estado 105
    initialization  ir ao estado 106
    print_stm       ir ao estado 107
    expres_list     ir ao estado 108
    expr            ir ao estado 109
    cond_stm        ir ao estado 110
    if_struct       ir ao estado 111
    switch_struct   ir ao estado 112
    loop_stm        ir ao estado 113
    while_struct    ir ao estado 114
    for_struct      ir ao estado 115
    stm_list        ir ao estado 203
    stm             ir ao estado 117
    type            ir ao estado 118
    arit_expr       ir ao estado 36
    arit_expr_base  ir ao estado 37
    log_expr        ir ao estado 38
    comp_expr       ir ao estado 39
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 199

   41 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 . block

    L_KEY  deslocar, e ir ao estado 92

    block  ir ao estado 204


Estado 200

   34 case_switch: CASE literal_term DOUBLE_DOT stm_list BREAK . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 205


Estado 201

   31 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK . SEMICOLON R_KEY

    SEMICOLON  deslocar, e ir ao estado 206


Estado 202

   30 elseif_struct: ELSE_IF_STM L_PARENTHESIS log_expr R_PARENTHESIS . L_KEY stm_list R_KEY

    L_KEY  deslocar, e ir ao estado 207


Estado 203

   27 else_struct: elseif_list ELSE_STM L_KEY stm_list . R_KEY

    R_KEY  deslocar, e ir ao estado 208


Estado 204

   41 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 block .

    $padrão  reduzir usando a regra 41 (for_struct)


Estado 205

   34 case_switch: CASE literal_term DOUBLE_DOT stm_list BREAK SEMICOLON .

    $padrão  reduzir usando a regra 34 (case_switch)


Estado 206

   31 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON . R_KEY

    R_KEY  deslocar, e ir ao estado 209


Estado 207

   30 elseif_struct: ELSE_IF_STM L_PARENTHESIS log_expr R_PARENTHESIS L_KEY . stm_list R_KEY

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 96
    INT_TYPE        deslocar, e ir ao estado 2
    FLOAT_TYPE      deslocar, e ir ao estado 3
    DOUBLE_TYPE     deslocar, e ir ao estado 4
    STRING_TYPE     deslocar, e ir ao estado 5
    BOOLEAN_TYPE    deslocar, e ir ao estado 6
    MATRIZ_TYPE     deslocar, e ir ao estado 7
    VOID_TYPE       deslocar, e ir ao estado 8
    LITERAL_CHAR    deslocar, e ir ao estado 28
    CHAR_TYPE       deslocar, e ir ao estado 9
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 34
    IF_STM          deslocar, e ir ao estado 97
    FOR_STM         deslocar, e ir ao estado 98
    DO_STM          deslocar, e ir ao estado 99
    WHILE_STM       deslocar, e ir ao estado 100
    SWITCH_STM      deslocar, e ir ao estado 101
    PRINT           deslocar, e ir ao estado 102
    PRINTF          deslocar, e ir ao estado 103

    decl            ir ao estado 104
    assingment      ir ao estado 105
    initialization  ir ao estado 106
    print_stm       ir ao estado 107
    expres_list     ir ao estado 108
    expr            ir ao estado 109
    cond_stm        ir ao estado 110
    if_struct       ir ao estado 111
    switch_struct   ir ao estado 112
    loop_stm        ir ao estado 113
    while_struct    ir ao estado 114
    for_struct      ir ao estado 115
    stm_list        ir ao estado 210
    stm             ir ao estado 117
    type            ir ao estado 118
    arit_expr       ir ao estado 36
    arit_expr_base  ir ao estado 37
    log_expr        ir ao estado 38
    comp_expr       ir ao estado 39
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 208

   27 else_struct: elseif_list ELSE_STM L_KEY stm_list R_KEY .

    $padrão  reduzir usando a regra 27 (else_struct)


Estado 209

   31 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY .

    $padrão  reduzir usando a regra 31 (switch_struct)


Estado 210

   30 elseif_struct: ELSE_IF_STM L_PARENTHESIS log_expr R_PARENTHESIS L_KEY stm_list . R_KEY

    R_KEY  deslocar, e ir ao estado 211


Estado 211

   30 elseif_struct: ELSE_IF_STM L_PARENTHESIS log_expr R_PARENTHESIS L_KEY stm_list R_KEY .

    $padrão  reduzir usando a regra 30 (elseif_struct)
