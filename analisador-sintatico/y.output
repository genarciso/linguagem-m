Terminais sem uso na gramática

    FACT_OP
    L_BRACKET
    R_BRACKET
    CONTINUE
    CONSTANT
    RETURN
    EOL
    ADDRESS
    DOT
    MALLOC_OP
    FREE_OP
    CALLOC_OP


Estado 36 conflitos: 2 de redução/redução
Estado 47 conflitos: 1 de deslocamento/redução


Gramática

    0 $accept: program $end

    1 program: decls_list

    2 decls_list: decls
    3           | decls decls_list

    4 decls: decl SEMICOLON
    5      | assingment SEMICOLON
    6      | initialization SEMICOLON
    7      | fun_struct

    8 decl: type id_list

    9 assingment: IDENTIFIER ASSINGMENT expr

   10 initialization: type IDENTIFIER ASSINGMENT expr

   11 print_stm: PRINT L_PARENTHESIS literal_string R_PARENTHESIS
   12          | PRINT L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS
   13          | PRINTF L_PARENTHESIS literal_string R_PARENTHESIS
   14          | PRINTF L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS

   15 id_list: IDENTIFIER
   16        | IDENTIFIER COMMA id_list

   17 stm_list: stm
   18         | stm stm_list

   19 stm: decl SEMICOLON
   20    | cond_stm
   21    | loop_stm
   22    | print_stm SEMICOLON
   23    | expres_list SEMICOLON
   24    | assingment SEMICOLON
   25    | initialization SEMICOLON

   26 expres_list: expr SEMICOLON
   27            | expr SEMICOLON expres_list

   28 expr: log_expr
   29     | arit_expr

   30 cond_stm: if_struct
   31         | switch_struct

   32 if_struct: IF_STM L_PARENTHESIS log_expr R_PARENTHESIS block else_struct

   33 else_struct: %empty
   34            | elseif_list ELSE_STM block

   35 elseif_list: %empty
   36            | elseif_struct elseif_list

   37 elseif_struct: ELSE_IF_STM L_PARENTHESIS log_expr R_PARENTHESIS block

   38 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

   39 case_list_switch: %empty
   40                 | case_switch case_list_switch

   41 case_switch: CASE literal_term DOUBLE_DOT stm_list BREAK SEMICOLON

   42 loop_stm: while_struct
   43         | for_struct

   44 while_struct: WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS block
   45             | DO_STM block WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS SEMICOLON

   46 $@1: %empty

   47 $@2: %empty

   48 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 block

   49 for_struct_stm: arit_expr
   50               | assingment

   51 fun_struct: type IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS block

   52 $@3: %empty

   53 block: L_KEY $@3 stm_list R_KEY

   54 type: VOID_TYPE
   55     | INT_TYPE
   56     | FLOAT_TYPE
   57     | DOUBLE_TYPE
   58     | CHAR_TYPE
   59     | STRING_TYPE
   60     | BOOLEAN_TYPE
   61     | MATRIZ_TYPE

   62 par_list: %empty
   63         | par_term
   64         | par_term COMMA par_list

   65 par_term: type IDENTIFIER

   66 arit_expr: arit_expr_base
   67          | arit_expr PLUS_OP arit_expr_base
   68          | arit_expr SUB_OP arit_expr_base
   69          | arit_expr DIV_OP arit_expr_base
   70          | arit_expr STAR arit_expr_base
   71          | arit_expr MOD_OP arit_expr_base
   72          | arit_expr INC_OP
   73          | arit_expr DEC_OP

   74 arit_expr_base: term
   75               | L_PARENTHESIS arit_expr R_PARENTHESIS

   76 log_expr: comp_expr
   77         | L_PARENTHESIS log_expr R_PARENTHESIS
   78         | log_expr op_log comp_expr

   79 comp_expr: arit_expr
   80          | comp_expr op_comp arit_expr
   81          | literal_string EQ_OP literal_string
   82          | literal_string NE_OP literal_string

   83 op_log: AND_OP
   84       | OR_OP
   85       | NOT_OP

   86 op_comp: SE_OP
   87        | S_OP
   88        | GE_OP
   89        | G_OP
   90        | EQ_OP
   91        | NE_OP

   92 term: term_num
   93     | log_term
   94     | IDENTIFIER

   95 term_num: LITERAL_INT
   96         | LITERAL_FLOAT
   97         | LITERAL_DOUBLE

   98 log_term: TRUE_VAL
   99         | FALSE_VAL

  100 literal_term: term
  101             | literal_string

  102 literal_string: LITERAL_CHAR
  103               | LITERAL_STRING


Terminais, com as regras onde eles aparecem

    $end (0) 0
    error (256)
    LITERAL_STRING <sValue> (258) 103
    IDENTIFIER <sValue> (259) 9 10 15 16 51 65 94
    INT_TYPE <sValue> (260) 55
    FLOAT_TYPE <sValue> (261) 56
    DOUBLE_TYPE <sValue> (262) 57
    STRING_TYPE <sValue> (263) 59
    BOOLEAN_TYPE <sValue> (264) 60
    MATRIZ_TYPE <sValue> (265) 61
    VOID_TYPE <sValue> (266) 54
    LITERAL_CHAR <sValue> (267) 102
    CHAR_TYPE <sValue> (268) 58
    LITERAL_INT <iValue> (269) 95
    LITERAL_FLOAT <fValue> (270) 96
    LITERAL_DOUBLE <dValue> (271) 97
    TRUE_VAL <bValue> (272) 98
    FALSE_VAL <bValue> (273) 99
    PLUS_OP (274) 67
    SUB_OP (275) 68
    DIV_OP (276) 69
    STAR (277) 70
    MOD_OP (278) 71
    FACT_OP (279)
    ASSINGMENT (280) 9 10
    INC_OP (281) 72
    DEC_OP (282) 73
    GE_OP (283) 88
    SE_OP (284) 86
    EQ_OP (285) 81 90
    NE_OP (286) 82 91
    G_OP (287) 89
    S_OP (288) 87
    AND_OP (289) 83
    OR_OP (290) 84
    NOT_OP (291) 85
    L_PARENTHESIS (292) 11 12 13 14 32 37 38 44 45 48 51 75 77
    R_PARENTHESIS (293) 11 12 13 14 32 37 38 44 45 48 51 75 77
    L_KEY (294) 38 53
    R_KEY (295) 38 53
    L_BRACKET (296)
    R_BRACKET (297)
    IF_STM (298) 32
    ELSE_STM (299) 34
    ELSE_IF_STM (300) 37
    FOR_STM (301) 48
    DO_STM (302) 45
    WHILE_STM (303) 44 45
    SWITCH_STM (304) 38
    CONTINUE (305)
    BREAK (306) 38 41
    PRINT (307) 11 12
    PRINTF (308) 13 14
    CASE (309) 41
    DEFAULT (310) 38
    CONSTANT (311)
    RETURN (312)
    EOL (313)
    ADDRESS (314)
    SEMICOLON (315) 4 5 6 19 22 23 24 25 26 27 38 41 45 48
    COMMA (316) 12 14 16 64
    DOT (317)
    DOUBLE_DOT (318) 38 41
    MALLOC_OP (319)
    FREE_OP (320)
    CALLOC_OP (321)


Não terminais com as regras onde eles aparecem

    $accept (67)
        à esquerda: 0
    program (68)
        à esquerda: 1
        à direita: 0
    decls_list <sValue> (69)
        à esquerda: 2 3
        à direita: 1 3
    decls <sValue> (70)
        à esquerda: 4 5 6 7
        à direita: 2 3
    decl <sValue> (71)
        à esquerda: 8
        à direita: 4 19
    assingment <sValue> (72)
        à esquerda: 9
        à direita: 5 24 50
    initialization <sValue> (73)
        à esquerda: 10
        à direita: 6 25 48
    print_stm <sValue> (74)
        à esquerda: 11 12 13 14
        à direita: 22
    id_list <sValue> (75)
        à esquerda: 15 16
        à direita: 8 12 14 16
    stm_list <sValue> (76)
        à esquerda: 17 18
        à direita: 18 38 41 53
    stm <sValue> (77)
        à esquerda: 19 20 21 22 23 24 25
        à direita: 17 18
    expres_list <sValue> (78)
        à esquerda: 26 27
        à direita: 23 27
    expr <strValue> (79)
        à esquerda: 28 29
        à direita: 9 10 26 27
    cond_stm <sValue> (80)
        à esquerda: 30 31
        à direita: 20
    if_struct <sValue> (81)
        à esquerda: 32
        à direita: 30
    else_struct <sValue> (82)
        à esquerda: 33 34
        à direita: 32
    elseif_list <sValue> (83)
        à esquerda: 35 36
        à direita: 34 36
    elseif_struct <sValue> (84)
        à esquerda: 37
        à direita: 36
    switch_struct <sValue> (85)
        à esquerda: 38
        à direita: 31
    case_list_switch <sValue> (86)
        à esquerda: 39 40
        à direita: 38 40
    case_switch <sValue> (87)
        à esquerda: 41
        à direita: 40
    loop_stm <sValue> (88)
        à esquerda: 42 43
        à direita: 21
    while_struct <sValue> (89)
        à esquerda: 44 45
        à direita: 42
    for_struct <sValue> (90)
        à esquerda: 48
        à direita: 43
    $@1 (91)
        à esquerda: 46
        à direita: 48
    $@2 (92)
        à esquerda: 47
        à direita: 48
    for_struct_stm <strValue> (93)
        à esquerda: 49 50
        à direita: 48
    fun_struct <sValue> (94)
        à esquerda: 51
        à direita: 7
    block <sValue> (95)
        à esquerda: 53
        à direita: 32 34 37 44 45 48 51
    $@3 (96)
        à esquerda: 52
        à direita: 53
    type <sValue> (97)
        à esquerda: 54 55 56 57 58 59 60 61
        à direita: 8 10 51 65
    par_list <sValue> (98)
        à esquerda: 62 63 64
        à direita: 51 64
    par_term <sValue> (99)
        à esquerda: 65
        à direita: 63 64
    arit_expr <strValue> (100)
        à esquerda: 66 67 68 69 70 71 72 73
        à direita: 29 49 67 68 69 70 71 72 73 75 79 80
    arit_expr_base <strValue> (101)
        à esquerda: 74 75
        à direita: 66 67 68 69 70 71
    log_expr <strValue> (102)
        à esquerda: 76 77 78
        à direita: 28 32 37 44 45 48 77 78
    comp_expr <strValue> (103)
        à esquerda: 79 80 81 82
        à direita: 76 78 80
    op_log <sValue> (104)
        à esquerda: 83 84 85
        à direita: 78
    op_comp <sValue> (105)
        à esquerda: 86 87 88 89 90 91
        à direita: 80
    term <strValue> (106)
        à esquerda: 92 93 94
        à direita: 74 100
    term_num <strValue> (107)
        à esquerda: 95 96 97
        à direita: 92
    log_term <strValue> (108)
        à esquerda: 98 99
        à direita: 93
    literal_term <strValue> (109)
        à esquerda: 100 101
        à direita: 38 41
    literal_string <strValue> (110)
        à esquerda: 102 103
        à direita: 11 12 13 14 81 82 101


Estado 0

    0 $accept: . program $end

    IDENTIFIER    deslocar, e ir ao estado 1
    INT_TYPE      deslocar, e ir ao estado 2
    FLOAT_TYPE    deslocar, e ir ao estado 3
    DOUBLE_TYPE   deslocar, e ir ao estado 4
    STRING_TYPE   deslocar, e ir ao estado 5
    BOOLEAN_TYPE  deslocar, e ir ao estado 6
    MATRIZ_TYPE   deslocar, e ir ao estado 7
    VOID_TYPE     deslocar, e ir ao estado 8
    CHAR_TYPE     deslocar, e ir ao estado 9

    program         ir ao estado 10
    decls_list      ir ao estado 11
    decls           ir ao estado 12
    decl            ir ao estado 13
    assingment      ir ao estado 14
    initialization  ir ao estado 15
    fun_struct      ir ao estado 16
    type            ir ao estado 17


Estado 1

    9 assingment: IDENTIFIER . ASSINGMENT expr

    ASSINGMENT  deslocar, e ir ao estado 18


Estado 2

   55 type: INT_TYPE .

    $padrão  reduzir usando a regra 55 (type)


Estado 3

   56 type: FLOAT_TYPE .

    $padrão  reduzir usando a regra 56 (type)


Estado 4

   57 type: DOUBLE_TYPE .

    $padrão  reduzir usando a regra 57 (type)


Estado 5

   59 type: STRING_TYPE .

    $padrão  reduzir usando a regra 59 (type)


Estado 6

   60 type: BOOLEAN_TYPE .

    $padrão  reduzir usando a regra 60 (type)


Estado 7

   61 type: MATRIZ_TYPE .

    $padrão  reduzir usando a regra 61 (type)


Estado 8

   54 type: VOID_TYPE .

    $padrão  reduzir usando a regra 54 (type)


Estado 9

   58 type: CHAR_TYPE .

    $padrão  reduzir usando a regra 58 (type)


Estado 10

    0 $accept: program . $end

    $end  deslocar, e ir ao estado 19


Estado 11

    1 program: decls_list .

    $padrão  reduzir usando a regra 1 (program)


Estado 12

    2 decls_list: decls .
    3           | decls . decls_list

    IDENTIFIER    deslocar, e ir ao estado 1
    INT_TYPE      deslocar, e ir ao estado 2
    FLOAT_TYPE    deslocar, e ir ao estado 3
    DOUBLE_TYPE   deslocar, e ir ao estado 4
    STRING_TYPE   deslocar, e ir ao estado 5
    BOOLEAN_TYPE  deslocar, e ir ao estado 6
    MATRIZ_TYPE   deslocar, e ir ao estado 7
    VOID_TYPE     deslocar, e ir ao estado 8
    CHAR_TYPE     deslocar, e ir ao estado 9

    $padrão  reduzir usando a regra 2 (decls_list)

    decls_list      ir ao estado 20
    decls           ir ao estado 12
    decl            ir ao estado 13
    assingment      ir ao estado 14
    initialization  ir ao estado 15
    fun_struct      ir ao estado 16
    type            ir ao estado 17


Estado 13

    4 decls: decl . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 21


Estado 14

    5 decls: assingment . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 22


Estado 15

    6 decls: initialization . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 23


Estado 16

    7 decls: fun_struct .

    $padrão  reduzir usando a regra 7 (decls)


Estado 17

    8 decl: type . id_list
   10 initialization: type . IDENTIFIER ASSINGMENT expr
   51 fun_struct: type . IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS block

    IDENTIFIER  deslocar, e ir ao estado 24

    id_list  ir ao estado 25


Estado 18

    9 assingment: IDENTIFIER ASSINGMENT . expr

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_CHAR    deslocar, e ir ao estado 28
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 34

    expr            ir ao estado 35
    arit_expr       ir ao estado 36
    arit_expr_base  ir ao estado 37
    log_expr        ir ao estado 38
    comp_expr       ir ao estado 39
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 19

    0 $accept: program $end .

    $padrão  aceitar


Estado 20

    3 decls_list: decls decls_list .

    $padrão  reduzir usando a regra 3 (decls_list)


Estado 21

    4 decls: decl SEMICOLON .

    $padrão  reduzir usando a regra 4 (decls)


Estado 22

    5 decls: assingment SEMICOLON .

    $padrão  reduzir usando a regra 5 (decls)


Estado 23

    6 decls: initialization SEMICOLON .

    $padrão  reduzir usando a regra 6 (decls)


Estado 24

   10 initialization: type IDENTIFIER . ASSINGMENT expr
   15 id_list: IDENTIFIER .
   16        | IDENTIFIER . COMMA id_list
   51 fun_struct: type IDENTIFIER . L_PARENTHESIS par_list R_PARENTHESIS block

    ASSINGMENT     deslocar, e ir ao estado 44
    L_PARENTHESIS  deslocar, e ir ao estado 45
    COMMA          deslocar, e ir ao estado 46

    $padrão  reduzir usando a regra 15 (id_list)


Estado 25

    8 decl: type id_list .

    $padrão  reduzir usando a regra 8 (decl)


Estado 26

  103 literal_string: LITERAL_STRING .

    $padrão  reduzir usando a regra 103 (literal_string)


Estado 27

   94 term: IDENTIFIER .

    $padrão  reduzir usando a regra 94 (term)


Estado 28

  102 literal_string: LITERAL_CHAR .

    $padrão  reduzir usando a regra 102 (literal_string)


Estado 29

   95 term_num: LITERAL_INT .

    $padrão  reduzir usando a regra 95 (term_num)


Estado 30

   96 term_num: LITERAL_FLOAT .

    $padrão  reduzir usando a regra 96 (term_num)


Estado 31

   97 term_num: LITERAL_DOUBLE .

    $padrão  reduzir usando a regra 97 (term_num)


Estado 32

   98 log_term: TRUE_VAL .

    $padrão  reduzir usando a regra 98 (log_term)


Estado 33

   99 log_term: FALSE_VAL .

    $padrão  reduzir usando a regra 99 (log_term)


Estado 34

   75 arit_expr_base: L_PARENTHESIS . arit_expr R_PARENTHESIS
   77 log_expr: L_PARENTHESIS . log_expr R_PARENTHESIS

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_CHAR    deslocar, e ir ao estado 28
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 34

    arit_expr       ir ao estado 47
    arit_expr_base  ir ao estado 37
    log_expr        ir ao estado 48
    comp_expr       ir ao estado 39
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 35

    9 assingment: IDENTIFIER ASSINGMENT expr .

    $padrão  reduzir usando a regra 9 (assingment)


Estado 36

   29 expr: arit_expr .
   67 arit_expr: arit_expr . PLUS_OP arit_expr_base
   68          | arit_expr . SUB_OP arit_expr_base
   69          | arit_expr . DIV_OP arit_expr_base
   70          | arit_expr . STAR arit_expr_base
   71          | arit_expr . MOD_OP arit_expr_base
   72          | arit_expr . INC_OP
   73          | arit_expr . DEC_OP
   79 comp_expr: arit_expr .

    PLUS_OP  deslocar, e ir ao estado 49
    SUB_OP   deslocar, e ir ao estado 50
    DIV_OP   deslocar, e ir ao estado 51
    STAR     deslocar, e ir ao estado 52
    MOD_OP   deslocar, e ir ao estado 53
    INC_OP   deslocar, e ir ao estado 54
    DEC_OP   deslocar, e ir ao estado 55

    R_PARENTHESIS  reduzir usando a regra 29 (expr)
    R_PARENTHESIS  [reduzir usando a regra 79 (comp_expr)]
    SEMICOLON      reduzir usando a regra 29 (expr)
    SEMICOLON      [reduzir usando a regra 79 (comp_expr)]
    $padrão       reduzir usando a regra 79 (comp_expr)


Estado 37

   66 arit_expr: arit_expr_base .

    $padrão  reduzir usando a regra 66 (arit_expr)


Estado 38

   28 expr: log_expr .
   78 log_expr: log_expr . op_log comp_expr

    AND_OP  deslocar, e ir ao estado 56
    OR_OP   deslocar, e ir ao estado 57
    NOT_OP  deslocar, e ir ao estado 58

    $padrão  reduzir usando a regra 28 (expr)

    op_log  ir ao estado 59


Estado 39

   76 log_expr: comp_expr .
   80 comp_expr: comp_expr . op_comp arit_expr

    GE_OP  deslocar, e ir ao estado 60
    SE_OP  deslocar, e ir ao estado 61
    EQ_OP  deslocar, e ir ao estado 62
    NE_OP  deslocar, e ir ao estado 63
    G_OP   deslocar, e ir ao estado 64
    S_OP   deslocar, e ir ao estado 65

    $padrão  reduzir usando a regra 76 (log_expr)

    op_comp  ir ao estado 66


Estado 40

   74 arit_expr_base: term .

    $padrão  reduzir usando a regra 74 (arit_expr_base)


Estado 41

   92 term: term_num .

    $padrão  reduzir usando a regra 92 (term)


Estado 42

   93 term: log_term .

    $padrão  reduzir usando a regra 93 (term)


Estado 43

   81 comp_expr: literal_string . EQ_OP literal_string
   82          | literal_string . NE_OP literal_string

    EQ_OP  deslocar, e ir ao estado 67
    NE_OP  deslocar, e ir ao estado 68


Estado 44

   10 initialization: type IDENTIFIER ASSINGMENT . expr

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_CHAR    deslocar, e ir ao estado 28
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 34

    expr            ir ao estado 69
    arit_expr       ir ao estado 36
    arit_expr_base  ir ao estado 37
    log_expr        ir ao estado 38
    comp_expr       ir ao estado 39
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 45

   51 fun_struct: type IDENTIFIER L_PARENTHESIS . par_list R_PARENTHESIS block

    INT_TYPE      deslocar, e ir ao estado 2
    FLOAT_TYPE    deslocar, e ir ao estado 3
    DOUBLE_TYPE   deslocar, e ir ao estado 4
    STRING_TYPE   deslocar, e ir ao estado 5
    BOOLEAN_TYPE  deslocar, e ir ao estado 6
    MATRIZ_TYPE   deslocar, e ir ao estado 7
    VOID_TYPE     deslocar, e ir ao estado 8
    CHAR_TYPE     deslocar, e ir ao estado 9

    $padrão  reduzir usando a regra 62 (par_list)

    type      ir ao estado 70
    par_list  ir ao estado 71
    par_term  ir ao estado 72


Estado 46

   16 id_list: IDENTIFIER COMMA . id_list

    IDENTIFIER  deslocar, e ir ao estado 73

    id_list  ir ao estado 74


Estado 47

   67 arit_expr: arit_expr . PLUS_OP arit_expr_base
   68          | arit_expr . SUB_OP arit_expr_base
   69          | arit_expr . DIV_OP arit_expr_base
   70          | arit_expr . STAR arit_expr_base
   71          | arit_expr . MOD_OP arit_expr_base
   72          | arit_expr . INC_OP
   73          | arit_expr . DEC_OP
   75 arit_expr_base: L_PARENTHESIS arit_expr . R_PARENTHESIS
   79 comp_expr: arit_expr .

    PLUS_OP        deslocar, e ir ao estado 49
    SUB_OP         deslocar, e ir ao estado 50
    DIV_OP         deslocar, e ir ao estado 51
    STAR           deslocar, e ir ao estado 52
    MOD_OP         deslocar, e ir ao estado 53
    INC_OP         deslocar, e ir ao estado 54
    DEC_OP         deslocar, e ir ao estado 55
    R_PARENTHESIS  deslocar, e ir ao estado 75

    R_PARENTHESIS  [reduzir usando a regra 79 (comp_expr)]
    $padrão       reduzir usando a regra 79 (comp_expr)


Estado 48

   77 log_expr: L_PARENTHESIS log_expr . R_PARENTHESIS
   78         | log_expr . op_log comp_expr

    AND_OP         deslocar, e ir ao estado 56
    OR_OP          deslocar, e ir ao estado 57
    NOT_OP         deslocar, e ir ao estado 58
    R_PARENTHESIS  deslocar, e ir ao estado 76

    op_log  ir ao estado 59


Estado 49

   67 arit_expr: arit_expr PLUS_OP . arit_expr_base

    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 77

    arit_expr_base  ir ao estado 78
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42


Estado 50

   68 arit_expr: arit_expr SUB_OP . arit_expr_base

    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 77

    arit_expr_base  ir ao estado 79
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42


Estado 51

   69 arit_expr: arit_expr DIV_OP . arit_expr_base

    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 77

    arit_expr_base  ir ao estado 80
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42


Estado 52

   70 arit_expr: arit_expr STAR . arit_expr_base

    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 77

    arit_expr_base  ir ao estado 81
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42


Estado 53

   71 arit_expr: arit_expr MOD_OP . arit_expr_base

    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 77

    arit_expr_base  ir ao estado 82
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42


Estado 54

   72 arit_expr: arit_expr INC_OP .

    $padrão  reduzir usando a regra 72 (arit_expr)


Estado 55

   73 arit_expr: arit_expr DEC_OP .

    $padrão  reduzir usando a regra 73 (arit_expr)


Estado 56

   83 op_log: AND_OP .

    $padrão  reduzir usando a regra 83 (op_log)


Estado 57

   84 op_log: OR_OP .

    $padrão  reduzir usando a regra 84 (op_log)


Estado 58

   85 op_log: NOT_OP .

    $padrão  reduzir usando a regra 85 (op_log)


Estado 59

   78 log_expr: log_expr op_log . comp_expr

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_CHAR    deslocar, e ir ao estado 28
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 77

    arit_expr       ir ao estado 83
    arit_expr_base  ir ao estado 37
    comp_expr       ir ao estado 84
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 60

   88 op_comp: GE_OP .

    $padrão  reduzir usando a regra 88 (op_comp)


Estado 61

   86 op_comp: SE_OP .

    $padrão  reduzir usando a regra 86 (op_comp)


Estado 62

   90 op_comp: EQ_OP .

    $padrão  reduzir usando a regra 90 (op_comp)


Estado 63

   91 op_comp: NE_OP .

    $padrão  reduzir usando a regra 91 (op_comp)


Estado 64

   89 op_comp: G_OP .

    $padrão  reduzir usando a regra 89 (op_comp)


Estado 65

   87 op_comp: S_OP .

    $padrão  reduzir usando a regra 87 (op_comp)


Estado 66

   80 comp_expr: comp_expr op_comp . arit_expr

    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 77

    arit_expr       ir ao estado 85
    arit_expr_base  ir ao estado 37
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42


Estado 67

   81 comp_expr: literal_string EQ_OP . literal_string

    LITERAL_STRING  deslocar, e ir ao estado 26
    LITERAL_CHAR    deslocar, e ir ao estado 28

    literal_string  ir ao estado 86


Estado 68

   82 comp_expr: literal_string NE_OP . literal_string

    LITERAL_STRING  deslocar, e ir ao estado 26
    LITERAL_CHAR    deslocar, e ir ao estado 28

    literal_string  ir ao estado 87


Estado 69

   10 initialization: type IDENTIFIER ASSINGMENT expr .

    $padrão  reduzir usando a regra 10 (initialization)


Estado 70

   65 par_term: type . IDENTIFIER

    IDENTIFIER  deslocar, e ir ao estado 88


Estado 71

   51 fun_struct: type IDENTIFIER L_PARENTHESIS par_list . R_PARENTHESIS block

    R_PARENTHESIS  deslocar, e ir ao estado 89


Estado 72

   63 par_list: par_term .
   64         | par_term . COMMA par_list

    COMMA  deslocar, e ir ao estado 90

    $padrão  reduzir usando a regra 63 (par_list)


Estado 73

   15 id_list: IDENTIFIER .
   16        | IDENTIFIER . COMMA id_list

    COMMA  deslocar, e ir ao estado 46

    $padrão  reduzir usando a regra 15 (id_list)


Estado 74

   16 id_list: IDENTIFIER COMMA id_list .

    $padrão  reduzir usando a regra 16 (id_list)


Estado 75

   75 arit_expr_base: L_PARENTHESIS arit_expr R_PARENTHESIS .

    $padrão  reduzir usando a regra 75 (arit_expr_base)


Estado 76

   77 log_expr: L_PARENTHESIS log_expr R_PARENTHESIS .

    $padrão  reduzir usando a regra 77 (log_expr)


Estado 77

   75 arit_expr_base: L_PARENTHESIS . arit_expr R_PARENTHESIS

    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 77

    arit_expr       ir ao estado 91
    arit_expr_base  ir ao estado 37
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42


Estado 78

   67 arit_expr: arit_expr PLUS_OP arit_expr_base .

    $padrão  reduzir usando a regra 67 (arit_expr)


Estado 79

   68 arit_expr: arit_expr SUB_OP arit_expr_base .

    $padrão  reduzir usando a regra 68 (arit_expr)


Estado 80

   69 arit_expr: arit_expr DIV_OP arit_expr_base .

    $padrão  reduzir usando a regra 69 (arit_expr)


Estado 81

   70 arit_expr: arit_expr STAR arit_expr_base .

    $padrão  reduzir usando a regra 70 (arit_expr)


Estado 82

   71 arit_expr: arit_expr MOD_OP arit_expr_base .

    $padrão  reduzir usando a regra 71 (arit_expr)


Estado 83

   67 arit_expr: arit_expr . PLUS_OP arit_expr_base
   68          | arit_expr . SUB_OP arit_expr_base
   69          | arit_expr . DIV_OP arit_expr_base
   70          | arit_expr . STAR arit_expr_base
   71          | arit_expr . MOD_OP arit_expr_base
   72          | arit_expr . INC_OP
   73          | arit_expr . DEC_OP
   79 comp_expr: arit_expr .

    PLUS_OP  deslocar, e ir ao estado 49
    SUB_OP   deslocar, e ir ao estado 50
    DIV_OP   deslocar, e ir ao estado 51
    STAR     deslocar, e ir ao estado 52
    MOD_OP   deslocar, e ir ao estado 53
    INC_OP   deslocar, e ir ao estado 54
    DEC_OP   deslocar, e ir ao estado 55

    $padrão  reduzir usando a regra 79 (comp_expr)


Estado 84

   78 log_expr: log_expr op_log comp_expr .
   80 comp_expr: comp_expr . op_comp arit_expr

    GE_OP  deslocar, e ir ao estado 60
    SE_OP  deslocar, e ir ao estado 61
    EQ_OP  deslocar, e ir ao estado 62
    NE_OP  deslocar, e ir ao estado 63
    G_OP   deslocar, e ir ao estado 64
    S_OP   deslocar, e ir ao estado 65

    $padrão  reduzir usando a regra 78 (log_expr)

    op_comp  ir ao estado 66


Estado 85

   67 arit_expr: arit_expr . PLUS_OP arit_expr_base
   68          | arit_expr . SUB_OP arit_expr_base
   69          | arit_expr . DIV_OP arit_expr_base
   70          | arit_expr . STAR arit_expr_base
   71          | arit_expr . MOD_OP arit_expr_base
   72          | arit_expr . INC_OP
   73          | arit_expr . DEC_OP
   80 comp_expr: comp_expr op_comp arit_expr .

    PLUS_OP  deslocar, e ir ao estado 49
    SUB_OP   deslocar, e ir ao estado 50
    DIV_OP   deslocar, e ir ao estado 51
    STAR     deslocar, e ir ao estado 52
    MOD_OP   deslocar, e ir ao estado 53
    INC_OP   deslocar, e ir ao estado 54
    DEC_OP   deslocar, e ir ao estado 55

    $padrão  reduzir usando a regra 80 (comp_expr)


Estado 86

   81 comp_expr: literal_string EQ_OP literal_string .

    $padrão  reduzir usando a regra 81 (comp_expr)


Estado 87

   82 comp_expr: literal_string NE_OP literal_string .

    $padrão  reduzir usando a regra 82 (comp_expr)


Estado 88

   65 par_term: type IDENTIFIER .

    $padrão  reduzir usando a regra 65 (par_term)


Estado 89

   51 fun_struct: type IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS . block

    L_KEY  deslocar, e ir ao estado 92

    block  ir ao estado 93


Estado 90

   64 par_list: par_term COMMA . par_list

    INT_TYPE      deslocar, e ir ao estado 2
    FLOAT_TYPE    deslocar, e ir ao estado 3
    DOUBLE_TYPE   deslocar, e ir ao estado 4
    STRING_TYPE   deslocar, e ir ao estado 5
    BOOLEAN_TYPE  deslocar, e ir ao estado 6
    MATRIZ_TYPE   deslocar, e ir ao estado 7
    VOID_TYPE     deslocar, e ir ao estado 8
    CHAR_TYPE     deslocar, e ir ao estado 9

    $padrão  reduzir usando a regra 62 (par_list)

    type      ir ao estado 70
    par_list  ir ao estado 94
    par_term  ir ao estado 72


Estado 91

   67 arit_expr: arit_expr . PLUS_OP arit_expr_base
   68          | arit_expr . SUB_OP arit_expr_base
   69          | arit_expr . DIV_OP arit_expr_base
   70          | arit_expr . STAR arit_expr_base
   71          | arit_expr . MOD_OP arit_expr_base
   72          | arit_expr . INC_OP
   73          | arit_expr . DEC_OP
   75 arit_expr_base: L_PARENTHESIS arit_expr . R_PARENTHESIS

    PLUS_OP        deslocar, e ir ao estado 49
    SUB_OP         deslocar, e ir ao estado 50
    DIV_OP         deslocar, e ir ao estado 51
    STAR           deslocar, e ir ao estado 52
    MOD_OP         deslocar, e ir ao estado 53
    INC_OP         deslocar, e ir ao estado 54
    DEC_OP         deslocar, e ir ao estado 55
    R_PARENTHESIS  deslocar, e ir ao estado 75


Estado 92

   53 block: L_KEY . $@3 stm_list R_KEY

    $padrão  reduzir usando a regra 52 ($@3)

    $@3  ir ao estado 95


Estado 93

   51 fun_struct: type IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS block .

    $padrão  reduzir usando a regra 51 (fun_struct)


Estado 94

   64 par_list: par_term COMMA par_list .

    $padrão  reduzir usando a regra 64 (par_list)


Estado 95

   53 block: L_KEY $@3 . stm_list R_KEY

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 96
    INT_TYPE        deslocar, e ir ao estado 2
    FLOAT_TYPE      deslocar, e ir ao estado 3
    DOUBLE_TYPE     deslocar, e ir ao estado 4
    STRING_TYPE     deslocar, e ir ao estado 5
    BOOLEAN_TYPE    deslocar, e ir ao estado 6
    MATRIZ_TYPE     deslocar, e ir ao estado 7
    VOID_TYPE       deslocar, e ir ao estado 8
    LITERAL_CHAR    deslocar, e ir ao estado 28
    CHAR_TYPE       deslocar, e ir ao estado 9
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 34
    IF_STM          deslocar, e ir ao estado 97
    FOR_STM         deslocar, e ir ao estado 98
    DO_STM          deslocar, e ir ao estado 99
    WHILE_STM       deslocar, e ir ao estado 100
    SWITCH_STM      deslocar, e ir ao estado 101
    PRINT           deslocar, e ir ao estado 102
    PRINTF          deslocar, e ir ao estado 103

    decl            ir ao estado 104
    assingment      ir ao estado 105
    initialization  ir ao estado 106
    print_stm       ir ao estado 107
    stm_list        ir ao estado 108
    stm             ir ao estado 109
    expres_list     ir ao estado 110
    expr            ir ao estado 111
    cond_stm        ir ao estado 112
    if_struct       ir ao estado 113
    switch_struct   ir ao estado 114
    loop_stm        ir ao estado 115
    while_struct    ir ao estado 116
    for_struct      ir ao estado 117
    type            ir ao estado 118
    arit_expr       ir ao estado 36
    arit_expr_base  ir ao estado 37
    log_expr        ir ao estado 38
    comp_expr       ir ao estado 39
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 96

    9 assingment: IDENTIFIER . ASSINGMENT expr
   94 term: IDENTIFIER .

    ASSINGMENT  deslocar, e ir ao estado 18

    $padrão  reduzir usando a regra 94 (term)


Estado 97

   32 if_struct: IF_STM . L_PARENTHESIS log_expr R_PARENTHESIS block else_struct

    L_PARENTHESIS  deslocar, e ir ao estado 119


Estado 98

   48 for_struct: FOR_STM . L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 block

    L_PARENTHESIS  deslocar, e ir ao estado 120


Estado 99

   45 while_struct: DO_STM . block WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS SEMICOLON

    L_KEY  deslocar, e ir ao estado 92

    block  ir ao estado 121


Estado 100

   44 while_struct: WHILE_STM . L_PARENTHESIS log_expr R_PARENTHESIS block

    L_PARENTHESIS  deslocar, e ir ao estado 122


Estado 101

   38 switch_struct: SWITCH_STM . L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

    L_PARENTHESIS  deslocar, e ir ao estado 123


Estado 102

   11 print_stm: PRINT . L_PARENTHESIS literal_string R_PARENTHESIS
   12          | PRINT . L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS

    L_PARENTHESIS  deslocar, e ir ao estado 124


Estado 103

   13 print_stm: PRINTF . L_PARENTHESIS literal_string R_PARENTHESIS
   14          | PRINTF . L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS

    L_PARENTHESIS  deslocar, e ir ao estado 125


Estado 104

   19 stm: decl . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 126


Estado 105

   24 stm: assingment . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 127


Estado 106

   25 stm: initialization . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 128


Estado 107

   22 stm: print_stm . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 129


Estado 108

   53 block: L_KEY $@3 stm_list . R_KEY

    R_KEY  deslocar, e ir ao estado 130


Estado 109

   17 stm_list: stm .
   18         | stm . stm_list

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 96
    INT_TYPE        deslocar, e ir ao estado 2
    FLOAT_TYPE      deslocar, e ir ao estado 3
    DOUBLE_TYPE     deslocar, e ir ao estado 4
    STRING_TYPE     deslocar, e ir ao estado 5
    BOOLEAN_TYPE    deslocar, e ir ao estado 6
    MATRIZ_TYPE     deslocar, e ir ao estado 7
    VOID_TYPE       deslocar, e ir ao estado 8
    LITERAL_CHAR    deslocar, e ir ao estado 28
    CHAR_TYPE       deslocar, e ir ao estado 9
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 34
    IF_STM          deslocar, e ir ao estado 97
    FOR_STM         deslocar, e ir ao estado 98
    DO_STM          deslocar, e ir ao estado 99
    WHILE_STM       deslocar, e ir ao estado 100
    SWITCH_STM      deslocar, e ir ao estado 101
    PRINT           deslocar, e ir ao estado 102
    PRINTF          deslocar, e ir ao estado 103

    $padrão  reduzir usando a regra 17 (stm_list)

    decl            ir ao estado 104
    assingment      ir ao estado 105
    initialization  ir ao estado 106
    print_stm       ir ao estado 107
    stm_list        ir ao estado 131
    stm             ir ao estado 109
    expres_list     ir ao estado 110
    expr            ir ao estado 111
    cond_stm        ir ao estado 112
    if_struct       ir ao estado 113
    switch_struct   ir ao estado 114
    loop_stm        ir ao estado 115
    while_struct    ir ao estado 116
    for_struct      ir ao estado 117
    type            ir ao estado 118
    arit_expr       ir ao estado 36
    arit_expr_base  ir ao estado 37
    log_expr        ir ao estado 38
    comp_expr       ir ao estado 39
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 110

   23 stm: expres_list . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 132


Estado 111

   26 expres_list: expr . SEMICOLON
   27            | expr . SEMICOLON expres_list

    SEMICOLON  deslocar, e ir ao estado 133


Estado 112

   20 stm: cond_stm .

    $padrão  reduzir usando a regra 20 (stm)


Estado 113

   30 cond_stm: if_struct .

    $padrão  reduzir usando a regra 30 (cond_stm)


Estado 114

   31 cond_stm: switch_struct .

    $padrão  reduzir usando a regra 31 (cond_stm)


Estado 115

   21 stm: loop_stm .

    $padrão  reduzir usando a regra 21 (stm)


Estado 116

   42 loop_stm: while_struct .

    $padrão  reduzir usando a regra 42 (loop_stm)


Estado 117

   43 loop_stm: for_struct .

    $padrão  reduzir usando a regra 43 (loop_stm)


Estado 118

    8 decl: type . id_list
   10 initialization: type . IDENTIFIER ASSINGMENT expr

    IDENTIFIER  deslocar, e ir ao estado 134

    id_list  ir ao estado 25


Estado 119

   32 if_struct: IF_STM L_PARENTHESIS . log_expr R_PARENTHESIS block else_struct

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_CHAR    deslocar, e ir ao estado 28
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 34

    arit_expr       ir ao estado 83
    arit_expr_base  ir ao estado 37
    log_expr        ir ao estado 135
    comp_expr       ir ao estado 39
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 120

   48 for_struct: FOR_STM L_PARENTHESIS . $@1 initialization SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 block

    $padrão  reduzir usando a regra 46 ($@1)

    $@1  ir ao estado 136


Estado 121

   45 while_struct: DO_STM block . WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS SEMICOLON

    WHILE_STM  deslocar, e ir ao estado 137


Estado 122

   44 while_struct: WHILE_STM L_PARENTHESIS . log_expr R_PARENTHESIS block

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_CHAR    deslocar, e ir ao estado 28
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 34

    arit_expr       ir ao estado 83
    arit_expr_base  ir ao estado 37
    log_expr        ir ao estado 138
    comp_expr       ir ao estado 39
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 123

   38 switch_struct: SWITCH_STM L_PARENTHESIS . literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_CHAR    deslocar, e ir ao estado 28
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33

    term            ir ao estado 139
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_term    ir ao estado 140
    literal_string  ir ao estado 141


Estado 124

   11 print_stm: PRINT L_PARENTHESIS . literal_string R_PARENTHESIS
   12          | PRINT L_PARENTHESIS . literal_string COMMA id_list R_PARENTHESIS

    LITERAL_STRING  deslocar, e ir ao estado 26
    LITERAL_CHAR    deslocar, e ir ao estado 28

    literal_string  ir ao estado 142


Estado 125

   13 print_stm: PRINTF L_PARENTHESIS . literal_string R_PARENTHESIS
   14          | PRINTF L_PARENTHESIS . literal_string COMMA id_list R_PARENTHESIS

    LITERAL_STRING  deslocar, e ir ao estado 26
    LITERAL_CHAR    deslocar, e ir ao estado 28

    literal_string  ir ao estado 143


Estado 126

   19 stm: decl SEMICOLON .

    $padrão  reduzir usando a regra 19 (stm)


Estado 127

   24 stm: assingment SEMICOLON .

    $padrão  reduzir usando a regra 24 (stm)


Estado 128

   25 stm: initialization SEMICOLON .

    $padrão  reduzir usando a regra 25 (stm)


Estado 129

   22 stm: print_stm SEMICOLON .

    $padrão  reduzir usando a regra 22 (stm)


Estado 130

   53 block: L_KEY $@3 stm_list R_KEY .

    $padrão  reduzir usando a regra 53 (block)


Estado 131

   18 stm_list: stm stm_list .

    $padrão  reduzir usando a regra 18 (stm_list)


Estado 132

   23 stm: expres_list SEMICOLON .

    $padrão  reduzir usando a regra 23 (stm)


Estado 133

   26 expres_list: expr SEMICOLON .
   27            | expr SEMICOLON . expres_list

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_CHAR    deslocar, e ir ao estado 28
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 34

    $padrão  reduzir usando a regra 26 (expres_list)

    expres_list     ir ao estado 144
    expr            ir ao estado 111
    arit_expr       ir ao estado 36
    arit_expr_base  ir ao estado 37
    log_expr        ir ao estado 38
    comp_expr       ir ao estado 39
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 134

   10 initialization: type IDENTIFIER . ASSINGMENT expr
   15 id_list: IDENTIFIER .
   16        | IDENTIFIER . COMMA id_list

    ASSINGMENT  deslocar, e ir ao estado 44
    COMMA       deslocar, e ir ao estado 46

    $padrão  reduzir usando a regra 15 (id_list)


Estado 135

   32 if_struct: IF_STM L_PARENTHESIS log_expr . R_PARENTHESIS block else_struct
   78 log_expr: log_expr . op_log comp_expr

    AND_OP         deslocar, e ir ao estado 56
    OR_OP          deslocar, e ir ao estado 57
    NOT_OP         deslocar, e ir ao estado 58
    R_PARENTHESIS  deslocar, e ir ao estado 145

    op_log  ir ao estado 59


Estado 136

   48 for_struct: FOR_STM L_PARENTHESIS $@1 . initialization SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 block

    INT_TYPE      deslocar, e ir ao estado 2
    FLOAT_TYPE    deslocar, e ir ao estado 3
    DOUBLE_TYPE   deslocar, e ir ao estado 4
    STRING_TYPE   deslocar, e ir ao estado 5
    BOOLEAN_TYPE  deslocar, e ir ao estado 6
    MATRIZ_TYPE   deslocar, e ir ao estado 7
    VOID_TYPE     deslocar, e ir ao estado 8
    CHAR_TYPE     deslocar, e ir ao estado 9

    initialization  ir ao estado 146
    type            ir ao estado 147


Estado 137

   45 while_struct: DO_STM block WHILE_STM . L_PARENTHESIS log_expr R_PARENTHESIS SEMICOLON

    L_PARENTHESIS  deslocar, e ir ao estado 148


Estado 138

   44 while_struct: WHILE_STM L_PARENTHESIS log_expr . R_PARENTHESIS block
   78 log_expr: log_expr . op_log comp_expr

    AND_OP         deslocar, e ir ao estado 56
    OR_OP          deslocar, e ir ao estado 57
    NOT_OP         deslocar, e ir ao estado 58
    R_PARENTHESIS  deslocar, e ir ao estado 149

    op_log  ir ao estado 59


Estado 139

  100 literal_term: term .

    $padrão  reduzir usando a regra 100 (literal_term)


Estado 140

   38 switch_struct: SWITCH_STM L_PARENTHESIS literal_term . R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

    R_PARENTHESIS  deslocar, e ir ao estado 150


Estado 141

  101 literal_term: literal_string .

    $padrão  reduzir usando a regra 101 (literal_term)


Estado 142

   11 print_stm: PRINT L_PARENTHESIS literal_string . R_PARENTHESIS
   12          | PRINT L_PARENTHESIS literal_string . COMMA id_list R_PARENTHESIS

    R_PARENTHESIS  deslocar, e ir ao estado 151
    COMMA          deslocar, e ir ao estado 152


Estado 143

   13 print_stm: PRINTF L_PARENTHESIS literal_string . R_PARENTHESIS
   14          | PRINTF L_PARENTHESIS literal_string . COMMA id_list R_PARENTHESIS

    R_PARENTHESIS  deslocar, e ir ao estado 153
    COMMA          deslocar, e ir ao estado 154


Estado 144

   27 expres_list: expr SEMICOLON expres_list .

    $padrão  reduzir usando a regra 27 (expres_list)


Estado 145

   32 if_struct: IF_STM L_PARENTHESIS log_expr R_PARENTHESIS . block else_struct

    L_KEY  deslocar, e ir ao estado 92

    block  ir ao estado 155


Estado 146

   48 for_struct: FOR_STM L_PARENTHESIS $@1 initialization . SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 block

    SEMICOLON  deslocar, e ir ao estado 156


Estado 147

   10 initialization: type . IDENTIFIER ASSINGMENT expr

    IDENTIFIER  deslocar, e ir ao estado 157


Estado 148

   45 while_struct: DO_STM block WHILE_STM L_PARENTHESIS . log_expr R_PARENTHESIS SEMICOLON

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_CHAR    deslocar, e ir ao estado 28
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 34

    arit_expr       ir ao estado 83
    arit_expr_base  ir ao estado 37
    log_expr        ir ao estado 158
    comp_expr       ir ao estado 39
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 149

   44 while_struct: WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS . block

    L_KEY  deslocar, e ir ao estado 92

    block  ir ao estado 159


Estado 150

   38 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS . L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

    L_KEY  deslocar, e ir ao estado 160


Estado 151

   11 print_stm: PRINT L_PARENTHESIS literal_string R_PARENTHESIS .

    $padrão  reduzir usando a regra 11 (print_stm)


Estado 152

   12 print_stm: PRINT L_PARENTHESIS literal_string COMMA . id_list R_PARENTHESIS

    IDENTIFIER  deslocar, e ir ao estado 73

    id_list  ir ao estado 161


Estado 153

   13 print_stm: PRINTF L_PARENTHESIS literal_string R_PARENTHESIS .

    $padrão  reduzir usando a regra 13 (print_stm)


Estado 154

   14 print_stm: PRINTF L_PARENTHESIS literal_string COMMA . id_list R_PARENTHESIS

    IDENTIFIER  deslocar, e ir ao estado 73

    id_list  ir ao estado 162


Estado 155

   32 if_struct: IF_STM L_PARENTHESIS log_expr R_PARENTHESIS block . else_struct

    ELSE_IF_STM  deslocar, e ir ao estado 163

    ELSE_STM  reduzir usando a regra 35 (elseif_list)
    $padrão  reduzir usando a regra 33 (else_struct)

    else_struct    ir ao estado 164
    elseif_list    ir ao estado 165
    elseif_struct  ir ao estado 166


Estado 156

   48 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON . log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 block

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_CHAR    deslocar, e ir ao estado 28
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 34

    arit_expr       ir ao estado 83
    arit_expr_base  ir ao estado 37
    log_expr        ir ao estado 167
    comp_expr       ir ao estado 39
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 157

   10 initialization: type IDENTIFIER . ASSINGMENT expr

    ASSINGMENT  deslocar, e ir ao estado 44


Estado 158

   45 while_struct: DO_STM block WHILE_STM L_PARENTHESIS log_expr . R_PARENTHESIS SEMICOLON
   78 log_expr: log_expr . op_log comp_expr

    AND_OP         deslocar, e ir ao estado 56
    OR_OP          deslocar, e ir ao estado 57
    NOT_OP         deslocar, e ir ao estado 58
    R_PARENTHESIS  deslocar, e ir ao estado 168

    op_log  ir ao estado 59


Estado 159

   44 while_struct: WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS block .

    $padrão  reduzir usando a regra 44 (while_struct)


Estado 160

   38 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY . case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

    CASE  deslocar, e ir ao estado 169

    $padrão  reduzir usando a regra 39 (case_list_switch)

    case_list_switch  ir ao estado 170
    case_switch       ir ao estado 171


Estado 161

   12 print_stm: PRINT L_PARENTHESIS literal_string COMMA id_list . R_PARENTHESIS

    R_PARENTHESIS  deslocar, e ir ao estado 172


Estado 162

   14 print_stm: PRINTF L_PARENTHESIS literal_string COMMA id_list . R_PARENTHESIS

    R_PARENTHESIS  deslocar, e ir ao estado 173


Estado 163

   37 elseif_struct: ELSE_IF_STM . L_PARENTHESIS log_expr R_PARENTHESIS block

    L_PARENTHESIS  deslocar, e ir ao estado 174


Estado 164

   32 if_struct: IF_STM L_PARENTHESIS log_expr R_PARENTHESIS block else_struct .

    $padrão  reduzir usando a regra 32 (if_struct)


Estado 165

   34 else_struct: elseif_list . ELSE_STM block

    ELSE_STM  deslocar, e ir ao estado 175


Estado 166

   36 elseif_list: elseif_struct . elseif_list

    ELSE_IF_STM  deslocar, e ir ao estado 163

    $padrão  reduzir usando a regra 35 (elseif_list)

    elseif_list    ir ao estado 176
    elseif_struct  ir ao estado 166


Estado 167

   48 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr . SEMICOLON for_struct_stm R_PARENTHESIS $@2 block
   78 log_expr: log_expr . op_log comp_expr

    AND_OP     deslocar, e ir ao estado 56
    OR_OP      deslocar, e ir ao estado 57
    NOT_OP     deslocar, e ir ao estado 58
    SEMICOLON  deslocar, e ir ao estado 177

    op_log  ir ao estado 59


Estado 168

   45 while_struct: DO_STM block WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 178


Estado 169

   41 case_switch: CASE . literal_term DOUBLE_DOT stm_list BREAK SEMICOLON

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_CHAR    deslocar, e ir ao estado 28
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33

    term            ir ao estado 139
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_term    ir ao estado 179
    literal_string  ir ao estado 141


Estado 170

   38 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch . DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

    DEFAULT  deslocar, e ir ao estado 180


Estado 171

   40 case_list_switch: case_switch . case_list_switch

    CASE  deslocar, e ir ao estado 169

    $padrão  reduzir usando a regra 39 (case_list_switch)

    case_list_switch  ir ao estado 181
    case_switch       ir ao estado 171


Estado 172

   12 print_stm: PRINT L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS .

    $padrão  reduzir usando a regra 12 (print_stm)


Estado 173

   14 print_stm: PRINTF L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS .

    $padrão  reduzir usando a regra 14 (print_stm)


Estado 174

   37 elseif_struct: ELSE_IF_STM L_PARENTHESIS . log_expr R_PARENTHESIS block

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 27
    LITERAL_CHAR    deslocar, e ir ao estado 28
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 34

    arit_expr       ir ao estado 83
    arit_expr_base  ir ao estado 37
    log_expr        ir ao estado 182
    comp_expr       ir ao estado 39
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 175

   34 else_struct: elseif_list ELSE_STM . block

    L_KEY  deslocar, e ir ao estado 92

    block  ir ao estado 183


Estado 176

   36 elseif_list: elseif_struct elseif_list .

    $padrão  reduzir usando a regra 36 (elseif_list)


Estado 177

   48 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON . for_struct_stm R_PARENTHESIS $@2 block

    IDENTIFIER      deslocar, e ir ao estado 96
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 77

    assingment      ir ao estado 184
    for_struct_stm  ir ao estado 185
    arit_expr       ir ao estado 186
    arit_expr_base  ir ao estado 37
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42


Estado 178

   45 while_struct: DO_STM block WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS SEMICOLON .

    $padrão  reduzir usando a regra 45 (while_struct)


Estado 179

   41 case_switch: CASE literal_term . DOUBLE_DOT stm_list BREAK SEMICOLON

    DOUBLE_DOT  deslocar, e ir ao estado 187


Estado 180

   38 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT . DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY

    DOUBLE_DOT  deslocar, e ir ao estado 188


Estado 181

   40 case_list_switch: case_switch case_list_switch .

    $padrão  reduzir usando a regra 40 (case_list_switch)


Estado 182

   37 elseif_struct: ELSE_IF_STM L_PARENTHESIS log_expr . R_PARENTHESIS block
   78 log_expr: log_expr . op_log comp_expr

    AND_OP         deslocar, e ir ao estado 56
    OR_OP          deslocar, e ir ao estado 57
    NOT_OP         deslocar, e ir ao estado 58
    R_PARENTHESIS  deslocar, e ir ao estado 189

    op_log  ir ao estado 59


Estado 183

   34 else_struct: elseif_list ELSE_STM block .

    $padrão  reduzir usando a regra 34 (else_struct)


Estado 184

   50 for_struct_stm: assingment .

    $padrão  reduzir usando a regra 50 (for_struct_stm)


Estado 185

   48 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON for_struct_stm . R_PARENTHESIS $@2 block

    R_PARENTHESIS  deslocar, e ir ao estado 190


Estado 186

   49 for_struct_stm: arit_expr .
   67 arit_expr: arit_expr . PLUS_OP arit_expr_base
   68          | arit_expr . SUB_OP arit_expr_base
   69          | arit_expr . DIV_OP arit_expr_base
   70          | arit_expr . STAR arit_expr_base
   71          | arit_expr . MOD_OP arit_expr_base
   72          | arit_expr . INC_OP
   73          | arit_expr . DEC_OP

    PLUS_OP  deslocar, e ir ao estado 49
    SUB_OP   deslocar, e ir ao estado 50
    DIV_OP   deslocar, e ir ao estado 51
    STAR     deslocar, e ir ao estado 52
    MOD_OP   deslocar, e ir ao estado 53
    INC_OP   deslocar, e ir ao estado 54
    DEC_OP   deslocar, e ir ao estado 55

    $padrão  reduzir usando a regra 49 (for_struct_stm)


Estado 187

   41 case_switch: CASE literal_term DOUBLE_DOT . stm_list BREAK SEMICOLON

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 96
    INT_TYPE        deslocar, e ir ao estado 2
    FLOAT_TYPE      deslocar, e ir ao estado 3
    DOUBLE_TYPE     deslocar, e ir ao estado 4
    STRING_TYPE     deslocar, e ir ao estado 5
    BOOLEAN_TYPE    deslocar, e ir ao estado 6
    MATRIZ_TYPE     deslocar, e ir ao estado 7
    VOID_TYPE       deslocar, e ir ao estado 8
    LITERAL_CHAR    deslocar, e ir ao estado 28
    CHAR_TYPE       deslocar, e ir ao estado 9
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 34
    IF_STM          deslocar, e ir ao estado 97
    FOR_STM         deslocar, e ir ao estado 98
    DO_STM          deslocar, e ir ao estado 99
    WHILE_STM       deslocar, e ir ao estado 100
    SWITCH_STM      deslocar, e ir ao estado 101
    PRINT           deslocar, e ir ao estado 102
    PRINTF          deslocar, e ir ao estado 103

    decl            ir ao estado 104
    assingment      ir ao estado 105
    initialization  ir ao estado 106
    print_stm       ir ao estado 107
    stm_list        ir ao estado 191
    stm             ir ao estado 109
    expres_list     ir ao estado 110
    expr            ir ao estado 111
    cond_stm        ir ao estado 112
    if_struct       ir ao estado 113
    switch_struct   ir ao estado 114
    loop_stm        ir ao estado 115
    while_struct    ir ao estado 116
    for_struct      ir ao estado 117
    type            ir ao estado 118
    arit_expr       ir ao estado 36
    arit_expr_base  ir ao estado 37
    log_expr        ir ao estado 38
    comp_expr       ir ao estado 39
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 188

   38 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT . stm_list BREAK SEMICOLON R_KEY

    LITERAL_STRING  deslocar, e ir ao estado 26
    IDENTIFIER      deslocar, e ir ao estado 96
    INT_TYPE        deslocar, e ir ao estado 2
    FLOAT_TYPE      deslocar, e ir ao estado 3
    DOUBLE_TYPE     deslocar, e ir ao estado 4
    STRING_TYPE     deslocar, e ir ao estado 5
    BOOLEAN_TYPE    deslocar, e ir ao estado 6
    MATRIZ_TYPE     deslocar, e ir ao estado 7
    VOID_TYPE       deslocar, e ir ao estado 8
    LITERAL_CHAR    deslocar, e ir ao estado 28
    CHAR_TYPE       deslocar, e ir ao estado 9
    LITERAL_INT     deslocar, e ir ao estado 29
    LITERAL_FLOAT   deslocar, e ir ao estado 30
    LITERAL_DOUBLE  deslocar, e ir ao estado 31
    TRUE_VAL        deslocar, e ir ao estado 32
    FALSE_VAL       deslocar, e ir ao estado 33
    L_PARENTHESIS   deslocar, e ir ao estado 34
    IF_STM          deslocar, e ir ao estado 97
    FOR_STM         deslocar, e ir ao estado 98
    DO_STM          deslocar, e ir ao estado 99
    WHILE_STM       deslocar, e ir ao estado 100
    SWITCH_STM      deslocar, e ir ao estado 101
    PRINT           deslocar, e ir ao estado 102
    PRINTF          deslocar, e ir ao estado 103

    decl            ir ao estado 104
    assingment      ir ao estado 105
    initialization  ir ao estado 106
    print_stm       ir ao estado 107
    stm_list        ir ao estado 192
    stm             ir ao estado 109
    expres_list     ir ao estado 110
    expr            ir ao estado 111
    cond_stm        ir ao estado 112
    if_struct       ir ao estado 113
    switch_struct   ir ao estado 114
    loop_stm        ir ao estado 115
    while_struct    ir ao estado 116
    for_struct      ir ao estado 117
    type            ir ao estado 118
    arit_expr       ir ao estado 36
    arit_expr_base  ir ao estado 37
    log_expr        ir ao estado 38
    comp_expr       ir ao estado 39
    term            ir ao estado 40
    term_num        ir ao estado 41
    log_term        ir ao estado 42
    literal_string  ir ao estado 43


Estado 189

   37 elseif_struct: ELSE_IF_STM L_PARENTHESIS log_expr R_PARENTHESIS . block

    L_KEY  deslocar, e ir ao estado 92

    block  ir ao estado 193


Estado 190

   48 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS . $@2 block

    $padrão  reduzir usando a regra 47 ($@2)

    $@2  ir ao estado 194


Estado 191

   41 case_switch: CASE literal_term DOUBLE_DOT stm_list . BREAK SEMICOLON

    BREAK  deslocar, e ir ao estado 195


Estado 192

   38 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list . BREAK SEMICOLON R_KEY

    BREAK  deslocar, e ir ao estado 196


Estado 193

   37 elseif_struct: ELSE_IF_STM L_PARENTHESIS log_expr R_PARENTHESIS block .

    $padrão  reduzir usando a regra 37 (elseif_struct)


Estado 194

   48 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 . block

    L_KEY  deslocar, e ir ao estado 92

    block  ir ao estado 197


Estado 195

   41 case_switch: CASE literal_term DOUBLE_DOT stm_list BREAK . SEMICOLON

    SEMICOLON  deslocar, e ir ao estado 198


Estado 196

   38 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK . SEMICOLON R_KEY

    SEMICOLON  deslocar, e ir ao estado 199


Estado 197

   48 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 block .

    $padrão  reduzir usando a regra 48 (for_struct)


Estado 198

   41 case_switch: CASE literal_term DOUBLE_DOT stm_list BREAK SEMICOLON .

    $padrão  reduzir usando a regra 41 (case_switch)


Estado 199

   38 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON . R_KEY

    R_KEY  deslocar, e ir ao estado 200


Estado 200

   38 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY .

    $padrão  reduzir usando a regra 38 (switch_struct)
