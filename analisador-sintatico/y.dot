// Gerado por GNU Bison 3.5.1.
// Relate erros para <bug-bison@gnu.org>.
// Site: <https://www.gnu.org/software/bison/>.

digraph "parser.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="Estado 0\n\l  0 $accept: . program $end\l"]
  0 -> 1 [style=solid label="LITERAL_STRING"]
  0 -> 2 [style=solid label="IDENTIFIER"]
  0 -> 3 [style=solid label="INT_TYPE"]
  0 -> 4 [style=solid label="FLOAT_TYPE"]
  0 -> 5 [style=solid label="DOUBLE_TYPE"]
  0 -> 6 [style=solid label="STRING_TYPE"]
  0 -> 7 [style=solid label="BOOLEAN_TYPE"]
  0 -> 8 [style=solid label="MATRIZ_TYPE"]
  0 -> 9 [style=solid label="VOID_TYPE"]
  0 -> 10 [style=solid label="LITERAL_CHAR"]
  0 -> 11 [style=solid label="CHAR_TYPE"]
  0 -> 12 [style=solid label="LITERAL_INT"]
  0 -> 13 [style=solid label="LITERAL_FLOAT"]
  0 -> 14 [style=solid label="LITERAL_DOUBLE"]
  0 -> 15 [style=solid label="TRUE_VAL"]
  0 -> 16 [style=solid label="FALSE_VAL"]
  0 -> 17 [style=solid label="L_PARENTHESIS"]
  0 -> 18 [style=solid label="IF_STM"]
  0 -> 19 [style=solid label="FOR_STM"]
  0 -> 20 [style=solid label="DO_STM"]
  0 -> 21 [style=solid label="WHILE_STM"]
  0 -> 22 [style=solid label="SWITCH_STM"]
  0 -> 23 [style=solid label="PRINT"]
  0 -> 24 [style=solid label="PRINTF"]
  0 -> 25 [style=dashed label="program"]
  0 -> 26 [style=dashed label="stm_list"]
  0 -> 27 [style=dashed label="stm"]
  0 -> 28 [style=dashed label="decl"]
  0 -> 29 [style=dashed label="assingment"]
  0 -> 30 [style=dashed label="initialization"]
  0 -> 31 [style=dashed label="print_stm"]
  0 -> 32 [style=dashed label="expres_list"]
  0 -> 33 [style=dashed label="expr"]
  0 -> 34 [style=dashed label="cond_stm"]
  0 -> 35 [style=dashed label="if_struct"]
  0 -> 36 [style=dashed label="switch_struct"]
  0 -> 37 [style=dashed label="loop_stm"]
  0 -> 38 [style=dashed label="while_struct"]
  0 -> 39 [style=dashed label="for_struct"]
  0 -> 40 [style=dashed label="fun_struct"]
  0 -> 41 [style=dashed label="type"]
  0 -> 42 [style=dashed label="arit_expr"]
  0 -> 43 [style=dashed label="arit_expr_base"]
  0 -> 44 [style=dashed label="log_expr"]
  0 -> 45 [style=dashed label="comp_expr"]
  0 -> 46 [style=dashed label="term"]
  0 -> 47 [style=dashed label="term_num"]
  0 -> 48 [style=dashed label="log_term"]
  0 -> 49 [style=dashed label="literal_string"]
  1 [label="Estado 1\n\l 96 literal_string: LITERAL_STRING .\l"]
  1 -> "1R96" [style=solid]
 "1R96" [label="R96", fillcolor=3, shape=diamond, style=filled]
  2 [label="Estado 2\n\l 13 assingment: IDENTIFIER . ASSINGMENT expr\l 87 term: IDENTIFIER .\l"]
  2 -> 50 [style=solid label="ASSINGMENT"]
  2 -> "2R87" [style=solid]
 "2R87" [label="R87", fillcolor=3, shape=diamond, style=filled]
  3 [label="Estado 3\n\l 48 type: INT_TYPE .\l"]
  3 -> "3R48" [style=solid]
 "3R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  4 [label="Estado 4\n\l 49 type: FLOAT_TYPE .\l"]
  4 -> "4R49" [style=solid]
 "4R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  5 [label="Estado 5\n\l 50 type: DOUBLE_TYPE .\l"]
  5 -> "5R50" [style=solid]
 "5R50" [label="R50", fillcolor=3, shape=diamond, style=filled]
  6 [label="Estado 6\n\l 52 type: STRING_TYPE .\l"]
  6 -> "6R52" [style=solid]
 "6R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  7 [label="Estado 7\n\l 53 type: BOOLEAN_TYPE .\l"]
  7 -> "7R53" [style=solid]
 "7R53" [label="R53", fillcolor=3, shape=diamond, style=filled]
  8 [label="Estado 8\n\l 54 type: MATRIZ_TYPE .\l"]
  8 -> "8R54" [style=solid]
 "8R54" [label="R54", fillcolor=3, shape=diamond, style=filled]
  9 [label="Estado 9\n\l 47 type: VOID_TYPE .\l"]
  9 -> "9R47" [style=solid]
 "9R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  10 [label="Estado 10\n\l 95 literal_string: LITERAL_CHAR .\l"]
  10 -> "10R95" [style=solid]
 "10R95" [label="R95", fillcolor=3, shape=diamond, style=filled]
  11 [label="Estado 11\n\l 51 type: CHAR_TYPE .\l"]
  11 -> "11R51" [style=solid]
 "11R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  12 [label="Estado 12\n\l 88 term_num: LITERAL_INT .\l"]
  12 -> "12R88" [style=solid]
 "12R88" [label="R88", fillcolor=3, shape=diamond, style=filled]
  13 [label="Estado 13\n\l 89 term_num: LITERAL_FLOAT .\l"]
  13 -> "13R89" [style=solid]
 "13R89" [label="R89", fillcolor=3, shape=diamond, style=filled]
  14 [label="Estado 14\n\l 90 term_num: LITERAL_DOUBLE .\l"]
  14 -> "14R90" [style=solid]
 "14R90" [label="R90", fillcolor=3, shape=diamond, style=filled]
  15 [label="Estado 15\n\l 91 log_term: TRUE_VAL .\l"]
  15 -> "15R91" [style=solid]
 "15R91" [label="R91", fillcolor=3, shape=diamond, style=filled]
  16 [label="Estado 16\n\l 92 log_term: FALSE_VAL .\l"]
  16 -> "16R92" [style=solid]
 "16R92" [label="R92", fillcolor=3, shape=diamond, style=filled]
  17 [label="Estado 17\n\l 68 arit_expr_base: L_PARENTHESIS . arit_expr R_PARENTHESIS\l 70 log_expr: L_PARENTHESIS . log_expr R_PARENTHESIS\l"]
  17 -> 1 [style=solid label="LITERAL_STRING"]
  17 -> 51 [style=solid label="IDENTIFIER"]
  17 -> 10 [style=solid label="LITERAL_CHAR"]
  17 -> 12 [style=solid label="LITERAL_INT"]
  17 -> 13 [style=solid label="LITERAL_FLOAT"]
  17 -> 14 [style=solid label="LITERAL_DOUBLE"]
  17 -> 15 [style=solid label="TRUE_VAL"]
  17 -> 16 [style=solid label="FALSE_VAL"]
  17 -> 17 [style=solid label="L_PARENTHESIS"]
  17 -> 52 [style=dashed label="arit_expr"]
  17 -> 43 [style=dashed label="arit_expr_base"]
  17 -> 53 [style=dashed label="log_expr"]
  17 -> 45 [style=dashed label="comp_expr"]
  17 -> 46 [style=dashed label="term"]
  17 -> 47 [style=dashed label="term_num"]
  17 -> 48 [style=dashed label="log_term"]
  17 -> 49 [style=dashed label="literal_string"]
  18 [label="Estado 18\n\l 27 if_struct: IF_STM . L_PARENTHESIS log_expr R_PARENTHESIS block else_struct\l"]
  18 -> 54 [style=solid label="L_PARENTHESIS"]
  19 [label="Estado 19\n\l 43 for_struct: FOR_STM . L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON arit_expr R_PARENTHESIS $@2 block\l"]
  19 -> 55 [style=solid label="L_PARENTHESIS"]
  20 [label="Estado 20\n\l 40 while_struct: DO_STM . block WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS\l"]
  20 -> 56 [style=solid label="L_KEY"]
  20 -> 57 [style=dashed label="block"]
  21 [label="Estado 21\n\l 39 while_struct: WHILE_STM . L_PARENTHESIS log_expr R_PARENTHESIS block\l"]
  21 -> 58 [style=solid label="L_PARENTHESIS"]
  22 [label="Estado 22\n\l 33 switch_struct: SWITCH_STM . L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY\l"]
  22 -> 59 [style=solid label="L_PARENTHESIS"]
  23 [label="Estado 23\n\l 15 print_stm: PRINT . L_PARENTHESIS literal_string R_PARENTHESIS\l 16          | PRINT . L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS\l"]
  23 -> 60 [style=solid label="L_PARENTHESIS"]
  24 [label="Estado 24\n\l 17 print_stm: PRINTF . L_PARENTHESIS literal_string R_PARENTHESIS\l 18          | PRINTF . L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS\l"]
  24 -> 61 [style=solid label="L_PARENTHESIS"]
  25 [label="Estado 25\n\l  0 $accept: program . $end\l"]
  25 -> 62 [style=solid label="$end"]
  26 [label="Estado 26\n\l  1 program: stm_list .\l"]
  26 -> "26R1" [style=solid]
 "26R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  27 [label="Estado 27\n\l  2 stm_list: stm . SEMICOLON\l  3         | stm . SEMICOLON stm_list\l"]
  27 -> 63 [style=solid label="SEMICOLON"]
  28 [label="Estado 28\n\l  4 stm: decl .\l"]
  28 -> "28R4" [style=solid]
 "28R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  29 [label="Estado 29\n\l 10 stm: assingment .\l"]
  29 -> "29R10" [style=solid]
 "29R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  30 [label="Estado 30\n\l 11 stm: initialization .\l"]
  30 -> "30R11" [style=solid]
 "30R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  31 [label="Estado 31\n\l  8 stm: print_stm .\l"]
  31 -> "31R8" [style=solid]
 "31R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  32 [label="Estado 32\n\l  9 stm: expres_list .\l"]
  32 -> "32R9" [style=solid]
 "32R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  33 [label="Estado 33\n\l 21 expres_list: expr . SEMICOLON\l 22            | expr . SEMICOLON expres_list\l"]
  33 -> 64 [style=solid label="SEMICOLON"]
  34 [label="Estado 34\n\l  5 stm: cond_stm .\l"]
  34 -> "34R5" [style=solid]
 "34R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  35 [label="Estado 35\n\l 25 cond_stm: if_struct .\l"]
  35 -> "35R25" [style=solid]
 "35R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  36 [label="Estado 36\n\l 26 cond_stm: switch_struct .\l"]
  36 -> "36R26" [style=solid]
 "36R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  37 [label="Estado 37\n\l  6 stm: loop_stm .\l"]
  37 -> "37R6" [style=solid]
 "37R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  38 [label="Estado 38\n\l 37 loop_stm: while_struct .\l"]
  38 -> "38R37" [style=solid]
 "38R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  39 [label="Estado 39\n\l 38 loop_stm: for_struct .\l"]
  39 -> "39R38" [style=solid]
 "39R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  40 [label="Estado 40\n\l  7 stm: fun_struct .\l"]
  40 -> "40R7" [style=solid]
 "40R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  41 [label="Estado 41\n\l 12 decl: type . id_list\l 14 initialization: type . IDENTIFIER ASSINGMENT expr\l 44 fun_struct: type . IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS L_KEY stm_list R_KEY\l"]
  41 -> 65 [style=solid label="IDENTIFIER"]
  41 -> 66 [style=dashed label="id_list"]
  42 [label="Estado 42\n\l 24 expr: arit_expr .\l 60 arit_expr: arit_expr . PLUS_OP arit_expr_base\l 61          | arit_expr . SUB_OP arit_expr_base\l 62          | arit_expr . DIV_OP arit_expr_base\l 63          | arit_expr . STAR arit_expr_base\l 64          | arit_expr . MOD_OP arit_expr_base\l 65          | arit_expr . INC_OP\l 66          | arit_expr . DEC_OP\l 72 comp_expr: arit_expr .\l"]
  42 -> 67 [style=solid label="PLUS_OP"]
  42 -> 68 [style=solid label="SUB_OP"]
  42 -> 69 [style=solid label="DIV_OP"]
  42 -> 70 [style=solid label="STAR"]
  42 -> 71 [style=solid label="MOD_OP"]
  42 -> 72 [style=solid label="INC_OP"]
  42 -> 73 [style=solid label="DEC_OP"]
  42 -> "42R24" [label="[SEMICOLON]", style=solid]
 "42R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  42 -> "42R72d" [label="[SEMICOLON]", style=solid]
 "42R72d" [label="R72", fillcolor=5, shape=diamond, style=filled]
  42 -> "42R72" [style=solid]
 "42R72" [label="R72", fillcolor=3, shape=diamond, style=filled]
  43 [label="Estado 43\n\l 59 arit_expr: arit_expr_base .\l"]
  43 -> "43R59" [style=solid]
 "43R59" [label="R59", fillcolor=3, shape=diamond, style=filled]
  44 [label="Estado 44\n\l 23 expr: log_expr .\l 71 log_expr: log_expr . op_log comp_expr\l"]
  44 -> 74 [style=solid label="AND_OP"]
  44 -> 75 [style=solid label="OR_OP"]
  44 -> 76 [style=solid label="NOT_OP"]
  44 -> 77 [style=dashed label="op_log"]
  44 -> "44R23" [style=solid]
 "44R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  45 [label="Estado 45\n\l 69 log_expr: comp_expr .\l 73 comp_expr: comp_expr . op_comp arit_expr\l"]
  45 -> 78 [style=solid label="GE_OP"]
  45 -> 79 [style=solid label="SE_OP"]
  45 -> 80 [style=solid label="EQ_OP"]
  45 -> 81 [style=solid label="NE_OP"]
  45 -> 82 [style=solid label="G_OP"]
  45 -> 83 [style=solid label="S_OP"]
  45 -> 84 [style=dashed label="op_comp"]
  45 -> "45R69" [style=solid]
 "45R69" [label="R69", fillcolor=3, shape=diamond, style=filled]
  46 [label="Estado 46\n\l 67 arit_expr_base: term .\l"]
  46 -> "46R67" [style=solid]
 "46R67" [label="R67", fillcolor=3, shape=diamond, style=filled]
  47 [label="Estado 47\n\l 85 term: term_num .\l"]
  47 -> "47R85" [style=solid]
 "47R85" [label="R85", fillcolor=3, shape=diamond, style=filled]
  48 [label="Estado 48\n\l 86 term: log_term .\l"]
  48 -> "48R86" [style=solid]
 "48R86" [label="R86", fillcolor=3, shape=diamond, style=filled]
  49 [label="Estado 49\n\l 74 comp_expr: literal_string . EQ_OP literal_string\l 75          | literal_string . NE_OP literal_string\l"]
  49 -> 85 [style=solid label="EQ_OP"]
  49 -> 86 [style=solid label="NE_OP"]
  50 [label="Estado 50\n\l 13 assingment: IDENTIFIER ASSINGMENT . expr\l"]
  50 -> 1 [style=solid label="LITERAL_STRING"]
  50 -> 51 [style=solid label="IDENTIFIER"]
  50 -> 10 [style=solid label="LITERAL_CHAR"]
  50 -> 12 [style=solid label="LITERAL_INT"]
  50 -> 13 [style=solid label="LITERAL_FLOAT"]
  50 -> 14 [style=solid label="LITERAL_DOUBLE"]
  50 -> 15 [style=solid label="TRUE_VAL"]
  50 -> 16 [style=solid label="FALSE_VAL"]
  50 -> 17 [style=solid label="L_PARENTHESIS"]
  50 -> 87 [style=dashed label="expr"]
  50 -> 42 [style=dashed label="arit_expr"]
  50 -> 43 [style=dashed label="arit_expr_base"]
  50 -> 44 [style=dashed label="log_expr"]
  50 -> 45 [style=dashed label="comp_expr"]
  50 -> 46 [style=dashed label="term"]
  50 -> 47 [style=dashed label="term_num"]
  50 -> 48 [style=dashed label="log_term"]
  50 -> 49 [style=dashed label="literal_string"]
  51 [label="Estado 51\n\l 87 term: IDENTIFIER .\l"]
  51 -> "51R87" [style=solid]
 "51R87" [label="R87", fillcolor=3, shape=diamond, style=filled]
  52 [label="Estado 52\n\l 60 arit_expr: arit_expr . PLUS_OP arit_expr_base\l 61          | arit_expr . SUB_OP arit_expr_base\l 62          | arit_expr . DIV_OP arit_expr_base\l 63          | arit_expr . STAR arit_expr_base\l 64          | arit_expr . MOD_OP arit_expr_base\l 65          | arit_expr . INC_OP\l 66          | arit_expr . DEC_OP\l 68 arit_expr_base: L_PARENTHESIS arit_expr . R_PARENTHESIS\l 72 comp_expr: arit_expr .\l"]
  52 -> 67 [style=solid label="PLUS_OP"]
  52 -> 68 [style=solid label="SUB_OP"]
  52 -> 69 [style=solid label="DIV_OP"]
  52 -> 70 [style=solid label="STAR"]
  52 -> 71 [style=solid label="MOD_OP"]
  52 -> 72 [style=solid label="INC_OP"]
  52 -> 73 [style=solid label="DEC_OP"]
  52 -> 88 [style=solid label="R_PARENTHESIS"]
  52 -> "52R72d" [label="[R_PARENTHESIS]", style=solid]
 "52R72d" [label="R72", fillcolor=5, shape=diamond, style=filled]
  52 -> "52R72" [style=solid]
 "52R72" [label="R72", fillcolor=3, shape=diamond, style=filled]
  53 [label="Estado 53\n\l 70 log_expr: L_PARENTHESIS log_expr . R_PARENTHESIS\l 71         | log_expr . op_log comp_expr\l"]
  53 -> 74 [style=solid label="AND_OP"]
  53 -> 75 [style=solid label="OR_OP"]
  53 -> 76 [style=solid label="NOT_OP"]
  53 -> 89 [style=solid label="R_PARENTHESIS"]
  53 -> 77 [style=dashed label="op_log"]
  54 [label="Estado 54\n\l 27 if_struct: IF_STM L_PARENTHESIS . log_expr R_PARENTHESIS block else_struct\l"]
  54 -> 1 [style=solid label="LITERAL_STRING"]
  54 -> 51 [style=solid label="IDENTIFIER"]
  54 -> 10 [style=solid label="LITERAL_CHAR"]
  54 -> 12 [style=solid label="LITERAL_INT"]
  54 -> 13 [style=solid label="LITERAL_FLOAT"]
  54 -> 14 [style=solid label="LITERAL_DOUBLE"]
  54 -> 15 [style=solid label="TRUE_VAL"]
  54 -> 16 [style=solid label="FALSE_VAL"]
  54 -> 17 [style=solid label="L_PARENTHESIS"]
  54 -> 90 [style=dashed label="arit_expr"]
  54 -> 43 [style=dashed label="arit_expr_base"]
  54 -> 91 [style=dashed label="log_expr"]
  54 -> 45 [style=dashed label="comp_expr"]
  54 -> 46 [style=dashed label="term"]
  54 -> 47 [style=dashed label="term_num"]
  54 -> 48 [style=dashed label="log_term"]
  54 -> 49 [style=dashed label="literal_string"]
  55 [label="Estado 55\n\l 43 for_struct: FOR_STM L_PARENTHESIS . $@1 initialization SEMICOLON log_expr SEMICOLON arit_expr R_PARENTHESIS $@2 block\l"]
  55 -> 92 [style=dashed label="$@1"]
  55 -> "55R41" [style=solid]
 "55R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  56 [label="Estado 56\n\l 46 block: L_KEY . $@3 stm_list R_KEY\l"]
  56 -> 93 [style=dashed label="$@3"]
  56 -> "56R45" [style=solid]
 "56R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  57 [label="Estado 57\n\l 40 while_struct: DO_STM block . WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS\l"]
  57 -> 94 [style=solid label="WHILE_STM"]
  58 [label="Estado 58\n\l 39 while_struct: WHILE_STM L_PARENTHESIS . log_expr R_PARENTHESIS block\l"]
  58 -> 1 [style=solid label="LITERAL_STRING"]
  58 -> 51 [style=solid label="IDENTIFIER"]
  58 -> 10 [style=solid label="LITERAL_CHAR"]
  58 -> 12 [style=solid label="LITERAL_INT"]
  58 -> 13 [style=solid label="LITERAL_FLOAT"]
  58 -> 14 [style=solid label="LITERAL_DOUBLE"]
  58 -> 15 [style=solid label="TRUE_VAL"]
  58 -> 16 [style=solid label="FALSE_VAL"]
  58 -> 17 [style=solid label="L_PARENTHESIS"]
  58 -> 90 [style=dashed label="arit_expr"]
  58 -> 43 [style=dashed label="arit_expr_base"]
  58 -> 95 [style=dashed label="log_expr"]
  58 -> 45 [style=dashed label="comp_expr"]
  58 -> 46 [style=dashed label="term"]
  58 -> 47 [style=dashed label="term_num"]
  58 -> 48 [style=dashed label="log_term"]
  58 -> 49 [style=dashed label="literal_string"]
  59 [label="Estado 59\n\l 33 switch_struct: SWITCH_STM L_PARENTHESIS . literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY\l"]
  59 -> 1 [style=solid label="LITERAL_STRING"]
  59 -> 51 [style=solid label="IDENTIFIER"]
  59 -> 10 [style=solid label="LITERAL_CHAR"]
  59 -> 12 [style=solid label="LITERAL_INT"]
  59 -> 13 [style=solid label="LITERAL_FLOAT"]
  59 -> 14 [style=solid label="LITERAL_DOUBLE"]
  59 -> 15 [style=solid label="TRUE_VAL"]
  59 -> 16 [style=solid label="FALSE_VAL"]
  59 -> 96 [style=dashed label="term"]
  59 -> 47 [style=dashed label="term_num"]
  59 -> 48 [style=dashed label="log_term"]
  59 -> 97 [style=dashed label="literal_term"]
  59 -> 98 [style=dashed label="literal_string"]
  60 [label="Estado 60\n\l 15 print_stm: PRINT L_PARENTHESIS . literal_string R_PARENTHESIS\l 16          | PRINT L_PARENTHESIS . literal_string COMMA id_list R_PARENTHESIS\l"]
  60 -> 1 [style=solid label="LITERAL_STRING"]
  60 -> 10 [style=solid label="LITERAL_CHAR"]
  60 -> 99 [style=dashed label="literal_string"]
  61 [label="Estado 61\n\l 17 print_stm: PRINTF L_PARENTHESIS . literal_string R_PARENTHESIS\l 18          | PRINTF L_PARENTHESIS . literal_string COMMA id_list R_PARENTHESIS\l"]
  61 -> 1 [style=solid label="LITERAL_STRING"]
  61 -> 10 [style=solid label="LITERAL_CHAR"]
  61 -> 100 [style=dashed label="literal_string"]
  62 [label="Estado 62\n\l  0 $accept: program $end .\l"]
  62 -> "62R0" [style=solid]
 "62R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  63 [label="Estado 63\n\l  2 stm_list: stm SEMICOLON .\l  3         | stm SEMICOLON . stm_list\l"]
  63 -> 1 [style=solid label="LITERAL_STRING"]
  63 -> 2 [style=solid label="IDENTIFIER"]
  63 -> 3 [style=solid label="INT_TYPE"]
  63 -> 4 [style=solid label="FLOAT_TYPE"]
  63 -> 5 [style=solid label="DOUBLE_TYPE"]
  63 -> 6 [style=solid label="STRING_TYPE"]
  63 -> 7 [style=solid label="BOOLEAN_TYPE"]
  63 -> 8 [style=solid label="MATRIZ_TYPE"]
  63 -> 9 [style=solid label="VOID_TYPE"]
  63 -> 10 [style=solid label="LITERAL_CHAR"]
  63 -> 11 [style=solid label="CHAR_TYPE"]
  63 -> 12 [style=solid label="LITERAL_INT"]
  63 -> 13 [style=solid label="LITERAL_FLOAT"]
  63 -> 14 [style=solid label="LITERAL_DOUBLE"]
  63 -> 15 [style=solid label="TRUE_VAL"]
  63 -> 16 [style=solid label="FALSE_VAL"]
  63 -> 17 [style=solid label="L_PARENTHESIS"]
  63 -> 18 [style=solid label="IF_STM"]
  63 -> 19 [style=solid label="FOR_STM"]
  63 -> 20 [style=solid label="DO_STM"]
  63 -> 21 [style=solid label="WHILE_STM"]
  63 -> 22 [style=solid label="SWITCH_STM"]
  63 -> 23 [style=solid label="PRINT"]
  63 -> 24 [style=solid label="PRINTF"]
  63 -> 101 [style=dashed label="stm_list"]
  63 -> 27 [style=dashed label="stm"]
  63 -> 28 [style=dashed label="decl"]
  63 -> 29 [style=dashed label="assingment"]
  63 -> 30 [style=dashed label="initialization"]
  63 -> 31 [style=dashed label="print_stm"]
  63 -> 32 [style=dashed label="expres_list"]
  63 -> 33 [style=dashed label="expr"]
  63 -> 34 [style=dashed label="cond_stm"]
  63 -> 35 [style=dashed label="if_struct"]
  63 -> 36 [style=dashed label="switch_struct"]
  63 -> 37 [style=dashed label="loop_stm"]
  63 -> 38 [style=dashed label="while_struct"]
  63 -> 39 [style=dashed label="for_struct"]
  63 -> 40 [style=dashed label="fun_struct"]
  63 -> 41 [style=dashed label="type"]
  63 -> 42 [style=dashed label="arit_expr"]
  63 -> 43 [style=dashed label="arit_expr_base"]
  63 -> 44 [style=dashed label="log_expr"]
  63 -> 45 [style=dashed label="comp_expr"]
  63 -> 46 [style=dashed label="term"]
  63 -> 47 [style=dashed label="term_num"]
  63 -> 48 [style=dashed label="log_term"]
  63 -> 49 [style=dashed label="literal_string"]
  63 -> "63R2" [style=solid]
 "63R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  64 [label="Estado 64\n\l 21 expres_list: expr SEMICOLON .\l 22            | expr SEMICOLON . expres_list\l"]
  64 -> 1 [style=solid label="LITERAL_STRING"]
  64 -> 51 [style=solid label="IDENTIFIER"]
  64 -> 10 [style=solid label="LITERAL_CHAR"]
  64 -> 12 [style=solid label="LITERAL_INT"]
  64 -> 13 [style=solid label="LITERAL_FLOAT"]
  64 -> 14 [style=solid label="LITERAL_DOUBLE"]
  64 -> 15 [style=solid label="TRUE_VAL"]
  64 -> 16 [style=solid label="FALSE_VAL"]
  64 -> 17 [style=solid label="L_PARENTHESIS"]
  64 -> 102 [style=dashed label="expres_list"]
  64 -> 33 [style=dashed label="expr"]
  64 -> 42 [style=dashed label="arit_expr"]
  64 -> 43 [style=dashed label="arit_expr_base"]
  64 -> 44 [style=dashed label="log_expr"]
  64 -> 45 [style=dashed label="comp_expr"]
  64 -> 46 [style=dashed label="term"]
  64 -> 47 [style=dashed label="term_num"]
  64 -> 48 [style=dashed label="log_term"]
  64 -> 49 [style=dashed label="literal_string"]
  64 -> "64R21" [style=solid]
 "64R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  65 [label="Estado 65\n\l 14 initialization: type IDENTIFIER . ASSINGMENT expr\l 19 id_list: IDENTIFIER .\l 20        | IDENTIFIER . COMMA id_list\l 44 fun_struct: type IDENTIFIER . L_PARENTHESIS par_list R_PARENTHESIS L_KEY stm_list R_KEY\l"]
  65 -> 103 [style=solid label="ASSINGMENT"]
  65 -> 104 [style=solid label="L_PARENTHESIS"]
  65 -> 105 [style=solid label="COMMA"]
  65 -> "65R19" [style=solid]
 "65R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  66 [label="Estado 66\n\l 12 decl: type id_list .\l"]
  66 -> "66R12" [style=solid]
 "66R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  67 [label="Estado 67\n\l 60 arit_expr: arit_expr PLUS_OP . arit_expr_base\l"]
  67 -> 51 [style=solid label="IDENTIFIER"]
  67 -> 12 [style=solid label="LITERAL_INT"]
  67 -> 13 [style=solid label="LITERAL_FLOAT"]
  67 -> 14 [style=solid label="LITERAL_DOUBLE"]
  67 -> 15 [style=solid label="TRUE_VAL"]
  67 -> 16 [style=solid label="FALSE_VAL"]
  67 -> 106 [style=solid label="L_PARENTHESIS"]
  67 -> 107 [style=dashed label="arit_expr_base"]
  67 -> 46 [style=dashed label="term"]
  67 -> 47 [style=dashed label="term_num"]
  67 -> 48 [style=dashed label="log_term"]
  68 [label="Estado 68\n\l 61 arit_expr: arit_expr SUB_OP . arit_expr_base\l"]
  68 -> 51 [style=solid label="IDENTIFIER"]
  68 -> 12 [style=solid label="LITERAL_INT"]
  68 -> 13 [style=solid label="LITERAL_FLOAT"]
  68 -> 14 [style=solid label="LITERAL_DOUBLE"]
  68 -> 15 [style=solid label="TRUE_VAL"]
  68 -> 16 [style=solid label="FALSE_VAL"]
  68 -> 106 [style=solid label="L_PARENTHESIS"]
  68 -> 108 [style=dashed label="arit_expr_base"]
  68 -> 46 [style=dashed label="term"]
  68 -> 47 [style=dashed label="term_num"]
  68 -> 48 [style=dashed label="log_term"]
  69 [label="Estado 69\n\l 62 arit_expr: arit_expr DIV_OP . arit_expr_base\l"]
  69 -> 51 [style=solid label="IDENTIFIER"]
  69 -> 12 [style=solid label="LITERAL_INT"]
  69 -> 13 [style=solid label="LITERAL_FLOAT"]
  69 -> 14 [style=solid label="LITERAL_DOUBLE"]
  69 -> 15 [style=solid label="TRUE_VAL"]
  69 -> 16 [style=solid label="FALSE_VAL"]
  69 -> 106 [style=solid label="L_PARENTHESIS"]
  69 -> 109 [style=dashed label="arit_expr_base"]
  69 -> 46 [style=dashed label="term"]
  69 -> 47 [style=dashed label="term_num"]
  69 -> 48 [style=dashed label="log_term"]
  70 [label="Estado 70\n\l 63 arit_expr: arit_expr STAR . arit_expr_base\l"]
  70 -> 51 [style=solid label="IDENTIFIER"]
  70 -> 12 [style=solid label="LITERAL_INT"]
  70 -> 13 [style=solid label="LITERAL_FLOAT"]
  70 -> 14 [style=solid label="LITERAL_DOUBLE"]
  70 -> 15 [style=solid label="TRUE_VAL"]
  70 -> 16 [style=solid label="FALSE_VAL"]
  70 -> 106 [style=solid label="L_PARENTHESIS"]
  70 -> 110 [style=dashed label="arit_expr_base"]
  70 -> 46 [style=dashed label="term"]
  70 -> 47 [style=dashed label="term_num"]
  70 -> 48 [style=dashed label="log_term"]
  71 [label="Estado 71\n\l 64 arit_expr: arit_expr MOD_OP . arit_expr_base\l"]
  71 -> 51 [style=solid label="IDENTIFIER"]
  71 -> 12 [style=solid label="LITERAL_INT"]
  71 -> 13 [style=solid label="LITERAL_FLOAT"]
  71 -> 14 [style=solid label="LITERAL_DOUBLE"]
  71 -> 15 [style=solid label="TRUE_VAL"]
  71 -> 16 [style=solid label="FALSE_VAL"]
  71 -> 106 [style=solid label="L_PARENTHESIS"]
  71 -> 111 [style=dashed label="arit_expr_base"]
  71 -> 46 [style=dashed label="term"]
  71 -> 47 [style=dashed label="term_num"]
  71 -> 48 [style=dashed label="log_term"]
  72 [label="Estado 72\n\l 65 arit_expr: arit_expr INC_OP .\l"]
  72 -> "72R65" [style=solid]
 "72R65" [label="R65", fillcolor=3, shape=diamond, style=filled]
  73 [label="Estado 73\n\l 66 arit_expr: arit_expr DEC_OP .\l"]
  73 -> "73R66" [style=solid]
 "73R66" [label="R66", fillcolor=3, shape=diamond, style=filled]
  74 [label="Estado 74\n\l 76 op_log: AND_OP .\l"]
  74 -> "74R76" [style=solid]
 "74R76" [label="R76", fillcolor=3, shape=diamond, style=filled]
  75 [label="Estado 75\n\l 77 op_log: OR_OP .\l"]
  75 -> "75R77" [style=solid]
 "75R77" [label="R77", fillcolor=3, shape=diamond, style=filled]
  76 [label="Estado 76\n\l 78 op_log: NOT_OP .\l"]
  76 -> "76R78" [style=solid]
 "76R78" [label="R78", fillcolor=3, shape=diamond, style=filled]
  77 [label="Estado 77\n\l 71 log_expr: log_expr op_log . comp_expr\l"]
  77 -> 1 [style=solid label="LITERAL_STRING"]
  77 -> 51 [style=solid label="IDENTIFIER"]
  77 -> 10 [style=solid label="LITERAL_CHAR"]
  77 -> 12 [style=solid label="LITERAL_INT"]
  77 -> 13 [style=solid label="LITERAL_FLOAT"]
  77 -> 14 [style=solid label="LITERAL_DOUBLE"]
  77 -> 15 [style=solid label="TRUE_VAL"]
  77 -> 16 [style=solid label="FALSE_VAL"]
  77 -> 106 [style=solid label="L_PARENTHESIS"]
  77 -> 90 [style=dashed label="arit_expr"]
  77 -> 43 [style=dashed label="arit_expr_base"]
  77 -> 112 [style=dashed label="comp_expr"]
  77 -> 46 [style=dashed label="term"]
  77 -> 47 [style=dashed label="term_num"]
  77 -> 48 [style=dashed label="log_term"]
  77 -> 49 [style=dashed label="literal_string"]
  78 [label="Estado 78\n\l 81 op_comp: GE_OP .\l"]
  78 -> "78R81" [style=solid]
 "78R81" [label="R81", fillcolor=3, shape=diamond, style=filled]
  79 [label="Estado 79\n\l 79 op_comp: SE_OP .\l"]
  79 -> "79R79" [style=solid]
 "79R79" [label="R79", fillcolor=3, shape=diamond, style=filled]
  80 [label="Estado 80\n\l 83 op_comp: EQ_OP .\l"]
  80 -> "80R83" [style=solid]
 "80R83" [label="R83", fillcolor=3, shape=diamond, style=filled]
  81 [label="Estado 81\n\l 84 op_comp: NE_OP .\l"]
  81 -> "81R84" [style=solid]
 "81R84" [label="R84", fillcolor=3, shape=diamond, style=filled]
  82 [label="Estado 82\n\l 82 op_comp: G_OP .\l"]
  82 -> "82R82" [style=solid]
 "82R82" [label="R82", fillcolor=3, shape=diamond, style=filled]
  83 [label="Estado 83\n\l 80 op_comp: S_OP .\l"]
  83 -> "83R80" [style=solid]
 "83R80" [label="R80", fillcolor=3, shape=diamond, style=filled]
  84 [label="Estado 84\n\l 73 comp_expr: comp_expr op_comp . arit_expr\l"]
  84 -> 51 [style=solid label="IDENTIFIER"]
  84 -> 12 [style=solid label="LITERAL_INT"]
  84 -> 13 [style=solid label="LITERAL_FLOAT"]
  84 -> 14 [style=solid label="LITERAL_DOUBLE"]
  84 -> 15 [style=solid label="TRUE_VAL"]
  84 -> 16 [style=solid label="FALSE_VAL"]
  84 -> 106 [style=solid label="L_PARENTHESIS"]
  84 -> 113 [style=dashed label="arit_expr"]
  84 -> 43 [style=dashed label="arit_expr_base"]
  84 -> 46 [style=dashed label="term"]
  84 -> 47 [style=dashed label="term_num"]
  84 -> 48 [style=dashed label="log_term"]
  85 [label="Estado 85\n\l 74 comp_expr: literal_string EQ_OP . literal_string\l"]
  85 -> 1 [style=solid label="LITERAL_STRING"]
  85 -> 10 [style=solid label="LITERAL_CHAR"]
  85 -> 114 [style=dashed label="literal_string"]
  86 [label="Estado 86\n\l 75 comp_expr: literal_string NE_OP . literal_string\l"]
  86 -> 1 [style=solid label="LITERAL_STRING"]
  86 -> 10 [style=solid label="LITERAL_CHAR"]
  86 -> 115 [style=dashed label="literal_string"]
  87 [label="Estado 87\n\l 13 assingment: IDENTIFIER ASSINGMENT expr .\l"]
  87 -> "87R13" [style=solid]
 "87R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  88 [label="Estado 88\n\l 68 arit_expr_base: L_PARENTHESIS arit_expr R_PARENTHESIS .\l"]
  88 -> "88R68" [style=solid]
 "88R68" [label="R68", fillcolor=3, shape=diamond, style=filled]
  89 [label="Estado 89\n\l 70 log_expr: L_PARENTHESIS log_expr R_PARENTHESIS .\l"]
  89 -> "89R70" [style=solid]
 "89R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  90 [label="Estado 90\n\l 60 arit_expr: arit_expr . PLUS_OP arit_expr_base\l 61          | arit_expr . SUB_OP arit_expr_base\l 62          | arit_expr . DIV_OP arit_expr_base\l 63          | arit_expr . STAR arit_expr_base\l 64          | arit_expr . MOD_OP arit_expr_base\l 65          | arit_expr . INC_OP\l 66          | arit_expr . DEC_OP\l 72 comp_expr: arit_expr .\l"]
  90 -> 67 [style=solid label="PLUS_OP"]
  90 -> 68 [style=solid label="SUB_OP"]
  90 -> 69 [style=solid label="DIV_OP"]
  90 -> 70 [style=solid label="STAR"]
  90 -> 71 [style=solid label="MOD_OP"]
  90 -> 72 [style=solid label="INC_OP"]
  90 -> 73 [style=solid label="DEC_OP"]
  90 -> "90R72" [style=solid]
 "90R72" [label="R72", fillcolor=3, shape=diamond, style=filled]
  91 [label="Estado 91\n\l 27 if_struct: IF_STM L_PARENTHESIS log_expr . R_PARENTHESIS block else_struct\l 71 log_expr: log_expr . op_log comp_expr\l"]
  91 -> 74 [style=solid label="AND_OP"]
  91 -> 75 [style=solid label="OR_OP"]
  91 -> 76 [style=solid label="NOT_OP"]
  91 -> 116 [style=solid label="R_PARENTHESIS"]
  91 -> 77 [style=dashed label="op_log"]
  92 [label="Estado 92\n\l 43 for_struct: FOR_STM L_PARENTHESIS $@1 . initialization SEMICOLON log_expr SEMICOLON arit_expr R_PARENTHESIS $@2 block\l"]
  92 -> 3 [style=solid label="INT_TYPE"]
  92 -> 4 [style=solid label="FLOAT_TYPE"]
  92 -> 5 [style=solid label="DOUBLE_TYPE"]
  92 -> 6 [style=solid label="STRING_TYPE"]
  92 -> 7 [style=solid label="BOOLEAN_TYPE"]
  92 -> 8 [style=solid label="MATRIZ_TYPE"]
  92 -> 9 [style=solid label="VOID_TYPE"]
  92 -> 11 [style=solid label="CHAR_TYPE"]
  92 -> 117 [style=dashed label="initialization"]
  92 -> 118 [style=dashed label="type"]
  93 [label="Estado 93\n\l 46 block: L_KEY $@3 . stm_list R_KEY\l"]
  93 -> 1 [style=solid label="LITERAL_STRING"]
  93 -> 2 [style=solid label="IDENTIFIER"]
  93 -> 3 [style=solid label="INT_TYPE"]
  93 -> 4 [style=solid label="FLOAT_TYPE"]
  93 -> 5 [style=solid label="DOUBLE_TYPE"]
  93 -> 6 [style=solid label="STRING_TYPE"]
  93 -> 7 [style=solid label="BOOLEAN_TYPE"]
  93 -> 8 [style=solid label="MATRIZ_TYPE"]
  93 -> 9 [style=solid label="VOID_TYPE"]
  93 -> 10 [style=solid label="LITERAL_CHAR"]
  93 -> 11 [style=solid label="CHAR_TYPE"]
  93 -> 12 [style=solid label="LITERAL_INT"]
  93 -> 13 [style=solid label="LITERAL_FLOAT"]
  93 -> 14 [style=solid label="LITERAL_DOUBLE"]
  93 -> 15 [style=solid label="TRUE_VAL"]
  93 -> 16 [style=solid label="FALSE_VAL"]
  93 -> 17 [style=solid label="L_PARENTHESIS"]
  93 -> 18 [style=solid label="IF_STM"]
  93 -> 19 [style=solid label="FOR_STM"]
  93 -> 20 [style=solid label="DO_STM"]
  93 -> 21 [style=solid label="WHILE_STM"]
  93 -> 22 [style=solid label="SWITCH_STM"]
  93 -> 23 [style=solid label="PRINT"]
  93 -> 24 [style=solid label="PRINTF"]
  93 -> 119 [style=dashed label="stm_list"]
  93 -> 27 [style=dashed label="stm"]
  93 -> 28 [style=dashed label="decl"]
  93 -> 29 [style=dashed label="assingment"]
  93 -> 30 [style=dashed label="initialization"]
  93 -> 31 [style=dashed label="print_stm"]
  93 -> 32 [style=dashed label="expres_list"]
  93 -> 33 [style=dashed label="expr"]
  93 -> 34 [style=dashed label="cond_stm"]
  93 -> 35 [style=dashed label="if_struct"]
  93 -> 36 [style=dashed label="switch_struct"]
  93 -> 37 [style=dashed label="loop_stm"]
  93 -> 38 [style=dashed label="while_struct"]
  93 -> 39 [style=dashed label="for_struct"]
  93 -> 40 [style=dashed label="fun_struct"]
  93 -> 41 [style=dashed label="type"]
  93 -> 42 [style=dashed label="arit_expr"]
  93 -> 43 [style=dashed label="arit_expr_base"]
  93 -> 44 [style=dashed label="log_expr"]
  93 -> 45 [style=dashed label="comp_expr"]
  93 -> 46 [style=dashed label="term"]
  93 -> 47 [style=dashed label="term_num"]
  93 -> 48 [style=dashed label="log_term"]
  93 -> 49 [style=dashed label="literal_string"]
  94 [label="Estado 94\n\l 40 while_struct: DO_STM block WHILE_STM . L_PARENTHESIS log_expr R_PARENTHESIS\l"]
  94 -> 120 [style=solid label="L_PARENTHESIS"]
  95 [label="Estado 95\n\l 39 while_struct: WHILE_STM L_PARENTHESIS log_expr . R_PARENTHESIS block\l 71 log_expr: log_expr . op_log comp_expr\l"]
  95 -> 74 [style=solid label="AND_OP"]
  95 -> 75 [style=solid label="OR_OP"]
  95 -> 76 [style=solid label="NOT_OP"]
  95 -> 121 [style=solid label="R_PARENTHESIS"]
  95 -> 77 [style=dashed label="op_log"]
  96 [label="Estado 96\n\l 93 literal_term: term .\l"]
  96 -> "96R93" [style=solid]
 "96R93" [label="R93", fillcolor=3, shape=diamond, style=filled]
  97 [label="Estado 97\n\l 33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term . R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY\l"]
  97 -> 122 [style=solid label="R_PARENTHESIS"]
  98 [label="Estado 98\n\l 94 literal_term: literal_string .\l"]
  98 -> "98R94" [style=solid]
 "98R94" [label="R94", fillcolor=3, shape=diamond, style=filled]
  99 [label="Estado 99\n\l 15 print_stm: PRINT L_PARENTHESIS literal_string . R_PARENTHESIS\l 16          | PRINT L_PARENTHESIS literal_string . COMMA id_list R_PARENTHESIS\l"]
  99 -> 123 [style=solid label="R_PARENTHESIS"]
  99 -> 124 [style=solid label="COMMA"]
  100 [label="Estado 100\n\l 17 print_stm: PRINTF L_PARENTHESIS literal_string . R_PARENTHESIS\l 18          | PRINTF L_PARENTHESIS literal_string . COMMA id_list R_PARENTHESIS\l"]
  100 -> 125 [style=solid label="R_PARENTHESIS"]
  100 -> 126 [style=solid label="COMMA"]
  101 [label="Estado 101\n\l  3 stm_list: stm SEMICOLON stm_list .\l"]
  101 -> "101R3" [style=solid]
 "101R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  102 [label="Estado 102\n\l 22 expres_list: expr SEMICOLON expres_list .\l"]
  102 -> "102R22" [style=solid]
 "102R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  103 [label="Estado 103\n\l 14 initialization: type IDENTIFIER ASSINGMENT . expr\l"]
  103 -> 1 [style=solid label="LITERAL_STRING"]
  103 -> 51 [style=solid label="IDENTIFIER"]
  103 -> 10 [style=solid label="LITERAL_CHAR"]
  103 -> 12 [style=solid label="LITERAL_INT"]
  103 -> 13 [style=solid label="LITERAL_FLOAT"]
  103 -> 14 [style=solid label="LITERAL_DOUBLE"]
  103 -> 15 [style=solid label="TRUE_VAL"]
  103 -> 16 [style=solid label="FALSE_VAL"]
  103 -> 17 [style=solid label="L_PARENTHESIS"]
  103 -> 127 [style=dashed label="expr"]
  103 -> 42 [style=dashed label="arit_expr"]
  103 -> 43 [style=dashed label="arit_expr_base"]
  103 -> 44 [style=dashed label="log_expr"]
  103 -> 45 [style=dashed label="comp_expr"]
  103 -> 46 [style=dashed label="term"]
  103 -> 47 [style=dashed label="term_num"]
  103 -> 48 [style=dashed label="log_term"]
  103 -> 49 [style=dashed label="literal_string"]
  104 [label="Estado 104\n\l 44 fun_struct: type IDENTIFIER L_PARENTHESIS . par_list R_PARENTHESIS L_KEY stm_list R_KEY\l"]
  104 -> 3 [style=solid label="INT_TYPE"]
  104 -> 4 [style=solid label="FLOAT_TYPE"]
  104 -> 5 [style=solid label="DOUBLE_TYPE"]
  104 -> 6 [style=solid label="STRING_TYPE"]
  104 -> 7 [style=solid label="BOOLEAN_TYPE"]
  104 -> 8 [style=solid label="MATRIZ_TYPE"]
  104 -> 9 [style=solid label="VOID_TYPE"]
  104 -> 11 [style=solid label="CHAR_TYPE"]
  104 -> 128 [style=dashed label="type"]
  104 -> 129 [style=dashed label="par_list"]
  104 -> 130 [style=dashed label="par_term"]
  104 -> "104R55" [style=solid]
 "104R55" [label="R55", fillcolor=3, shape=diamond, style=filled]
  105 [label="Estado 105\n\l 20 id_list: IDENTIFIER COMMA . id_list\l"]
  105 -> 131 [style=solid label="IDENTIFIER"]
  105 -> 132 [style=dashed label="id_list"]
  106 [label="Estado 106\n\l 68 arit_expr_base: L_PARENTHESIS . arit_expr R_PARENTHESIS\l"]
  106 -> 51 [style=solid label="IDENTIFIER"]
  106 -> 12 [style=solid label="LITERAL_INT"]
  106 -> 13 [style=solid label="LITERAL_FLOAT"]
  106 -> 14 [style=solid label="LITERAL_DOUBLE"]
  106 -> 15 [style=solid label="TRUE_VAL"]
  106 -> 16 [style=solid label="FALSE_VAL"]
  106 -> 106 [style=solid label="L_PARENTHESIS"]
  106 -> 133 [style=dashed label="arit_expr"]
  106 -> 43 [style=dashed label="arit_expr_base"]
  106 -> 46 [style=dashed label="term"]
  106 -> 47 [style=dashed label="term_num"]
  106 -> 48 [style=dashed label="log_term"]
  107 [label="Estado 107\n\l 60 arit_expr: arit_expr PLUS_OP arit_expr_base .\l"]
  107 -> "107R60" [style=solid]
 "107R60" [label="R60", fillcolor=3, shape=diamond, style=filled]
  108 [label="Estado 108\n\l 61 arit_expr: arit_expr SUB_OP arit_expr_base .\l"]
  108 -> "108R61" [style=solid]
 "108R61" [label="R61", fillcolor=3, shape=diamond, style=filled]
  109 [label="Estado 109\n\l 62 arit_expr: arit_expr DIV_OP arit_expr_base .\l"]
  109 -> "109R62" [style=solid]
 "109R62" [label="R62", fillcolor=3, shape=diamond, style=filled]
  110 [label="Estado 110\n\l 63 arit_expr: arit_expr STAR arit_expr_base .\l"]
  110 -> "110R63" [style=solid]
 "110R63" [label="R63", fillcolor=3, shape=diamond, style=filled]
  111 [label="Estado 111\n\l 64 arit_expr: arit_expr MOD_OP arit_expr_base .\l"]
  111 -> "111R64" [style=solid]
 "111R64" [label="R64", fillcolor=3, shape=diamond, style=filled]
  112 [label="Estado 112\n\l 71 log_expr: log_expr op_log comp_expr .\l 73 comp_expr: comp_expr . op_comp arit_expr\l"]
  112 -> 78 [style=solid label="GE_OP"]
  112 -> 79 [style=solid label="SE_OP"]
  112 -> 80 [style=solid label="EQ_OP"]
  112 -> 81 [style=solid label="NE_OP"]
  112 -> 82 [style=solid label="G_OP"]
  112 -> 83 [style=solid label="S_OP"]
  112 -> 84 [style=dashed label="op_comp"]
  112 -> "112R71" [style=solid]
 "112R71" [label="R71", fillcolor=3, shape=diamond, style=filled]
  113 [label="Estado 113\n\l 60 arit_expr: arit_expr . PLUS_OP arit_expr_base\l 61          | arit_expr . SUB_OP arit_expr_base\l 62          | arit_expr . DIV_OP arit_expr_base\l 63          | arit_expr . STAR arit_expr_base\l 64          | arit_expr . MOD_OP arit_expr_base\l 65          | arit_expr . INC_OP\l 66          | arit_expr . DEC_OP\l 73 comp_expr: comp_expr op_comp arit_expr .\l"]
  113 -> 67 [style=solid label="PLUS_OP"]
  113 -> 68 [style=solid label="SUB_OP"]
  113 -> 69 [style=solid label="DIV_OP"]
  113 -> 70 [style=solid label="STAR"]
  113 -> 71 [style=solid label="MOD_OP"]
  113 -> 72 [style=solid label="INC_OP"]
  113 -> 73 [style=solid label="DEC_OP"]
  113 -> "113R73" [style=solid]
 "113R73" [label="R73", fillcolor=3, shape=diamond, style=filled]
  114 [label="Estado 114\n\l 74 comp_expr: literal_string EQ_OP literal_string .\l"]
  114 -> "114R74" [style=solid]
 "114R74" [label="R74", fillcolor=3, shape=diamond, style=filled]
  115 [label="Estado 115\n\l 75 comp_expr: literal_string NE_OP literal_string .\l"]
  115 -> "115R75" [style=solid]
 "115R75" [label="R75", fillcolor=3, shape=diamond, style=filled]
  116 [label="Estado 116\n\l 27 if_struct: IF_STM L_PARENTHESIS log_expr R_PARENTHESIS . block else_struct\l"]
  116 -> 56 [style=solid label="L_KEY"]
  116 -> 134 [style=dashed label="block"]
  117 [label="Estado 117\n\l 43 for_struct: FOR_STM L_PARENTHESIS $@1 initialization . SEMICOLON log_expr SEMICOLON arit_expr R_PARENTHESIS $@2 block\l"]
  117 -> 135 [style=solid label="SEMICOLON"]
  118 [label="Estado 118\n\l 14 initialization: type . IDENTIFIER ASSINGMENT expr\l"]
  118 -> 136 [style=solid label="IDENTIFIER"]
  119 [label="Estado 119\n\l 46 block: L_KEY $@3 stm_list . R_KEY\l"]
  119 -> 137 [style=solid label="R_KEY"]
  120 [label="Estado 120\n\l 40 while_struct: DO_STM block WHILE_STM L_PARENTHESIS . log_expr R_PARENTHESIS\l"]
  120 -> 1 [style=solid label="LITERAL_STRING"]
  120 -> 51 [style=solid label="IDENTIFIER"]
  120 -> 10 [style=solid label="LITERAL_CHAR"]
  120 -> 12 [style=solid label="LITERAL_INT"]
  120 -> 13 [style=solid label="LITERAL_FLOAT"]
  120 -> 14 [style=solid label="LITERAL_DOUBLE"]
  120 -> 15 [style=solid label="TRUE_VAL"]
  120 -> 16 [style=solid label="FALSE_VAL"]
  120 -> 17 [style=solid label="L_PARENTHESIS"]
  120 -> 90 [style=dashed label="arit_expr"]
  120 -> 43 [style=dashed label="arit_expr_base"]
  120 -> 138 [style=dashed label="log_expr"]
  120 -> 45 [style=dashed label="comp_expr"]
  120 -> 46 [style=dashed label="term"]
  120 -> 47 [style=dashed label="term_num"]
  120 -> 48 [style=dashed label="log_term"]
  120 -> 49 [style=dashed label="literal_string"]
  121 [label="Estado 121\n\l 39 while_struct: WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS . block\l"]
  121 -> 56 [style=solid label="L_KEY"]
  121 -> 139 [style=dashed label="block"]
  122 [label="Estado 122\n\l 33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS . L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY\l"]
  122 -> 140 [style=solid label="L_KEY"]
  123 [label="Estado 123\n\l 15 print_stm: PRINT L_PARENTHESIS literal_string R_PARENTHESIS .\l"]
  123 -> "123R15" [style=solid]
 "123R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  124 [label="Estado 124\n\l 16 print_stm: PRINT L_PARENTHESIS literal_string COMMA . id_list R_PARENTHESIS\l"]
  124 -> 131 [style=solid label="IDENTIFIER"]
  124 -> 141 [style=dashed label="id_list"]
  125 [label="Estado 125\n\l 17 print_stm: PRINTF L_PARENTHESIS literal_string R_PARENTHESIS .\l"]
  125 -> "125R17" [style=solid]
 "125R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  126 [label="Estado 126\n\l 18 print_stm: PRINTF L_PARENTHESIS literal_string COMMA . id_list R_PARENTHESIS\l"]
  126 -> 131 [style=solid label="IDENTIFIER"]
  126 -> 142 [style=dashed label="id_list"]
  127 [label="Estado 127\n\l 14 initialization: type IDENTIFIER ASSINGMENT expr .\l"]
  127 -> "127R14" [style=solid]
 "127R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  128 [label="Estado 128\n\l 58 par_term: type . IDENTIFIER\l"]
  128 -> 143 [style=solid label="IDENTIFIER"]
  129 [label="Estado 129\n\l 44 fun_struct: type IDENTIFIER L_PARENTHESIS par_list . R_PARENTHESIS L_KEY stm_list R_KEY\l"]
  129 -> 144 [style=solid label="R_PARENTHESIS"]
  130 [label="Estado 130\n\l 56 par_list: par_term .\l 57         | par_term . COMMA par_list\l"]
  130 -> 145 [style=solid label="COMMA"]
  130 -> "130R56" [style=solid]
 "130R56" [label="R56", fillcolor=3, shape=diamond, style=filled]
  131 [label="Estado 131\n\l 19 id_list: IDENTIFIER .\l 20        | IDENTIFIER . COMMA id_list\l"]
  131 -> 105 [style=solid label="COMMA"]
  131 -> "131R19" [style=solid]
 "131R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  132 [label="Estado 132\n\l 20 id_list: IDENTIFIER COMMA id_list .\l"]
  132 -> "132R20" [style=solid]
 "132R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  133 [label="Estado 133\n\l 60 arit_expr: arit_expr . PLUS_OP arit_expr_base\l 61          | arit_expr . SUB_OP arit_expr_base\l 62          | arit_expr . DIV_OP arit_expr_base\l 63          | arit_expr . STAR arit_expr_base\l 64          | arit_expr . MOD_OP arit_expr_base\l 65          | arit_expr . INC_OP\l 66          | arit_expr . DEC_OP\l 68 arit_expr_base: L_PARENTHESIS arit_expr . R_PARENTHESIS\l"]
  133 -> 67 [style=solid label="PLUS_OP"]
  133 -> 68 [style=solid label="SUB_OP"]
  133 -> 69 [style=solid label="DIV_OP"]
  133 -> 70 [style=solid label="STAR"]
  133 -> 71 [style=solid label="MOD_OP"]
  133 -> 72 [style=solid label="INC_OP"]
  133 -> 73 [style=solid label="DEC_OP"]
  133 -> 88 [style=solid label="R_PARENTHESIS"]
  134 [label="Estado 134\n\l 27 if_struct: IF_STM L_PARENTHESIS log_expr R_PARENTHESIS block . else_struct\l"]
  134 -> 146 [style=solid label="ELSE_IF_STM"]
  134 -> 147 [style=dashed label="else_struct"]
  134 -> 148 [style=dashed label="elseif_list"]
  134 -> 149 [style=dashed label="elseif_struct"]
  134 -> "134R28" [style=solid]
 "134R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  134 -> "134R30" [label="[ELSE_STM]", style=solid]
 "134R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  135 [label="Estado 135\n\l 43 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON . log_expr SEMICOLON arit_expr R_PARENTHESIS $@2 block\l"]
  135 -> 1 [style=solid label="LITERAL_STRING"]
  135 -> 51 [style=solid label="IDENTIFIER"]
  135 -> 10 [style=solid label="LITERAL_CHAR"]
  135 -> 12 [style=solid label="LITERAL_INT"]
  135 -> 13 [style=solid label="LITERAL_FLOAT"]
  135 -> 14 [style=solid label="LITERAL_DOUBLE"]
  135 -> 15 [style=solid label="TRUE_VAL"]
  135 -> 16 [style=solid label="FALSE_VAL"]
  135 -> 17 [style=solid label="L_PARENTHESIS"]
  135 -> 90 [style=dashed label="arit_expr"]
  135 -> 43 [style=dashed label="arit_expr_base"]
  135 -> 150 [style=dashed label="log_expr"]
  135 -> 45 [style=dashed label="comp_expr"]
  135 -> 46 [style=dashed label="term"]
  135 -> 47 [style=dashed label="term_num"]
  135 -> 48 [style=dashed label="log_term"]
  135 -> 49 [style=dashed label="literal_string"]
  136 [label="Estado 136\n\l 14 initialization: type IDENTIFIER . ASSINGMENT expr\l"]
  136 -> 103 [style=solid label="ASSINGMENT"]
  137 [label="Estado 137\n\l 46 block: L_KEY $@3 stm_list R_KEY .\l"]
  137 -> "137R46" [style=solid]
 "137R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  138 [label="Estado 138\n\l 40 while_struct: DO_STM block WHILE_STM L_PARENTHESIS log_expr . R_PARENTHESIS\l 71 log_expr: log_expr . op_log comp_expr\l"]
  138 -> 74 [style=solid label="AND_OP"]
  138 -> 75 [style=solid label="OR_OP"]
  138 -> 76 [style=solid label="NOT_OP"]
  138 -> 151 [style=solid label="R_PARENTHESIS"]
  138 -> 77 [style=dashed label="op_log"]
  139 [label="Estado 139\n\l 39 while_struct: WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS block .\l"]
  139 -> "139R39" [style=solid]
 "139R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  140 [label="Estado 140\n\l 33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY . case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY\l"]
  140 -> 152 [style=solid label="CASE"]
  140 -> 153 [style=dashed label="case_list_switch"]
  140 -> 154 [style=dashed label="case_switch"]
  140 -> "140R34" [style=solid]
 "140R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  141 [label="Estado 141\n\l 16 print_stm: PRINT L_PARENTHESIS literal_string COMMA id_list . R_PARENTHESIS\l"]
  141 -> 155 [style=solid label="R_PARENTHESIS"]
  142 [label="Estado 142\n\l 18 print_stm: PRINTF L_PARENTHESIS literal_string COMMA id_list . R_PARENTHESIS\l"]
  142 -> 156 [style=solid label="R_PARENTHESIS"]
  143 [label="Estado 143\n\l 58 par_term: type IDENTIFIER .\l"]
  143 -> "143R58" [style=solid]
 "143R58" [label="R58", fillcolor=3, shape=diamond, style=filled]
  144 [label="Estado 144\n\l 44 fun_struct: type IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS . L_KEY stm_list R_KEY\l"]
  144 -> 157 [style=solid label="L_KEY"]
  145 [label="Estado 145\n\l 57 par_list: par_term COMMA . par_list\l"]
  145 -> 3 [style=solid label="INT_TYPE"]
  145 -> 4 [style=solid label="FLOAT_TYPE"]
  145 -> 5 [style=solid label="DOUBLE_TYPE"]
  145 -> 6 [style=solid label="STRING_TYPE"]
  145 -> 7 [style=solid label="BOOLEAN_TYPE"]
  145 -> 8 [style=solid label="MATRIZ_TYPE"]
  145 -> 9 [style=solid label="VOID_TYPE"]
  145 -> 11 [style=solid label="CHAR_TYPE"]
  145 -> 128 [style=dashed label="type"]
  145 -> 158 [style=dashed label="par_list"]
  145 -> 130 [style=dashed label="par_term"]
  145 -> "145R55" [style=solid]
 "145R55" [label="R55", fillcolor=3, shape=diamond, style=filled]
  146 [label="Estado 146\n\l 32 elseif_struct: ELSE_IF_STM . L_PARENTHESIS log_expr R_PARENTHESIS block\l"]
  146 -> 159 [style=solid label="L_PARENTHESIS"]
  147 [label="Estado 147\n\l 27 if_struct: IF_STM L_PARENTHESIS log_expr R_PARENTHESIS block else_struct .\l"]
  147 -> "147R27" [style=solid]
 "147R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  148 [label="Estado 148\n\l 29 else_struct: elseif_list . ELSE_STM block\l"]
  148 -> 160 [style=solid label="ELSE_STM"]
  149 [label="Estado 149\n\l 31 elseif_list: elseif_struct . elseif_list\l"]
  149 -> 146 [style=solid label="ELSE_IF_STM"]
  149 -> 161 [style=dashed label="elseif_list"]
  149 -> 149 [style=dashed label="elseif_struct"]
  149 -> "149R30" [style=solid]
 "149R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  150 [label="Estado 150\n\l 43 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr . SEMICOLON arit_expr R_PARENTHESIS $@2 block\l 71 log_expr: log_expr . op_log comp_expr\l"]
  150 -> 74 [style=solid label="AND_OP"]
  150 -> 75 [style=solid label="OR_OP"]
  150 -> 76 [style=solid label="NOT_OP"]
  150 -> 162 [style=solid label="SEMICOLON"]
  150 -> 77 [style=dashed label="op_log"]
  151 [label="Estado 151\n\l 40 while_struct: DO_STM block WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS .\l"]
  151 -> "151R40" [style=solid]
 "151R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  152 [label="Estado 152\n\l 36 case_switch: CASE . literal_term DOUBLE_DOT stm_list BREAK SEMICOLON\l"]
  152 -> 1 [style=solid label="LITERAL_STRING"]
  152 -> 51 [style=solid label="IDENTIFIER"]
  152 -> 10 [style=solid label="LITERAL_CHAR"]
  152 -> 12 [style=solid label="LITERAL_INT"]
  152 -> 13 [style=solid label="LITERAL_FLOAT"]
  152 -> 14 [style=solid label="LITERAL_DOUBLE"]
  152 -> 15 [style=solid label="TRUE_VAL"]
  152 -> 16 [style=solid label="FALSE_VAL"]
  152 -> 96 [style=dashed label="term"]
  152 -> 47 [style=dashed label="term_num"]
  152 -> 48 [style=dashed label="log_term"]
  152 -> 163 [style=dashed label="literal_term"]
  152 -> 98 [style=dashed label="literal_string"]
  153 [label="Estado 153\n\l 33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch . DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY\l"]
  153 -> 164 [style=solid label="DEFAULT"]
  154 [label="Estado 154\n\l 35 case_list_switch: case_switch . case_list_switch\l"]
  154 -> 152 [style=solid label="CASE"]
  154 -> 165 [style=dashed label="case_list_switch"]
  154 -> 154 [style=dashed label="case_switch"]
  154 -> "154R34" [style=solid]
 "154R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  155 [label="Estado 155\n\l 16 print_stm: PRINT L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS .\l"]
  155 -> "155R16" [style=solid]
 "155R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  156 [label="Estado 156\n\l 18 print_stm: PRINTF L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS .\l"]
  156 -> "156R18" [style=solid]
 "156R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  157 [label="Estado 157\n\l 44 fun_struct: type IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS L_KEY . stm_list R_KEY\l"]
  157 -> 1 [style=solid label="LITERAL_STRING"]
  157 -> 2 [style=solid label="IDENTIFIER"]
  157 -> 3 [style=solid label="INT_TYPE"]
  157 -> 4 [style=solid label="FLOAT_TYPE"]
  157 -> 5 [style=solid label="DOUBLE_TYPE"]
  157 -> 6 [style=solid label="STRING_TYPE"]
  157 -> 7 [style=solid label="BOOLEAN_TYPE"]
  157 -> 8 [style=solid label="MATRIZ_TYPE"]
  157 -> 9 [style=solid label="VOID_TYPE"]
  157 -> 10 [style=solid label="LITERAL_CHAR"]
  157 -> 11 [style=solid label="CHAR_TYPE"]
  157 -> 12 [style=solid label="LITERAL_INT"]
  157 -> 13 [style=solid label="LITERAL_FLOAT"]
  157 -> 14 [style=solid label="LITERAL_DOUBLE"]
  157 -> 15 [style=solid label="TRUE_VAL"]
  157 -> 16 [style=solid label="FALSE_VAL"]
  157 -> 17 [style=solid label="L_PARENTHESIS"]
  157 -> 18 [style=solid label="IF_STM"]
  157 -> 19 [style=solid label="FOR_STM"]
  157 -> 20 [style=solid label="DO_STM"]
  157 -> 21 [style=solid label="WHILE_STM"]
  157 -> 22 [style=solid label="SWITCH_STM"]
  157 -> 23 [style=solid label="PRINT"]
  157 -> 24 [style=solid label="PRINTF"]
  157 -> 166 [style=dashed label="stm_list"]
  157 -> 27 [style=dashed label="stm"]
  157 -> 28 [style=dashed label="decl"]
  157 -> 29 [style=dashed label="assingment"]
  157 -> 30 [style=dashed label="initialization"]
  157 -> 31 [style=dashed label="print_stm"]
  157 -> 32 [style=dashed label="expres_list"]
  157 -> 33 [style=dashed label="expr"]
  157 -> 34 [style=dashed label="cond_stm"]
  157 -> 35 [style=dashed label="if_struct"]
  157 -> 36 [style=dashed label="switch_struct"]
  157 -> 37 [style=dashed label="loop_stm"]
  157 -> 38 [style=dashed label="while_struct"]
  157 -> 39 [style=dashed label="for_struct"]
  157 -> 40 [style=dashed label="fun_struct"]
  157 -> 41 [style=dashed label="type"]
  157 -> 42 [style=dashed label="arit_expr"]
  157 -> 43 [style=dashed label="arit_expr_base"]
  157 -> 44 [style=dashed label="log_expr"]
  157 -> 45 [style=dashed label="comp_expr"]
  157 -> 46 [style=dashed label="term"]
  157 -> 47 [style=dashed label="term_num"]
  157 -> 48 [style=dashed label="log_term"]
  157 -> 49 [style=dashed label="literal_string"]
  158 [label="Estado 158\n\l 57 par_list: par_term COMMA par_list .\l"]
  158 -> "158R57" [style=solid]
 "158R57" [label="R57", fillcolor=3, shape=diamond, style=filled]
  159 [label="Estado 159\n\l 32 elseif_struct: ELSE_IF_STM L_PARENTHESIS . log_expr R_PARENTHESIS block\l"]
  159 -> 1 [style=solid label="LITERAL_STRING"]
  159 -> 51 [style=solid label="IDENTIFIER"]
  159 -> 10 [style=solid label="LITERAL_CHAR"]
  159 -> 12 [style=solid label="LITERAL_INT"]
  159 -> 13 [style=solid label="LITERAL_FLOAT"]
  159 -> 14 [style=solid label="LITERAL_DOUBLE"]
  159 -> 15 [style=solid label="TRUE_VAL"]
  159 -> 16 [style=solid label="FALSE_VAL"]
  159 -> 17 [style=solid label="L_PARENTHESIS"]
  159 -> 90 [style=dashed label="arit_expr"]
  159 -> 43 [style=dashed label="arit_expr_base"]
  159 -> 167 [style=dashed label="log_expr"]
  159 -> 45 [style=dashed label="comp_expr"]
  159 -> 46 [style=dashed label="term"]
  159 -> 47 [style=dashed label="term_num"]
  159 -> 48 [style=dashed label="log_term"]
  159 -> 49 [style=dashed label="literal_string"]
  160 [label="Estado 160\n\l 29 else_struct: elseif_list ELSE_STM . block\l"]
  160 -> 56 [style=solid label="L_KEY"]
  160 -> 168 [style=dashed label="block"]
  161 [label="Estado 161\n\l 31 elseif_list: elseif_struct elseif_list .\l"]
  161 -> "161R31" [style=solid]
 "161R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  162 [label="Estado 162\n\l 43 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON . arit_expr R_PARENTHESIS $@2 block\l"]
  162 -> 51 [style=solid label="IDENTIFIER"]
  162 -> 12 [style=solid label="LITERAL_INT"]
  162 -> 13 [style=solid label="LITERAL_FLOAT"]
  162 -> 14 [style=solid label="LITERAL_DOUBLE"]
  162 -> 15 [style=solid label="TRUE_VAL"]
  162 -> 16 [style=solid label="FALSE_VAL"]
  162 -> 106 [style=solid label="L_PARENTHESIS"]
  162 -> 169 [style=dashed label="arit_expr"]
  162 -> 43 [style=dashed label="arit_expr_base"]
  162 -> 46 [style=dashed label="term"]
  162 -> 47 [style=dashed label="term_num"]
  162 -> 48 [style=dashed label="log_term"]
  163 [label="Estado 163\n\l 36 case_switch: CASE literal_term . DOUBLE_DOT stm_list BREAK SEMICOLON\l"]
  163 -> 170 [style=solid label="DOUBLE_DOT"]
  164 [label="Estado 164\n\l 33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT . DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY\l"]
  164 -> 171 [style=solid label="DOUBLE_DOT"]
  165 [label="Estado 165\n\l 35 case_list_switch: case_switch case_list_switch .\l"]
  165 -> "165R35" [style=solid]
 "165R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  166 [label="Estado 166\n\l 44 fun_struct: type IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS L_KEY stm_list . R_KEY\l"]
  166 -> 172 [style=solid label="R_KEY"]
  167 [label="Estado 167\n\l 32 elseif_struct: ELSE_IF_STM L_PARENTHESIS log_expr . R_PARENTHESIS block\l 71 log_expr: log_expr . op_log comp_expr\l"]
  167 -> 74 [style=solid label="AND_OP"]
  167 -> 75 [style=solid label="OR_OP"]
  167 -> 76 [style=solid label="NOT_OP"]
  167 -> 173 [style=solid label="R_PARENTHESIS"]
  167 -> 77 [style=dashed label="op_log"]
  168 [label="Estado 168\n\l 29 else_struct: elseif_list ELSE_STM block .\l"]
  168 -> "168R29" [style=solid]
 "168R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  169 [label="Estado 169\n\l 43 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON arit_expr . R_PARENTHESIS $@2 block\l 60 arit_expr: arit_expr . PLUS_OP arit_expr_base\l 61          | arit_expr . SUB_OP arit_expr_base\l 62          | arit_expr . DIV_OP arit_expr_base\l 63          | arit_expr . STAR arit_expr_base\l 64          | arit_expr . MOD_OP arit_expr_base\l 65          | arit_expr . INC_OP\l 66          | arit_expr . DEC_OP\l"]
  169 -> 67 [style=solid label="PLUS_OP"]
  169 -> 68 [style=solid label="SUB_OP"]
  169 -> 69 [style=solid label="DIV_OP"]
  169 -> 70 [style=solid label="STAR"]
  169 -> 71 [style=solid label="MOD_OP"]
  169 -> 72 [style=solid label="INC_OP"]
  169 -> 73 [style=solid label="DEC_OP"]
  169 -> 174 [style=solid label="R_PARENTHESIS"]
  170 [label="Estado 170\n\l 36 case_switch: CASE literal_term DOUBLE_DOT . stm_list BREAK SEMICOLON\l"]
  170 -> 1 [style=solid label="LITERAL_STRING"]
  170 -> 2 [style=solid label="IDENTIFIER"]
  170 -> 3 [style=solid label="INT_TYPE"]
  170 -> 4 [style=solid label="FLOAT_TYPE"]
  170 -> 5 [style=solid label="DOUBLE_TYPE"]
  170 -> 6 [style=solid label="STRING_TYPE"]
  170 -> 7 [style=solid label="BOOLEAN_TYPE"]
  170 -> 8 [style=solid label="MATRIZ_TYPE"]
  170 -> 9 [style=solid label="VOID_TYPE"]
  170 -> 10 [style=solid label="LITERAL_CHAR"]
  170 -> 11 [style=solid label="CHAR_TYPE"]
  170 -> 12 [style=solid label="LITERAL_INT"]
  170 -> 13 [style=solid label="LITERAL_FLOAT"]
  170 -> 14 [style=solid label="LITERAL_DOUBLE"]
  170 -> 15 [style=solid label="TRUE_VAL"]
  170 -> 16 [style=solid label="FALSE_VAL"]
  170 -> 17 [style=solid label="L_PARENTHESIS"]
  170 -> 18 [style=solid label="IF_STM"]
  170 -> 19 [style=solid label="FOR_STM"]
  170 -> 20 [style=solid label="DO_STM"]
  170 -> 21 [style=solid label="WHILE_STM"]
  170 -> 22 [style=solid label="SWITCH_STM"]
  170 -> 23 [style=solid label="PRINT"]
  170 -> 24 [style=solid label="PRINTF"]
  170 -> 175 [style=dashed label="stm_list"]
  170 -> 27 [style=dashed label="stm"]
  170 -> 28 [style=dashed label="decl"]
  170 -> 29 [style=dashed label="assingment"]
  170 -> 30 [style=dashed label="initialization"]
  170 -> 31 [style=dashed label="print_stm"]
  170 -> 32 [style=dashed label="expres_list"]
  170 -> 33 [style=dashed label="expr"]
  170 -> 34 [style=dashed label="cond_stm"]
  170 -> 35 [style=dashed label="if_struct"]
  170 -> 36 [style=dashed label="switch_struct"]
  170 -> 37 [style=dashed label="loop_stm"]
  170 -> 38 [style=dashed label="while_struct"]
  170 -> 39 [style=dashed label="for_struct"]
  170 -> 40 [style=dashed label="fun_struct"]
  170 -> 41 [style=dashed label="type"]
  170 -> 42 [style=dashed label="arit_expr"]
  170 -> 43 [style=dashed label="arit_expr_base"]
  170 -> 44 [style=dashed label="log_expr"]
  170 -> 45 [style=dashed label="comp_expr"]
  170 -> 46 [style=dashed label="term"]
  170 -> 47 [style=dashed label="term_num"]
  170 -> 48 [style=dashed label="log_term"]
  170 -> 49 [style=dashed label="literal_string"]
  171 [label="Estado 171\n\l 33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT . stm_list BREAK SEMICOLON R_KEY\l"]
  171 -> 1 [style=solid label="LITERAL_STRING"]
  171 -> 2 [style=solid label="IDENTIFIER"]
  171 -> 3 [style=solid label="INT_TYPE"]
  171 -> 4 [style=solid label="FLOAT_TYPE"]
  171 -> 5 [style=solid label="DOUBLE_TYPE"]
  171 -> 6 [style=solid label="STRING_TYPE"]
  171 -> 7 [style=solid label="BOOLEAN_TYPE"]
  171 -> 8 [style=solid label="MATRIZ_TYPE"]
  171 -> 9 [style=solid label="VOID_TYPE"]
  171 -> 10 [style=solid label="LITERAL_CHAR"]
  171 -> 11 [style=solid label="CHAR_TYPE"]
  171 -> 12 [style=solid label="LITERAL_INT"]
  171 -> 13 [style=solid label="LITERAL_FLOAT"]
  171 -> 14 [style=solid label="LITERAL_DOUBLE"]
  171 -> 15 [style=solid label="TRUE_VAL"]
  171 -> 16 [style=solid label="FALSE_VAL"]
  171 -> 17 [style=solid label="L_PARENTHESIS"]
  171 -> 18 [style=solid label="IF_STM"]
  171 -> 19 [style=solid label="FOR_STM"]
  171 -> 20 [style=solid label="DO_STM"]
  171 -> 21 [style=solid label="WHILE_STM"]
  171 -> 22 [style=solid label="SWITCH_STM"]
  171 -> 23 [style=solid label="PRINT"]
  171 -> 24 [style=solid label="PRINTF"]
  171 -> 176 [style=dashed label="stm_list"]
  171 -> 27 [style=dashed label="stm"]
  171 -> 28 [style=dashed label="decl"]
  171 -> 29 [style=dashed label="assingment"]
  171 -> 30 [style=dashed label="initialization"]
  171 -> 31 [style=dashed label="print_stm"]
  171 -> 32 [style=dashed label="expres_list"]
  171 -> 33 [style=dashed label="expr"]
  171 -> 34 [style=dashed label="cond_stm"]
  171 -> 35 [style=dashed label="if_struct"]
  171 -> 36 [style=dashed label="switch_struct"]
  171 -> 37 [style=dashed label="loop_stm"]
  171 -> 38 [style=dashed label="while_struct"]
  171 -> 39 [style=dashed label="for_struct"]
  171 -> 40 [style=dashed label="fun_struct"]
  171 -> 41 [style=dashed label="type"]
  171 -> 42 [style=dashed label="arit_expr"]
  171 -> 43 [style=dashed label="arit_expr_base"]
  171 -> 44 [style=dashed label="log_expr"]
  171 -> 45 [style=dashed label="comp_expr"]
  171 -> 46 [style=dashed label="term"]
  171 -> 47 [style=dashed label="term_num"]
  171 -> 48 [style=dashed label="log_term"]
  171 -> 49 [style=dashed label="literal_string"]
  172 [label="Estado 172\n\l 44 fun_struct: type IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS L_KEY stm_list R_KEY .\l"]
  172 -> "172R44" [style=solid]
 "172R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  173 [label="Estado 173\n\l 32 elseif_struct: ELSE_IF_STM L_PARENTHESIS log_expr R_PARENTHESIS . block\l"]
  173 -> 56 [style=solid label="L_KEY"]
  173 -> 177 [style=dashed label="block"]
  174 [label="Estado 174\n\l 43 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON arit_expr R_PARENTHESIS . $@2 block\l"]
  174 -> 178 [style=dashed label="$@2"]
  174 -> "174R42" [style=solid]
 "174R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  175 [label="Estado 175\n\l 36 case_switch: CASE literal_term DOUBLE_DOT stm_list . BREAK SEMICOLON\l"]
  175 -> 179 [style=solid label="BREAK"]
  176 [label="Estado 176\n\l 33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list . BREAK SEMICOLON R_KEY\l"]
  176 -> 180 [style=solid label="BREAK"]
  177 [label="Estado 177\n\l 32 elseif_struct: ELSE_IF_STM L_PARENTHESIS log_expr R_PARENTHESIS block .\l"]
  177 -> "177R32" [style=solid]
 "177R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  178 [label="Estado 178\n\l 43 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON arit_expr R_PARENTHESIS $@2 . block\l"]
  178 -> 56 [style=solid label="L_KEY"]
  178 -> 181 [style=dashed label="block"]
  179 [label="Estado 179\n\l 36 case_switch: CASE literal_term DOUBLE_DOT stm_list BREAK . SEMICOLON\l"]
  179 -> 182 [style=solid label="SEMICOLON"]
  180 [label="Estado 180\n\l 33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK . SEMICOLON R_KEY\l"]
  180 -> 183 [style=solid label="SEMICOLON"]
  181 [label="Estado 181\n\l 43 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON arit_expr R_PARENTHESIS $@2 block .\l"]
  181 -> "181R43" [style=solid]
 "181R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  182 [label="Estado 182\n\l 36 case_switch: CASE literal_term DOUBLE_DOT stm_list BREAK SEMICOLON .\l"]
  182 -> "182R36" [style=solid]
 "182R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  183 [label="Estado 183\n\l 33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON . R_KEY\l"]
  183 -> 184 [style=solid label="R_KEY"]
  184 [label="Estado 184\n\l 33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY .\l"]
  184 -> "184R33" [style=solid]
 "184R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
}
