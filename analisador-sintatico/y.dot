// Gerado por GNU Bison 3.5.1.
// Relate erros para <bug-bison@gnu.org>.
// Site: <https://www.gnu.org/software/bison/>.

digraph "parser.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="Estado 0\n\l  0 $accept: . program $end\l"]
  0 -> 1 [style=solid label="IDENTIFIER"]
  0 -> 2 [style=solid label="INT_TYPE"]
  0 -> 3 [style=solid label="FLOAT_TYPE"]
  0 -> 4 [style=solid label="DOUBLE_TYPE"]
  0 -> 5 [style=solid label="STRING_TYPE"]
  0 -> 6 [style=solid label="BOOLEAN_TYPE"]
  0 -> 7 [style=solid label="MATRIZ_TYPE"]
  0 -> 8 [style=solid label="VOID_TYPE"]
  0 -> 9 [style=solid label="CHAR_TYPE"]
  0 -> 10 [style=dashed label="program"]
  0 -> 11 [style=dashed label="decls_list"]
  0 -> 12 [style=dashed label="decls"]
  0 -> 13 [style=dashed label="decl"]
  0 -> 14 [style=dashed label="assingment"]
  0 -> 15 [style=dashed label="initialization"]
  0 -> 16 [style=dashed label="fun_struct"]
  0 -> 17 [style=dashed label="type"]
  1 [label="Estado 1\n\l  9 assingment: IDENTIFIER . ASSINGMENT expr\l"]
  1 -> 18 [style=solid label="ASSINGMENT"]
  2 [label="Estado 2\n\l 57 type: INT_TYPE .\l"]
  2 -> "2R57" [style=solid]
 "2R57" [label="R57", fillcolor=3, shape=diamond, style=filled]
  3 [label="Estado 3\n\l 58 type: FLOAT_TYPE .\l"]
  3 -> "3R58" [style=solid]
 "3R58" [label="R58", fillcolor=3, shape=diamond, style=filled]
  4 [label="Estado 4\n\l 59 type: DOUBLE_TYPE .\l"]
  4 -> "4R59" [style=solid]
 "4R59" [label="R59", fillcolor=3, shape=diamond, style=filled]
  5 [label="Estado 5\n\l 61 type: STRING_TYPE .\l"]
  5 -> "5R61" [style=solid]
 "5R61" [label="R61", fillcolor=3, shape=diamond, style=filled]
  6 [label="Estado 6\n\l 62 type: BOOLEAN_TYPE .\l"]
  6 -> "6R62" [style=solid]
 "6R62" [label="R62", fillcolor=3, shape=diamond, style=filled]
  7 [label="Estado 7\n\l 63 type: MATRIZ_TYPE .\l"]
  7 -> "7R63" [style=solid]
 "7R63" [label="R63", fillcolor=3, shape=diamond, style=filled]
  8 [label="Estado 8\n\l 56 type: VOID_TYPE .\l"]
  8 -> "8R56" [style=solid]
 "8R56" [label="R56", fillcolor=3, shape=diamond, style=filled]
  9 [label="Estado 9\n\l 60 type: CHAR_TYPE .\l"]
  9 -> "9R60" [style=solid]
 "9R60" [label="R60", fillcolor=3, shape=diamond, style=filled]
  10 [label="Estado 10\n\l  0 $accept: program . $end\l"]
  10 -> 19 [style=solid label="$end"]
  11 [label="Estado 11\n\l  1 program: decls_list .\l"]
  11 -> "11R1" [style=solid]
 "11R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  12 [label="Estado 12\n\l  2 decls_list: decls .\l  3           | decls . decls_list\l"]
  12 -> 1 [style=solid label="IDENTIFIER"]
  12 -> 2 [style=solid label="INT_TYPE"]
  12 -> 3 [style=solid label="FLOAT_TYPE"]
  12 -> 4 [style=solid label="DOUBLE_TYPE"]
  12 -> 5 [style=solid label="STRING_TYPE"]
  12 -> 6 [style=solid label="BOOLEAN_TYPE"]
  12 -> 7 [style=solid label="MATRIZ_TYPE"]
  12 -> 8 [style=solid label="VOID_TYPE"]
  12 -> 9 [style=solid label="CHAR_TYPE"]
  12 -> 20 [style=dashed label="decls_list"]
  12 -> 12 [style=dashed label="decls"]
  12 -> 13 [style=dashed label="decl"]
  12 -> 14 [style=dashed label="assingment"]
  12 -> 15 [style=dashed label="initialization"]
  12 -> 16 [style=dashed label="fun_struct"]
  12 -> 17 [style=dashed label="type"]
  12 -> "12R2" [style=solid]
 "12R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  13 [label="Estado 13\n\l  4 decls: decl . SEMICOLON\l"]
  13 -> 21 [style=solid label="SEMICOLON"]
  14 [label="Estado 14\n\l  5 decls: assingment . SEMICOLON\l"]
  14 -> 22 [style=solid label="SEMICOLON"]
  15 [label="Estado 15\n\l  6 decls: initialization . SEMICOLON\l"]
  15 -> 23 [style=solid label="SEMICOLON"]
  16 [label="Estado 16\n\l  7 decls: fun_struct .\l"]
  16 -> "16R7" [style=solid]
 "16R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  17 [label="Estado 17\n\l  8 decl: type . id_list\l 10 initialization: type . IDENTIFIER ASSINGMENT expr\l 44 fun_struct: type . IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS block\l"]
  17 -> 24 [style=solid label="IDENTIFIER"]
  17 -> 25 [style=dashed label="id_list"]
  18 [label="Estado 18\n\l  9 assingment: IDENTIFIER ASSINGMENT . expr\l"]
  18 -> 26 [style=solid label="LITERAL_STRING"]
  18 -> 27 [style=solid label="IDENTIFIER"]
  18 -> 28 [style=solid label="LITERAL_CHAR"]
  18 -> 29 [style=solid label="LITERAL_INT"]
  18 -> 30 [style=solid label="LITERAL_FLOAT"]
  18 -> 31 [style=solid label="LITERAL_DOUBLE"]
  18 -> 32 [style=solid label="TRUE_VAL"]
  18 -> 33 [style=solid label="FALSE_VAL"]
  18 -> 34 [style=solid label="L_PARENTHESIS"]
  18 -> 35 [style=dashed label="expr"]
  18 -> 36 [style=dashed label="arit_expr"]
  18 -> 37 [style=dashed label="arit_expr_base"]
  18 -> 38 [style=dashed label="log_expr"]
  18 -> 39 [style=dashed label="comp_expr"]
  18 -> 40 [style=dashed label="term"]
  18 -> 41 [style=dashed label="term_num"]
  18 -> 42 [style=dashed label="log_term"]
  18 -> 43 [style=dashed label="literal_string"]
  19 [label="Estado 19\n\l  0 $accept: program $end .\l"]
  19 -> "19R0" [style=solid]
 "19R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  20 [label="Estado 20\n\l  3 decls_list: decls decls_list .\l"]
  20 -> "20R3" [style=solid]
 "20R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  21 [label="Estado 21\n\l  4 decls: decl SEMICOLON .\l"]
  21 -> "21R4" [style=solid]
 "21R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  22 [label="Estado 22\n\l  5 decls: assingment SEMICOLON .\l"]
  22 -> "22R5" [style=solid]
 "22R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  23 [label="Estado 23\n\l  6 decls: initialization SEMICOLON .\l"]
  23 -> "23R6" [style=solid]
 "23R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  24 [label="Estado 24\n\l 10 initialization: type IDENTIFIER . ASSINGMENT expr\l 17 id_list: IDENTIFIER .\l 18        | IDENTIFIER . COMMA id_list\l 44 fun_struct: type IDENTIFIER . L_PARENTHESIS par_list R_PARENTHESIS block\l"]
  24 -> 44 [style=solid label="ASSINGMENT"]
  24 -> 45 [style=solid label="L_PARENTHESIS"]
  24 -> 46 [style=solid label="COMMA"]
  24 -> "24R17" [style=solid]
 "24R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  25 [label="Estado 25\n\l  8 decl: type id_list .\l"]
  25 -> "25R8" [style=solid]
 "25R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  26 [label="Estado 26\n\l105 literal_string: LITERAL_STRING .\l"]
  26 -> "26R105" [style=solid]
 "26R105" [label="R105", fillcolor=3, shape=diamond, style=filled]
  27 [label="Estado 27\n\l 96 term: IDENTIFIER .\l"]
  27 -> "27R96" [style=solid]
 "27R96" [label="R96", fillcolor=3, shape=diamond, style=filled]
  28 [label="Estado 28\n\l104 literal_string: LITERAL_CHAR .\l"]
  28 -> "28R104" [style=solid]
 "28R104" [label="R104", fillcolor=3, shape=diamond, style=filled]
  29 [label="Estado 29\n\l 97 term_num: LITERAL_INT .\l"]
  29 -> "29R97" [style=solid]
 "29R97" [label="R97", fillcolor=3, shape=diamond, style=filled]
  30 [label="Estado 30\n\l 98 term_num: LITERAL_FLOAT .\l"]
  30 -> "30R98" [style=solid]
 "30R98" [label="R98", fillcolor=3, shape=diamond, style=filled]
  31 [label="Estado 31\n\l 99 term_num: LITERAL_DOUBLE .\l"]
  31 -> "31R99" [style=solid]
 "31R99" [label="R99", fillcolor=3, shape=diamond, style=filled]
  32 [label="Estado 32\n\l100 log_term: TRUE_VAL .\l"]
  32 -> "32R100" [style=solid]
 "32R100" [label="R100", fillcolor=3, shape=diamond, style=filled]
  33 [label="Estado 33\n\l101 log_term: FALSE_VAL .\l"]
  33 -> "33R101" [style=solid]
 "33R101" [label="R101", fillcolor=3, shape=diamond, style=filled]
  34 [label="Estado 34\n\l 77 arit_expr_base: L_PARENTHESIS . arit_expr R_PARENTHESIS\l 79 log_expr: L_PARENTHESIS . log_expr R_PARENTHESIS\l"]
  34 -> 26 [style=solid label="LITERAL_STRING"]
  34 -> 27 [style=solid label="IDENTIFIER"]
  34 -> 28 [style=solid label="LITERAL_CHAR"]
  34 -> 29 [style=solid label="LITERAL_INT"]
  34 -> 30 [style=solid label="LITERAL_FLOAT"]
  34 -> 31 [style=solid label="LITERAL_DOUBLE"]
  34 -> 32 [style=solid label="TRUE_VAL"]
  34 -> 33 [style=solid label="FALSE_VAL"]
  34 -> 34 [style=solid label="L_PARENTHESIS"]
  34 -> 47 [style=dashed label="arit_expr"]
  34 -> 37 [style=dashed label="arit_expr_base"]
  34 -> 48 [style=dashed label="log_expr"]
  34 -> 39 [style=dashed label="comp_expr"]
  34 -> 40 [style=dashed label="term"]
  34 -> 41 [style=dashed label="term_num"]
  34 -> 42 [style=dashed label="log_term"]
  34 -> 43 [style=dashed label="literal_string"]
  35 [label="Estado 35\n\l  9 assingment: IDENTIFIER ASSINGMENT expr .\l"]
  35 -> "35R9" [style=solid]
 "35R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  36 [label="Estado 36\n\l 22 expr: arit_expr .\l 69 arit_expr: arit_expr . INC_OP\l 70          | arit_expr . DEC_OP\l 71          | arit_expr . PLUS_OP arit_expr_base\l 72          | arit_expr . SUB_OP arit_expr_base\l 73          | arit_expr . DIV_OP arit_expr_base\l 74          | arit_expr . STAR arit_expr_base\l 75          | arit_expr . MOD_OP arit_expr_base\l"]
  36 -> 49 [style=solid label="PLUS_OP"]
  36 -> 50 [style=solid label="SUB_OP"]
  36 -> 51 [style=solid label="DIV_OP"]
  36 -> 52 [style=solid label="STAR"]
  36 -> 53 [style=solid label="MOD_OP"]
  36 -> 54 [style=solid label="INC_OP"]
  36 -> 55 [style=solid label="DEC_OP"]
  36 -> "36R22" [style=solid]
 "36R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  37 [label="Estado 37\n\l 68 arit_expr: arit_expr_base .\l"]
  37 -> "37R68" [style=solid]
 "37R68" [label="R68", fillcolor=3, shape=diamond, style=filled]
  38 [label="Estado 38\n\l 21 expr: log_expr .\l 80 log_expr: log_expr . op_log comp_expr\l"]
  38 -> 56 [style=solid label="AND_OP"]
  38 -> 57 [style=solid label="OR_OP"]
  38 -> 58 [style=solid label="NOT_OP"]
  38 -> 59 [style=dashed label="op_log"]
  38 -> "38R21" [style=solid]
 "38R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  39 [label="Estado 39\n\l 78 log_expr: comp_expr .\l 82 comp_expr: comp_expr . op_comp arit_expr\l"]
  39 -> 60 [style=solid label="GE_OP"]
  39 -> 61 [style=solid label="SE_OP"]
  39 -> 62 [style=solid label="EQ_OP"]
  39 -> 63 [style=solid label="NE_OP"]
  39 -> 64 [style=solid label="G_OP"]
  39 -> 65 [style=solid label="S_OP"]
  39 -> 66 [style=dashed label="op_comp"]
  39 -> "39R78" [style=solid]
 "39R78" [label="R78", fillcolor=3, shape=diamond, style=filled]
  40 [label="Estado 40\n\l 76 arit_expr_base: term .\l 81 comp_expr: term .\l"]
  40 -> "40R76" [style=solid]
 "40R76" [label="R76", fillcolor=3, shape=diamond, style=filled]
  40 -> "40R81d" [label="[R_PARENTHESIS, SEMICOLON]", style=solid]
 "40R81d" [label="R81", fillcolor=5, shape=diamond, style=filled]
  40 -> "40R81" [label="[GE_OP, SE_OP, EQ_OP, NE_OP, G_OP, S_OP, AND_OP, OR_OP, NOT_OP]", style=solid]
 "40R81" [label="R81", fillcolor=3, shape=diamond, style=filled]
  41 [label="Estado 41\n\l 94 term: term_num .\l"]
  41 -> "41R94" [style=solid]
 "41R94" [label="R94", fillcolor=3, shape=diamond, style=filled]
  42 [label="Estado 42\n\l 95 term: log_term .\l"]
  42 -> "42R95" [style=solid]
 "42R95" [label="R95", fillcolor=3, shape=diamond, style=filled]
  43 [label="Estado 43\n\l 83 comp_expr: literal_string . EQ_OP literal_string\l 84          | literal_string . NE_OP literal_string\l"]
  43 -> 67 [style=solid label="EQ_OP"]
  43 -> 68 [style=solid label="NE_OP"]
  44 [label="Estado 44\n\l 10 initialization: type IDENTIFIER ASSINGMENT . expr\l"]
  44 -> 26 [style=solid label="LITERAL_STRING"]
  44 -> 27 [style=solid label="IDENTIFIER"]
  44 -> 28 [style=solid label="LITERAL_CHAR"]
  44 -> 29 [style=solid label="LITERAL_INT"]
  44 -> 30 [style=solid label="LITERAL_FLOAT"]
  44 -> 31 [style=solid label="LITERAL_DOUBLE"]
  44 -> 32 [style=solid label="TRUE_VAL"]
  44 -> 33 [style=solid label="FALSE_VAL"]
  44 -> 34 [style=solid label="L_PARENTHESIS"]
  44 -> 69 [style=dashed label="expr"]
  44 -> 36 [style=dashed label="arit_expr"]
  44 -> 37 [style=dashed label="arit_expr_base"]
  44 -> 38 [style=dashed label="log_expr"]
  44 -> 39 [style=dashed label="comp_expr"]
  44 -> 40 [style=dashed label="term"]
  44 -> 41 [style=dashed label="term_num"]
  44 -> 42 [style=dashed label="log_term"]
  44 -> 43 [style=dashed label="literal_string"]
  45 [label="Estado 45\n\l 44 fun_struct: type IDENTIFIER L_PARENTHESIS . par_list R_PARENTHESIS block\l"]
  45 -> 2 [style=solid label="INT_TYPE"]
  45 -> 3 [style=solid label="FLOAT_TYPE"]
  45 -> 4 [style=solid label="DOUBLE_TYPE"]
  45 -> 5 [style=solid label="STRING_TYPE"]
  45 -> 6 [style=solid label="BOOLEAN_TYPE"]
  45 -> 7 [style=solid label="MATRIZ_TYPE"]
  45 -> 8 [style=solid label="VOID_TYPE"]
  45 -> 9 [style=solid label="CHAR_TYPE"]
  45 -> 70 [style=dashed label="type"]
  45 -> 71 [style=dashed label="par_list"]
  45 -> 72 [style=dashed label="par_term"]
  45 -> "45R64" [style=solid]
 "45R64" [label="R64", fillcolor=3, shape=diamond, style=filled]
  46 [label="Estado 46\n\l 18 id_list: IDENTIFIER COMMA . id_list\l"]
  46 -> 73 [style=solid label="IDENTIFIER"]
  46 -> 74 [style=dashed label="id_list"]
  47 [label="Estado 47\n\l 69 arit_expr: arit_expr . INC_OP\l 70          | arit_expr . DEC_OP\l 71          | arit_expr . PLUS_OP arit_expr_base\l 72          | arit_expr . SUB_OP arit_expr_base\l 73          | arit_expr . DIV_OP arit_expr_base\l 74          | arit_expr . STAR arit_expr_base\l 75          | arit_expr . MOD_OP arit_expr_base\l 77 arit_expr_base: L_PARENTHESIS arit_expr . R_PARENTHESIS\l"]
  47 -> 49 [style=solid label="PLUS_OP"]
  47 -> 50 [style=solid label="SUB_OP"]
  47 -> 51 [style=solid label="DIV_OP"]
  47 -> 52 [style=solid label="STAR"]
  47 -> 53 [style=solid label="MOD_OP"]
  47 -> 54 [style=solid label="INC_OP"]
  47 -> 55 [style=solid label="DEC_OP"]
  47 -> 75 [style=solid label="R_PARENTHESIS"]
  48 [label="Estado 48\n\l 79 log_expr: L_PARENTHESIS log_expr . R_PARENTHESIS\l 80         | log_expr . op_log comp_expr\l"]
  48 -> 56 [style=solid label="AND_OP"]
  48 -> 57 [style=solid label="OR_OP"]
  48 -> 58 [style=solid label="NOT_OP"]
  48 -> 76 [style=solid label="R_PARENTHESIS"]
  48 -> 59 [style=dashed label="op_log"]
  49 [label="Estado 49\n\l 71 arit_expr: arit_expr PLUS_OP . arit_expr_base\l"]
  49 -> 27 [style=solid label="IDENTIFIER"]
  49 -> 29 [style=solid label="LITERAL_INT"]
  49 -> 30 [style=solid label="LITERAL_FLOAT"]
  49 -> 31 [style=solid label="LITERAL_DOUBLE"]
  49 -> 32 [style=solid label="TRUE_VAL"]
  49 -> 33 [style=solid label="FALSE_VAL"]
  49 -> 77 [style=solid label="L_PARENTHESIS"]
  49 -> 78 [style=dashed label="arit_expr_base"]
  49 -> 79 [style=dashed label="term"]
  49 -> 41 [style=dashed label="term_num"]
  49 -> 42 [style=dashed label="log_term"]
  50 [label="Estado 50\n\l 72 arit_expr: arit_expr SUB_OP . arit_expr_base\l"]
  50 -> 27 [style=solid label="IDENTIFIER"]
  50 -> 29 [style=solid label="LITERAL_INT"]
  50 -> 30 [style=solid label="LITERAL_FLOAT"]
  50 -> 31 [style=solid label="LITERAL_DOUBLE"]
  50 -> 32 [style=solid label="TRUE_VAL"]
  50 -> 33 [style=solid label="FALSE_VAL"]
  50 -> 77 [style=solid label="L_PARENTHESIS"]
  50 -> 80 [style=dashed label="arit_expr_base"]
  50 -> 79 [style=dashed label="term"]
  50 -> 41 [style=dashed label="term_num"]
  50 -> 42 [style=dashed label="log_term"]
  51 [label="Estado 51\n\l 73 arit_expr: arit_expr DIV_OP . arit_expr_base\l"]
  51 -> 27 [style=solid label="IDENTIFIER"]
  51 -> 29 [style=solid label="LITERAL_INT"]
  51 -> 30 [style=solid label="LITERAL_FLOAT"]
  51 -> 31 [style=solid label="LITERAL_DOUBLE"]
  51 -> 32 [style=solid label="TRUE_VAL"]
  51 -> 33 [style=solid label="FALSE_VAL"]
  51 -> 77 [style=solid label="L_PARENTHESIS"]
  51 -> 81 [style=dashed label="arit_expr_base"]
  51 -> 79 [style=dashed label="term"]
  51 -> 41 [style=dashed label="term_num"]
  51 -> 42 [style=dashed label="log_term"]
  52 [label="Estado 52\n\l 74 arit_expr: arit_expr STAR . arit_expr_base\l"]
  52 -> 27 [style=solid label="IDENTIFIER"]
  52 -> 29 [style=solid label="LITERAL_INT"]
  52 -> 30 [style=solid label="LITERAL_FLOAT"]
  52 -> 31 [style=solid label="LITERAL_DOUBLE"]
  52 -> 32 [style=solid label="TRUE_VAL"]
  52 -> 33 [style=solid label="FALSE_VAL"]
  52 -> 77 [style=solid label="L_PARENTHESIS"]
  52 -> 82 [style=dashed label="arit_expr_base"]
  52 -> 79 [style=dashed label="term"]
  52 -> 41 [style=dashed label="term_num"]
  52 -> 42 [style=dashed label="log_term"]
  53 [label="Estado 53\n\l 75 arit_expr: arit_expr MOD_OP . arit_expr_base\l"]
  53 -> 27 [style=solid label="IDENTIFIER"]
  53 -> 29 [style=solid label="LITERAL_INT"]
  53 -> 30 [style=solid label="LITERAL_FLOAT"]
  53 -> 31 [style=solid label="LITERAL_DOUBLE"]
  53 -> 32 [style=solid label="TRUE_VAL"]
  53 -> 33 [style=solid label="FALSE_VAL"]
  53 -> 77 [style=solid label="L_PARENTHESIS"]
  53 -> 83 [style=dashed label="arit_expr_base"]
  53 -> 79 [style=dashed label="term"]
  53 -> 41 [style=dashed label="term_num"]
  53 -> 42 [style=dashed label="log_term"]
  54 [label="Estado 54\n\l 69 arit_expr: arit_expr INC_OP .\l"]
  54 -> "54R69" [style=solid]
 "54R69" [label="R69", fillcolor=3, shape=diamond, style=filled]
  55 [label="Estado 55\n\l 70 arit_expr: arit_expr DEC_OP .\l"]
  55 -> "55R70" [style=solid]
 "55R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  56 [label="Estado 56\n\l 85 op_log: AND_OP .\l"]
  56 -> "56R85" [style=solid]
 "56R85" [label="R85", fillcolor=3, shape=diamond, style=filled]
  57 [label="Estado 57\n\l 86 op_log: OR_OP .\l"]
  57 -> "57R86" [style=solid]
 "57R86" [label="R86", fillcolor=3, shape=diamond, style=filled]
  58 [label="Estado 58\n\l 87 op_log: NOT_OP .\l"]
  58 -> "58R87" [style=solid]
 "58R87" [label="R87", fillcolor=3, shape=diamond, style=filled]
  59 [label="Estado 59\n\l 80 log_expr: log_expr op_log . comp_expr\l"]
  59 -> 26 [style=solid label="LITERAL_STRING"]
  59 -> 27 [style=solid label="IDENTIFIER"]
  59 -> 28 [style=solid label="LITERAL_CHAR"]
  59 -> 29 [style=solid label="LITERAL_INT"]
  59 -> 30 [style=solid label="LITERAL_FLOAT"]
  59 -> 31 [style=solid label="LITERAL_DOUBLE"]
  59 -> 32 [style=solid label="TRUE_VAL"]
  59 -> 33 [style=solid label="FALSE_VAL"]
  59 -> 84 [style=dashed label="comp_expr"]
  59 -> 85 [style=dashed label="term"]
  59 -> 41 [style=dashed label="term_num"]
  59 -> 42 [style=dashed label="log_term"]
  59 -> 43 [style=dashed label="literal_string"]
  60 [label="Estado 60\n\l 90 op_comp: GE_OP .\l"]
  60 -> "60R90" [style=solid]
 "60R90" [label="R90", fillcolor=3, shape=diamond, style=filled]
  61 [label="Estado 61\n\l 88 op_comp: SE_OP .\l"]
  61 -> "61R88" [style=solid]
 "61R88" [label="R88", fillcolor=3, shape=diamond, style=filled]
  62 [label="Estado 62\n\l 92 op_comp: EQ_OP .\l"]
  62 -> "62R92" [style=solid]
 "62R92" [label="R92", fillcolor=3, shape=diamond, style=filled]
  63 [label="Estado 63\n\l 93 op_comp: NE_OP .\l"]
  63 -> "63R93" [style=solid]
 "63R93" [label="R93", fillcolor=3, shape=diamond, style=filled]
  64 [label="Estado 64\n\l 91 op_comp: G_OP .\l"]
  64 -> "64R91" [style=solid]
 "64R91" [label="R91", fillcolor=3, shape=diamond, style=filled]
  65 [label="Estado 65\n\l 89 op_comp: S_OP .\l"]
  65 -> "65R89" [style=solid]
 "65R89" [label="R89", fillcolor=3, shape=diamond, style=filled]
  66 [label="Estado 66\n\l 82 comp_expr: comp_expr op_comp . arit_expr\l"]
  66 -> 27 [style=solid label="IDENTIFIER"]
  66 -> 29 [style=solid label="LITERAL_INT"]
  66 -> 30 [style=solid label="LITERAL_FLOAT"]
  66 -> 31 [style=solid label="LITERAL_DOUBLE"]
  66 -> 32 [style=solid label="TRUE_VAL"]
  66 -> 33 [style=solid label="FALSE_VAL"]
  66 -> 77 [style=solid label="L_PARENTHESIS"]
  66 -> 86 [style=dashed label="arit_expr"]
  66 -> 37 [style=dashed label="arit_expr_base"]
  66 -> 79 [style=dashed label="term"]
  66 -> 41 [style=dashed label="term_num"]
  66 -> 42 [style=dashed label="log_term"]
  67 [label="Estado 67\n\l 83 comp_expr: literal_string EQ_OP . literal_string\l"]
  67 -> 26 [style=solid label="LITERAL_STRING"]
  67 -> 28 [style=solid label="LITERAL_CHAR"]
  67 -> 87 [style=dashed label="literal_string"]
  68 [label="Estado 68\n\l 84 comp_expr: literal_string NE_OP . literal_string\l"]
  68 -> 26 [style=solid label="LITERAL_STRING"]
  68 -> 28 [style=solid label="LITERAL_CHAR"]
  68 -> 88 [style=dashed label="literal_string"]
  69 [label="Estado 69\n\l 10 initialization: type IDENTIFIER ASSINGMENT expr .\l"]
  69 -> "69R10" [style=solid]
 "69R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  70 [label="Estado 70\n\l 67 par_term: type . IDENTIFIER\l"]
  70 -> 89 [style=solid label="IDENTIFIER"]
  71 [label="Estado 71\n\l 44 fun_struct: type IDENTIFIER L_PARENTHESIS par_list . R_PARENTHESIS block\l"]
  71 -> 90 [style=solid label="R_PARENTHESIS"]
  72 [label="Estado 72\n\l 65 par_list: par_term .\l 66         | par_term . COMMA par_list\l"]
  72 -> 91 [style=solid label="COMMA"]
  72 -> "72R65" [style=solid]
 "72R65" [label="R65", fillcolor=3, shape=diamond, style=filled]
  73 [label="Estado 73\n\l 17 id_list: IDENTIFIER .\l 18        | IDENTIFIER . COMMA id_list\l"]
  73 -> 46 [style=solid label="COMMA"]
  73 -> "73R17" [style=solid]
 "73R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  74 [label="Estado 74\n\l 18 id_list: IDENTIFIER COMMA id_list .\l"]
  74 -> "74R18" [style=solid]
 "74R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  75 [label="Estado 75\n\l 77 arit_expr_base: L_PARENTHESIS arit_expr R_PARENTHESIS .\l"]
  75 -> "75R77" [style=solid]
 "75R77" [label="R77", fillcolor=3, shape=diamond, style=filled]
  76 [label="Estado 76\n\l 79 log_expr: L_PARENTHESIS log_expr R_PARENTHESIS .\l"]
  76 -> "76R79" [style=solid]
 "76R79" [label="R79", fillcolor=3, shape=diamond, style=filled]
  77 [label="Estado 77\n\l 77 arit_expr_base: L_PARENTHESIS . arit_expr R_PARENTHESIS\l"]
  77 -> 27 [style=solid label="IDENTIFIER"]
  77 -> 29 [style=solid label="LITERAL_INT"]
  77 -> 30 [style=solid label="LITERAL_FLOAT"]
  77 -> 31 [style=solid label="LITERAL_DOUBLE"]
  77 -> 32 [style=solid label="TRUE_VAL"]
  77 -> 33 [style=solid label="FALSE_VAL"]
  77 -> 77 [style=solid label="L_PARENTHESIS"]
  77 -> 47 [style=dashed label="arit_expr"]
  77 -> 37 [style=dashed label="arit_expr_base"]
  77 -> 79 [style=dashed label="term"]
  77 -> 41 [style=dashed label="term_num"]
  77 -> 42 [style=dashed label="log_term"]
  78 [label="Estado 78\n\l 71 arit_expr: arit_expr PLUS_OP arit_expr_base .\l"]
  78 -> "78R71" [style=solid]
 "78R71" [label="R71", fillcolor=3, shape=diamond, style=filled]
  79 [label="Estado 79\n\l 76 arit_expr_base: term .\l"]
  79 -> "79R76" [style=solid]
 "79R76" [label="R76", fillcolor=3, shape=diamond, style=filled]
  80 [label="Estado 80\n\l 72 arit_expr: arit_expr SUB_OP arit_expr_base .\l"]
  80 -> "80R72" [style=solid]
 "80R72" [label="R72", fillcolor=3, shape=diamond, style=filled]
  81 [label="Estado 81\n\l 73 arit_expr: arit_expr DIV_OP arit_expr_base .\l"]
  81 -> "81R73" [style=solid]
 "81R73" [label="R73", fillcolor=3, shape=diamond, style=filled]
  82 [label="Estado 82\n\l 74 arit_expr: arit_expr STAR arit_expr_base .\l"]
  82 -> "82R74" [style=solid]
 "82R74" [label="R74", fillcolor=3, shape=diamond, style=filled]
  83 [label="Estado 83\n\l 75 arit_expr: arit_expr MOD_OP arit_expr_base .\l"]
  83 -> "83R75" [style=solid]
 "83R75" [label="R75", fillcolor=3, shape=diamond, style=filled]
  84 [label="Estado 84\n\l 80 log_expr: log_expr op_log comp_expr .\l 82 comp_expr: comp_expr . op_comp arit_expr\l"]
  84 -> 60 [style=solid label="GE_OP"]
  84 -> 61 [style=solid label="SE_OP"]
  84 -> 62 [style=solid label="EQ_OP"]
  84 -> 63 [style=solid label="NE_OP"]
  84 -> 64 [style=solid label="G_OP"]
  84 -> 65 [style=solid label="S_OP"]
  84 -> 66 [style=dashed label="op_comp"]
  84 -> "84R80" [style=solid]
 "84R80" [label="R80", fillcolor=3, shape=diamond, style=filled]
  85 [label="Estado 85\n\l 81 comp_expr: term .\l"]
  85 -> "85R81" [style=solid]
 "85R81" [label="R81", fillcolor=3, shape=diamond, style=filled]
  86 [label="Estado 86\n\l 69 arit_expr: arit_expr . INC_OP\l 70          | arit_expr . DEC_OP\l 71          | arit_expr . PLUS_OP arit_expr_base\l 72          | arit_expr . SUB_OP arit_expr_base\l 73          | arit_expr . DIV_OP arit_expr_base\l 74          | arit_expr . STAR arit_expr_base\l 75          | arit_expr . MOD_OP arit_expr_base\l 82 comp_expr: comp_expr op_comp arit_expr .\l"]
  86 -> 49 [style=solid label="PLUS_OP"]
  86 -> 50 [style=solid label="SUB_OP"]
  86 -> 51 [style=solid label="DIV_OP"]
  86 -> 52 [style=solid label="STAR"]
  86 -> 53 [style=solid label="MOD_OP"]
  86 -> 54 [style=solid label="INC_OP"]
  86 -> 55 [style=solid label="DEC_OP"]
  86 -> "86R82" [style=solid]
 "86R82" [label="R82", fillcolor=3, shape=diamond, style=filled]
  87 [label="Estado 87\n\l 83 comp_expr: literal_string EQ_OP literal_string .\l"]
  87 -> "87R83" [style=solid]
 "87R83" [label="R83", fillcolor=3, shape=diamond, style=filled]
  88 [label="Estado 88\n\l 84 comp_expr: literal_string NE_OP literal_string .\l"]
  88 -> "88R84" [style=solid]
 "88R84" [label="R84", fillcolor=3, shape=diamond, style=filled]
  89 [label="Estado 89\n\l 67 par_term: type IDENTIFIER .\l"]
  89 -> "89R67" [style=solid]
 "89R67" [label="R67", fillcolor=3, shape=diamond, style=filled]
  90 [label="Estado 90\n\l 44 fun_struct: type IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS . block\l"]
  90 -> 92 [style=solid label="L_KEY"]
  90 -> 93 [style=dashed label="block"]
  91 [label="Estado 91\n\l 66 par_list: par_term COMMA . par_list\l"]
  91 -> 2 [style=solid label="INT_TYPE"]
  91 -> 3 [style=solid label="FLOAT_TYPE"]
  91 -> 4 [style=solid label="DOUBLE_TYPE"]
  91 -> 5 [style=solid label="STRING_TYPE"]
  91 -> 6 [style=solid label="BOOLEAN_TYPE"]
  91 -> 7 [style=solid label="MATRIZ_TYPE"]
  91 -> 8 [style=solid label="VOID_TYPE"]
  91 -> 9 [style=solid label="CHAR_TYPE"]
  91 -> 70 [style=dashed label="type"]
  91 -> 94 [style=dashed label="par_list"]
  91 -> 72 [style=dashed label="par_term"]
  91 -> "91R64" [style=solid]
 "91R64" [label="R64", fillcolor=3, shape=diamond, style=filled]
  92 [label="Estado 92\n\l 46 block: L_KEY . $@3 stm_list R_KEY\l"]
  92 -> 95 [style=dashed label="$@3"]
  92 -> "92R45" [style=solid]
 "92R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  93 [label="Estado 93\n\l 44 fun_struct: type IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS block .\l"]
  93 -> "93R44" [style=solid]
 "93R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  94 [label="Estado 94\n\l 66 par_list: par_term COMMA par_list .\l"]
  94 -> "94R66" [style=solid]
 "94R66" [label="R66", fillcolor=3, shape=diamond, style=filled]
  95 [label="Estado 95\n\l 46 block: L_KEY $@3 . stm_list R_KEY\l"]
  95 -> 26 [style=solid label="LITERAL_STRING"]
  95 -> 96 [style=solid label="IDENTIFIER"]
  95 -> 2 [style=solid label="INT_TYPE"]
  95 -> 3 [style=solid label="FLOAT_TYPE"]
  95 -> 4 [style=solid label="DOUBLE_TYPE"]
  95 -> 5 [style=solid label="STRING_TYPE"]
  95 -> 6 [style=solid label="BOOLEAN_TYPE"]
  95 -> 7 [style=solid label="MATRIZ_TYPE"]
  95 -> 8 [style=solid label="VOID_TYPE"]
  95 -> 28 [style=solid label="LITERAL_CHAR"]
  95 -> 9 [style=solid label="CHAR_TYPE"]
  95 -> 29 [style=solid label="LITERAL_INT"]
  95 -> 30 [style=solid label="LITERAL_FLOAT"]
  95 -> 31 [style=solid label="LITERAL_DOUBLE"]
  95 -> 32 [style=solid label="TRUE_VAL"]
  95 -> 33 [style=solid label="FALSE_VAL"]
  95 -> 34 [style=solid label="L_PARENTHESIS"]
  95 -> 97 [style=solid label="IF_STM"]
  95 -> 98 [style=solid label="FOR_STM"]
  95 -> 99 [style=solid label="DO_STM"]
  95 -> 100 [style=solid label="WHILE_STM"]
  95 -> 101 [style=solid label="SWITCH_STM"]
  95 -> 102 [style=solid label="PRINT"]
  95 -> 103 [style=solid label="PRINTF"]
  95 -> 104 [style=dashed label="decl"]
  95 -> 105 [style=dashed label="assingment"]
  95 -> 106 [style=dashed label="initialization"]
  95 -> 107 [style=dashed label="print_stm"]
  95 -> 108 [style=dashed label="expres_list"]
  95 -> 109 [style=dashed label="expr"]
  95 -> 110 [style=dashed label="cond_stm"]
  95 -> 111 [style=dashed label="if_struct"]
  95 -> 112 [style=dashed label="switch_struct"]
  95 -> 113 [style=dashed label="loop_stm"]
  95 -> 114 [style=dashed label="while_struct"]
  95 -> 115 [style=dashed label="for_struct"]
  95 -> 116 [style=dashed label="stm_list"]
  95 -> 117 [style=dashed label="stm"]
  95 -> 118 [style=dashed label="type"]
  95 -> 36 [style=dashed label="arit_expr"]
  95 -> 37 [style=dashed label="arit_expr_base"]
  95 -> 38 [style=dashed label="log_expr"]
  95 -> 39 [style=dashed label="comp_expr"]
  95 -> 40 [style=dashed label="term"]
  95 -> 41 [style=dashed label="term_num"]
  95 -> 42 [style=dashed label="log_term"]
  95 -> 43 [style=dashed label="literal_string"]
  96 [label="Estado 96\n\l  9 assingment: IDENTIFIER . ASSINGMENT expr\l 96 term: IDENTIFIER .\l"]
  96 -> 18 [style=solid label="ASSINGMENT"]
  96 -> "96R96" [style=solid]
 "96R96" [label="R96", fillcolor=3, shape=diamond, style=filled]
  97 [label="Estado 97\n\l 25 if_struct: IF_STM . L_PARENTHESIS log_expr R_PARENTHESIS L_KEY stm_list R_KEY else_struct\l"]
  97 -> 119 [style=solid label="L_PARENTHESIS"]
  98 [label="Estado 98\n\l 41 for_struct: FOR_STM . L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 block\l"]
  98 -> 120 [style=solid label="L_PARENTHESIS"]
  99 [label="Estado 99\n\l 38 while_struct: DO_STM . block WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS SEMICOLON\l"]
  99 -> 92 [style=solid label="L_KEY"]
  99 -> 121 [style=dashed label="block"]
  100 [label="Estado 100\n\l 37 while_struct: WHILE_STM . L_PARENTHESIS log_expr R_PARENTHESIS block\l"]
  100 -> 122 [style=solid label="L_PARENTHESIS"]
  101 [label="Estado 101\n\l 31 switch_struct: SWITCH_STM . L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY\l"]
  101 -> 123 [style=solid label="L_PARENTHESIS"]
  102 [label="Estado 102\n\l 11 print_stm: PRINT . L_PARENTHESIS literal_string R_PARENTHESIS\l 12          | PRINT . L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS\l 15          | PRINT . L_PARENTHESIS IDENTIFIER R_PARENTHESIS\l"]
  102 -> 124 [style=solid label="L_PARENTHESIS"]
  103 [label="Estado 103\n\l 13 print_stm: PRINTF . L_PARENTHESIS literal_string R_PARENTHESIS\l 14          | PRINTF . L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS\l 16          | PRINTF . L_PARENTHESIS IDENTIFIER R_PARENTHESIS\l"]
  103 -> 125 [style=solid label="L_PARENTHESIS"]
  104 [label="Estado 104\n\l 49 stm: decl . SEMICOLON\l"]
  104 -> 126 [style=solid label="SEMICOLON"]
  105 [label="Estado 105\n\l 54 stm: assingment . SEMICOLON\l"]
  105 -> 127 [style=solid label="SEMICOLON"]
  106 [label="Estado 106\n\l 55 stm: initialization . SEMICOLON\l"]
  106 -> 128 [style=solid label="SEMICOLON"]
  107 [label="Estado 107\n\l 52 stm: print_stm . SEMICOLON\l"]
  107 -> 129 [style=solid label="SEMICOLON"]
  108 [label="Estado 108\n\l 53 stm: expres_list . SEMICOLON\l"]
  108 -> 130 [style=solid label="SEMICOLON"]
  109 [label="Estado 109\n\l 19 expres_list: expr . SEMICOLON\l 20            | expr . SEMICOLON expres_list\l"]
  109 -> 131 [style=solid label="SEMICOLON"]
  110 [label="Estado 110\n\l 50 stm: cond_stm .\l"]
  110 -> "110R50" [style=solid]
 "110R50" [label="R50", fillcolor=3, shape=diamond, style=filled]
  111 [label="Estado 111\n\l 23 cond_stm: if_struct .\l"]
  111 -> "111R23" [style=solid]
 "111R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  112 [label="Estado 112\n\l 24 cond_stm: switch_struct .\l"]
  112 -> "112R24" [style=solid]
 "112R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  113 [label="Estado 113\n\l 51 stm: loop_stm .\l"]
  113 -> "113R51" [style=solid]
 "113R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  114 [label="Estado 114\n\l 35 loop_stm: while_struct .\l"]
  114 -> "114R35" [style=solid]
 "114R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  115 [label="Estado 115\n\l 36 loop_stm: for_struct .\l"]
  115 -> "115R36" [style=solid]
 "115R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  116 [label="Estado 116\n\l 46 block: L_KEY $@3 stm_list . R_KEY\l"]
  116 -> 132 [style=solid label="R_KEY"]
  117 [label="Estado 117\n\l 47 stm_list: stm .\l 48         | stm . stm_list\l"]
  117 -> 26 [style=solid label="LITERAL_STRING"]
  117 -> 96 [style=solid label="IDENTIFIER"]
  117 -> 2 [style=solid label="INT_TYPE"]
  117 -> 3 [style=solid label="FLOAT_TYPE"]
  117 -> 4 [style=solid label="DOUBLE_TYPE"]
  117 -> 5 [style=solid label="STRING_TYPE"]
  117 -> 6 [style=solid label="BOOLEAN_TYPE"]
  117 -> 7 [style=solid label="MATRIZ_TYPE"]
  117 -> 8 [style=solid label="VOID_TYPE"]
  117 -> 28 [style=solid label="LITERAL_CHAR"]
  117 -> 9 [style=solid label="CHAR_TYPE"]
  117 -> 29 [style=solid label="LITERAL_INT"]
  117 -> 30 [style=solid label="LITERAL_FLOAT"]
  117 -> 31 [style=solid label="LITERAL_DOUBLE"]
  117 -> 32 [style=solid label="TRUE_VAL"]
  117 -> 33 [style=solid label="FALSE_VAL"]
  117 -> 34 [style=solid label="L_PARENTHESIS"]
  117 -> 97 [style=solid label="IF_STM"]
  117 -> 98 [style=solid label="FOR_STM"]
  117 -> 99 [style=solid label="DO_STM"]
  117 -> 100 [style=solid label="WHILE_STM"]
  117 -> 101 [style=solid label="SWITCH_STM"]
  117 -> 102 [style=solid label="PRINT"]
  117 -> 103 [style=solid label="PRINTF"]
  117 -> 104 [style=dashed label="decl"]
  117 -> 105 [style=dashed label="assingment"]
  117 -> 106 [style=dashed label="initialization"]
  117 -> 107 [style=dashed label="print_stm"]
  117 -> 108 [style=dashed label="expres_list"]
  117 -> 109 [style=dashed label="expr"]
  117 -> 110 [style=dashed label="cond_stm"]
  117 -> 111 [style=dashed label="if_struct"]
  117 -> 112 [style=dashed label="switch_struct"]
  117 -> 113 [style=dashed label="loop_stm"]
  117 -> 114 [style=dashed label="while_struct"]
  117 -> 115 [style=dashed label="for_struct"]
  117 -> 133 [style=dashed label="stm_list"]
  117 -> 117 [style=dashed label="stm"]
  117 -> 118 [style=dashed label="type"]
  117 -> 36 [style=dashed label="arit_expr"]
  117 -> 37 [style=dashed label="arit_expr_base"]
  117 -> 38 [style=dashed label="log_expr"]
  117 -> 39 [style=dashed label="comp_expr"]
  117 -> 40 [style=dashed label="term"]
  117 -> 41 [style=dashed label="term_num"]
  117 -> 42 [style=dashed label="log_term"]
  117 -> 43 [style=dashed label="literal_string"]
  117 -> "117R47" [style=solid]
 "117R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  118 [label="Estado 118\n\l  8 decl: type . id_list\l 10 initialization: type . IDENTIFIER ASSINGMENT expr\l"]
  118 -> 134 [style=solid label="IDENTIFIER"]
  118 -> 25 [style=dashed label="id_list"]
  119 [label="Estado 119\n\l 25 if_struct: IF_STM L_PARENTHESIS . log_expr R_PARENTHESIS L_KEY stm_list R_KEY else_struct\l"]
  119 -> 26 [style=solid label="LITERAL_STRING"]
  119 -> 27 [style=solid label="IDENTIFIER"]
  119 -> 28 [style=solid label="LITERAL_CHAR"]
  119 -> 29 [style=solid label="LITERAL_INT"]
  119 -> 30 [style=solid label="LITERAL_FLOAT"]
  119 -> 31 [style=solid label="LITERAL_DOUBLE"]
  119 -> 32 [style=solid label="TRUE_VAL"]
  119 -> 33 [style=solid label="FALSE_VAL"]
  119 -> 135 [style=solid label="L_PARENTHESIS"]
  119 -> 136 [style=dashed label="log_expr"]
  119 -> 39 [style=dashed label="comp_expr"]
  119 -> 85 [style=dashed label="term"]
  119 -> 41 [style=dashed label="term_num"]
  119 -> 42 [style=dashed label="log_term"]
  119 -> 43 [style=dashed label="literal_string"]
  120 [label="Estado 120\n\l 41 for_struct: FOR_STM L_PARENTHESIS . $@1 initialization SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 block\l"]
  120 -> 137 [style=dashed label="$@1"]
  120 -> "120R39" [style=solid]
 "120R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  121 [label="Estado 121\n\l 38 while_struct: DO_STM block . WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS SEMICOLON\l"]
  121 -> 138 [style=solid label="WHILE_STM"]
  122 [label="Estado 122\n\l 37 while_struct: WHILE_STM L_PARENTHESIS . log_expr R_PARENTHESIS block\l"]
  122 -> 26 [style=solid label="LITERAL_STRING"]
  122 -> 27 [style=solid label="IDENTIFIER"]
  122 -> 28 [style=solid label="LITERAL_CHAR"]
  122 -> 29 [style=solid label="LITERAL_INT"]
  122 -> 30 [style=solid label="LITERAL_FLOAT"]
  122 -> 31 [style=solid label="LITERAL_DOUBLE"]
  122 -> 32 [style=solid label="TRUE_VAL"]
  122 -> 33 [style=solid label="FALSE_VAL"]
  122 -> 135 [style=solid label="L_PARENTHESIS"]
  122 -> 139 [style=dashed label="log_expr"]
  122 -> 39 [style=dashed label="comp_expr"]
  122 -> 85 [style=dashed label="term"]
  122 -> 41 [style=dashed label="term_num"]
  122 -> 42 [style=dashed label="log_term"]
  122 -> 43 [style=dashed label="literal_string"]
  123 [label="Estado 123\n\l 31 switch_struct: SWITCH_STM L_PARENTHESIS . literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY\l"]
  123 -> 26 [style=solid label="LITERAL_STRING"]
  123 -> 27 [style=solid label="IDENTIFIER"]
  123 -> 28 [style=solid label="LITERAL_CHAR"]
  123 -> 29 [style=solid label="LITERAL_INT"]
  123 -> 30 [style=solid label="LITERAL_FLOAT"]
  123 -> 31 [style=solid label="LITERAL_DOUBLE"]
  123 -> 32 [style=solid label="TRUE_VAL"]
  123 -> 33 [style=solid label="FALSE_VAL"]
  123 -> 140 [style=dashed label="term"]
  123 -> 41 [style=dashed label="term_num"]
  123 -> 42 [style=dashed label="log_term"]
  123 -> 141 [style=dashed label="literal_term"]
  123 -> 142 [style=dashed label="literal_string"]
  124 [label="Estado 124\n\l 11 print_stm: PRINT L_PARENTHESIS . literal_string R_PARENTHESIS\l 12          | PRINT L_PARENTHESIS . literal_string COMMA id_list R_PARENTHESIS\l 15          | PRINT L_PARENTHESIS . IDENTIFIER R_PARENTHESIS\l"]
  124 -> 26 [style=solid label="LITERAL_STRING"]
  124 -> 143 [style=solid label="IDENTIFIER"]
  124 -> 28 [style=solid label="LITERAL_CHAR"]
  124 -> 144 [style=dashed label="literal_string"]
  125 [label="Estado 125\n\l 13 print_stm: PRINTF L_PARENTHESIS . literal_string R_PARENTHESIS\l 14          | PRINTF L_PARENTHESIS . literal_string COMMA id_list R_PARENTHESIS\l 16          | PRINTF L_PARENTHESIS . IDENTIFIER R_PARENTHESIS\l"]
  125 -> 26 [style=solid label="LITERAL_STRING"]
  125 -> 145 [style=solid label="IDENTIFIER"]
  125 -> 28 [style=solid label="LITERAL_CHAR"]
  125 -> 146 [style=dashed label="literal_string"]
  126 [label="Estado 126\n\l 49 stm: decl SEMICOLON .\l"]
  126 -> "126R49" [style=solid]
 "126R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  127 [label="Estado 127\n\l 54 stm: assingment SEMICOLON .\l"]
  127 -> "127R54" [style=solid]
 "127R54" [label="R54", fillcolor=3, shape=diamond, style=filled]
  128 [label="Estado 128\n\l 55 stm: initialization SEMICOLON .\l"]
  128 -> "128R55" [style=solid]
 "128R55" [label="R55", fillcolor=3, shape=diamond, style=filled]
  129 [label="Estado 129\n\l 52 stm: print_stm SEMICOLON .\l"]
  129 -> "129R52" [style=solid]
 "129R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  130 [label="Estado 130\n\l 53 stm: expres_list SEMICOLON .\l"]
  130 -> "130R53" [style=solid]
 "130R53" [label="R53", fillcolor=3, shape=diamond, style=filled]
  131 [label="Estado 131\n\l 19 expres_list: expr SEMICOLON .\l 20            | expr SEMICOLON . expres_list\l"]
  131 -> 26 [style=solid label="LITERAL_STRING"]
  131 -> 27 [style=solid label="IDENTIFIER"]
  131 -> 28 [style=solid label="LITERAL_CHAR"]
  131 -> 29 [style=solid label="LITERAL_INT"]
  131 -> 30 [style=solid label="LITERAL_FLOAT"]
  131 -> 31 [style=solid label="LITERAL_DOUBLE"]
  131 -> 32 [style=solid label="TRUE_VAL"]
  131 -> 33 [style=solid label="FALSE_VAL"]
  131 -> 34 [style=solid label="L_PARENTHESIS"]
  131 -> 147 [style=dashed label="expres_list"]
  131 -> 109 [style=dashed label="expr"]
  131 -> 36 [style=dashed label="arit_expr"]
  131 -> 37 [style=dashed label="arit_expr_base"]
  131 -> 38 [style=dashed label="log_expr"]
  131 -> 39 [style=dashed label="comp_expr"]
  131 -> 40 [style=dashed label="term"]
  131 -> 41 [style=dashed label="term_num"]
  131 -> 42 [style=dashed label="log_term"]
  131 -> 43 [style=dashed label="literal_string"]
  131 -> "131R19" [style=solid]
 "131R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  132 [label="Estado 132\n\l 46 block: L_KEY $@3 stm_list R_KEY .\l"]
  132 -> "132R46" [style=solid]
 "132R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  133 [label="Estado 133\n\l 48 stm_list: stm stm_list .\l"]
  133 -> "133R48" [style=solid]
 "133R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  134 [label="Estado 134\n\l 10 initialization: type IDENTIFIER . ASSINGMENT expr\l 17 id_list: IDENTIFIER .\l 18        | IDENTIFIER . COMMA id_list\l"]
  134 -> 44 [style=solid label="ASSINGMENT"]
  134 -> 46 [style=solid label="COMMA"]
  134 -> "134R17" [style=solid]
 "134R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  135 [label="Estado 135\n\l 79 log_expr: L_PARENTHESIS . log_expr R_PARENTHESIS\l"]
  135 -> 26 [style=solid label="LITERAL_STRING"]
  135 -> 27 [style=solid label="IDENTIFIER"]
  135 -> 28 [style=solid label="LITERAL_CHAR"]
  135 -> 29 [style=solid label="LITERAL_INT"]
  135 -> 30 [style=solid label="LITERAL_FLOAT"]
  135 -> 31 [style=solid label="LITERAL_DOUBLE"]
  135 -> 32 [style=solid label="TRUE_VAL"]
  135 -> 33 [style=solid label="FALSE_VAL"]
  135 -> 135 [style=solid label="L_PARENTHESIS"]
  135 -> 48 [style=dashed label="log_expr"]
  135 -> 39 [style=dashed label="comp_expr"]
  135 -> 85 [style=dashed label="term"]
  135 -> 41 [style=dashed label="term_num"]
  135 -> 42 [style=dashed label="log_term"]
  135 -> 43 [style=dashed label="literal_string"]
  136 [label="Estado 136\n\l 25 if_struct: IF_STM L_PARENTHESIS log_expr . R_PARENTHESIS L_KEY stm_list R_KEY else_struct\l 80 log_expr: log_expr . op_log comp_expr\l"]
  136 -> 56 [style=solid label="AND_OP"]
  136 -> 57 [style=solid label="OR_OP"]
  136 -> 58 [style=solid label="NOT_OP"]
  136 -> 148 [style=solid label="R_PARENTHESIS"]
  136 -> 59 [style=dashed label="op_log"]
  137 [label="Estado 137\n\l 41 for_struct: FOR_STM L_PARENTHESIS $@1 . initialization SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 block\l"]
  137 -> 2 [style=solid label="INT_TYPE"]
  137 -> 3 [style=solid label="FLOAT_TYPE"]
  137 -> 4 [style=solid label="DOUBLE_TYPE"]
  137 -> 5 [style=solid label="STRING_TYPE"]
  137 -> 6 [style=solid label="BOOLEAN_TYPE"]
  137 -> 7 [style=solid label="MATRIZ_TYPE"]
  137 -> 8 [style=solid label="VOID_TYPE"]
  137 -> 9 [style=solid label="CHAR_TYPE"]
  137 -> 149 [style=dashed label="initialization"]
  137 -> 150 [style=dashed label="type"]
  138 [label="Estado 138\n\l 38 while_struct: DO_STM block WHILE_STM . L_PARENTHESIS log_expr R_PARENTHESIS SEMICOLON\l"]
  138 -> 151 [style=solid label="L_PARENTHESIS"]
  139 [label="Estado 139\n\l 37 while_struct: WHILE_STM L_PARENTHESIS log_expr . R_PARENTHESIS block\l 80 log_expr: log_expr . op_log comp_expr\l"]
  139 -> 56 [style=solid label="AND_OP"]
  139 -> 57 [style=solid label="OR_OP"]
  139 -> 58 [style=solid label="NOT_OP"]
  139 -> 152 [style=solid label="R_PARENTHESIS"]
  139 -> 59 [style=dashed label="op_log"]
  140 [label="Estado 140\n\l102 literal_term: term .\l"]
  140 -> "140R102" [style=solid]
 "140R102" [label="R102", fillcolor=3, shape=diamond, style=filled]
  141 [label="Estado 141\n\l 31 switch_struct: SWITCH_STM L_PARENTHESIS literal_term . R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY\l"]
  141 -> 153 [style=solid label="R_PARENTHESIS"]
  142 [label="Estado 142\n\l103 literal_term: literal_string .\l"]
  142 -> "142R103" [style=solid]
 "142R103" [label="R103", fillcolor=3, shape=diamond, style=filled]
  143 [label="Estado 143\n\l 15 print_stm: PRINT L_PARENTHESIS IDENTIFIER . R_PARENTHESIS\l"]
  143 -> 154 [style=solid label="R_PARENTHESIS"]
  144 [label="Estado 144\n\l 11 print_stm: PRINT L_PARENTHESIS literal_string . R_PARENTHESIS\l 12          | PRINT L_PARENTHESIS literal_string . COMMA id_list R_PARENTHESIS\l"]
  144 -> 155 [style=solid label="R_PARENTHESIS"]
  144 -> 156 [style=solid label="COMMA"]
  145 [label="Estado 145\n\l 16 print_stm: PRINTF L_PARENTHESIS IDENTIFIER . R_PARENTHESIS\l"]
  145 -> 157 [style=solid label="R_PARENTHESIS"]
  146 [label="Estado 146\n\l 13 print_stm: PRINTF L_PARENTHESIS literal_string . R_PARENTHESIS\l 14          | PRINTF L_PARENTHESIS literal_string . COMMA id_list R_PARENTHESIS\l"]
  146 -> 158 [style=solid label="R_PARENTHESIS"]
  146 -> 159 [style=solid label="COMMA"]
  147 [label="Estado 147\n\l 20 expres_list: expr SEMICOLON expres_list .\l"]
  147 -> "147R20" [style=solid]
 "147R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  148 [label="Estado 148\n\l 25 if_struct: IF_STM L_PARENTHESIS log_expr R_PARENTHESIS . L_KEY stm_list R_KEY else_struct\l"]
  148 -> 160 [style=solid label="L_KEY"]
  149 [label="Estado 149\n\l 41 for_struct: FOR_STM L_PARENTHESIS $@1 initialization . SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 block\l"]
  149 -> 161 [style=solid label="SEMICOLON"]
  150 [label="Estado 150\n\l 10 initialization: type . IDENTIFIER ASSINGMENT expr\l"]
  150 -> 162 [style=solid label="IDENTIFIER"]
  151 [label="Estado 151\n\l 38 while_struct: DO_STM block WHILE_STM L_PARENTHESIS . log_expr R_PARENTHESIS SEMICOLON\l"]
  151 -> 26 [style=solid label="LITERAL_STRING"]
  151 -> 27 [style=solid label="IDENTIFIER"]
  151 -> 28 [style=solid label="LITERAL_CHAR"]
  151 -> 29 [style=solid label="LITERAL_INT"]
  151 -> 30 [style=solid label="LITERAL_FLOAT"]
  151 -> 31 [style=solid label="LITERAL_DOUBLE"]
  151 -> 32 [style=solid label="TRUE_VAL"]
  151 -> 33 [style=solid label="FALSE_VAL"]
  151 -> 135 [style=solid label="L_PARENTHESIS"]
  151 -> 163 [style=dashed label="log_expr"]
  151 -> 39 [style=dashed label="comp_expr"]
  151 -> 85 [style=dashed label="term"]
  151 -> 41 [style=dashed label="term_num"]
  151 -> 42 [style=dashed label="log_term"]
  151 -> 43 [style=dashed label="literal_string"]
  152 [label="Estado 152\n\l 37 while_struct: WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS . block\l"]
  152 -> 92 [style=solid label="L_KEY"]
  152 -> 164 [style=dashed label="block"]
  153 [label="Estado 153\n\l 31 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS . L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY\l"]
  153 -> 165 [style=solid label="L_KEY"]
  154 [label="Estado 154\n\l 15 print_stm: PRINT L_PARENTHESIS IDENTIFIER R_PARENTHESIS .\l"]
  154 -> "154R15" [style=solid]
 "154R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  155 [label="Estado 155\n\l 11 print_stm: PRINT L_PARENTHESIS literal_string R_PARENTHESIS .\l"]
  155 -> "155R11" [style=solid]
 "155R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  156 [label="Estado 156\n\l 12 print_stm: PRINT L_PARENTHESIS literal_string COMMA . id_list R_PARENTHESIS\l"]
  156 -> 73 [style=solid label="IDENTIFIER"]
  156 -> 166 [style=dashed label="id_list"]
  157 [label="Estado 157\n\l 16 print_stm: PRINTF L_PARENTHESIS IDENTIFIER R_PARENTHESIS .\l"]
  157 -> "157R16" [style=solid]
 "157R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  158 [label="Estado 158\n\l 13 print_stm: PRINTF L_PARENTHESIS literal_string R_PARENTHESIS .\l"]
  158 -> "158R13" [style=solid]
 "158R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  159 [label="Estado 159\n\l 14 print_stm: PRINTF L_PARENTHESIS literal_string COMMA . id_list R_PARENTHESIS\l"]
  159 -> 73 [style=solid label="IDENTIFIER"]
  159 -> 167 [style=dashed label="id_list"]
  160 [label="Estado 160\n\l 25 if_struct: IF_STM L_PARENTHESIS log_expr R_PARENTHESIS L_KEY . stm_list R_KEY else_struct\l"]
  160 -> 26 [style=solid label="LITERAL_STRING"]
  160 -> 96 [style=solid label="IDENTIFIER"]
  160 -> 2 [style=solid label="INT_TYPE"]
  160 -> 3 [style=solid label="FLOAT_TYPE"]
  160 -> 4 [style=solid label="DOUBLE_TYPE"]
  160 -> 5 [style=solid label="STRING_TYPE"]
  160 -> 6 [style=solid label="BOOLEAN_TYPE"]
  160 -> 7 [style=solid label="MATRIZ_TYPE"]
  160 -> 8 [style=solid label="VOID_TYPE"]
  160 -> 28 [style=solid label="LITERAL_CHAR"]
  160 -> 9 [style=solid label="CHAR_TYPE"]
  160 -> 29 [style=solid label="LITERAL_INT"]
  160 -> 30 [style=solid label="LITERAL_FLOAT"]
  160 -> 31 [style=solid label="LITERAL_DOUBLE"]
  160 -> 32 [style=solid label="TRUE_VAL"]
  160 -> 33 [style=solid label="FALSE_VAL"]
  160 -> 34 [style=solid label="L_PARENTHESIS"]
  160 -> 97 [style=solid label="IF_STM"]
  160 -> 98 [style=solid label="FOR_STM"]
  160 -> 99 [style=solid label="DO_STM"]
  160 -> 100 [style=solid label="WHILE_STM"]
  160 -> 101 [style=solid label="SWITCH_STM"]
  160 -> 102 [style=solid label="PRINT"]
  160 -> 103 [style=solid label="PRINTF"]
  160 -> 104 [style=dashed label="decl"]
  160 -> 105 [style=dashed label="assingment"]
  160 -> 106 [style=dashed label="initialization"]
  160 -> 107 [style=dashed label="print_stm"]
  160 -> 108 [style=dashed label="expres_list"]
  160 -> 109 [style=dashed label="expr"]
  160 -> 110 [style=dashed label="cond_stm"]
  160 -> 111 [style=dashed label="if_struct"]
  160 -> 112 [style=dashed label="switch_struct"]
  160 -> 113 [style=dashed label="loop_stm"]
  160 -> 114 [style=dashed label="while_struct"]
  160 -> 115 [style=dashed label="for_struct"]
  160 -> 168 [style=dashed label="stm_list"]
  160 -> 117 [style=dashed label="stm"]
  160 -> 118 [style=dashed label="type"]
  160 -> 36 [style=dashed label="arit_expr"]
  160 -> 37 [style=dashed label="arit_expr_base"]
  160 -> 38 [style=dashed label="log_expr"]
  160 -> 39 [style=dashed label="comp_expr"]
  160 -> 40 [style=dashed label="term"]
  160 -> 41 [style=dashed label="term_num"]
  160 -> 42 [style=dashed label="log_term"]
  160 -> 43 [style=dashed label="literal_string"]
  161 [label="Estado 161\n\l 41 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON . log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 block\l"]
  161 -> 26 [style=solid label="LITERAL_STRING"]
  161 -> 27 [style=solid label="IDENTIFIER"]
  161 -> 28 [style=solid label="LITERAL_CHAR"]
  161 -> 29 [style=solid label="LITERAL_INT"]
  161 -> 30 [style=solid label="LITERAL_FLOAT"]
  161 -> 31 [style=solid label="LITERAL_DOUBLE"]
  161 -> 32 [style=solid label="TRUE_VAL"]
  161 -> 33 [style=solid label="FALSE_VAL"]
  161 -> 135 [style=solid label="L_PARENTHESIS"]
  161 -> 169 [style=dashed label="log_expr"]
  161 -> 39 [style=dashed label="comp_expr"]
  161 -> 85 [style=dashed label="term"]
  161 -> 41 [style=dashed label="term_num"]
  161 -> 42 [style=dashed label="log_term"]
  161 -> 43 [style=dashed label="literal_string"]
  162 [label="Estado 162\n\l 10 initialization: type IDENTIFIER . ASSINGMENT expr\l"]
  162 -> 44 [style=solid label="ASSINGMENT"]
  163 [label="Estado 163\n\l 38 while_struct: DO_STM block WHILE_STM L_PARENTHESIS log_expr . R_PARENTHESIS SEMICOLON\l 80 log_expr: log_expr . op_log comp_expr\l"]
  163 -> 56 [style=solid label="AND_OP"]
  163 -> 57 [style=solid label="OR_OP"]
  163 -> 58 [style=solid label="NOT_OP"]
  163 -> 170 [style=solid label="R_PARENTHESIS"]
  163 -> 59 [style=dashed label="op_log"]
  164 [label="Estado 164\n\l 37 while_struct: WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS block .\l"]
  164 -> "164R37" [style=solid]
 "164R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  165 [label="Estado 165\n\l 31 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY . case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY\l"]
  165 -> 171 [style=solid label="CASE"]
  165 -> 172 [style=dashed label="case_list_switch"]
  165 -> 173 [style=dashed label="case_switch"]
  165 -> "165R32" [style=solid]
 "165R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  166 [label="Estado 166\n\l 12 print_stm: PRINT L_PARENTHESIS literal_string COMMA id_list . R_PARENTHESIS\l"]
  166 -> 174 [style=solid label="R_PARENTHESIS"]
  167 [label="Estado 167\n\l 14 print_stm: PRINTF L_PARENTHESIS literal_string COMMA id_list . R_PARENTHESIS\l"]
  167 -> 175 [style=solid label="R_PARENTHESIS"]
  168 [label="Estado 168\n\l 25 if_struct: IF_STM L_PARENTHESIS log_expr R_PARENTHESIS L_KEY stm_list . R_KEY else_struct\l"]
  168 -> 176 [style=solid label="R_KEY"]
  169 [label="Estado 169\n\l 41 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr . SEMICOLON for_struct_stm R_PARENTHESIS $@2 block\l 80 log_expr: log_expr . op_log comp_expr\l"]
  169 -> 56 [style=solid label="AND_OP"]
  169 -> 57 [style=solid label="OR_OP"]
  169 -> 58 [style=solid label="NOT_OP"]
  169 -> 177 [style=solid label="SEMICOLON"]
  169 -> 59 [style=dashed label="op_log"]
  170 [label="Estado 170\n\l 38 while_struct: DO_STM block WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS . SEMICOLON\l"]
  170 -> 178 [style=solid label="SEMICOLON"]
  171 [label="Estado 171\n\l 34 case_switch: CASE . literal_term DOUBLE_DOT stm_list BREAK SEMICOLON\l"]
  171 -> 26 [style=solid label="LITERAL_STRING"]
  171 -> 27 [style=solid label="IDENTIFIER"]
  171 -> 28 [style=solid label="LITERAL_CHAR"]
  171 -> 29 [style=solid label="LITERAL_INT"]
  171 -> 30 [style=solid label="LITERAL_FLOAT"]
  171 -> 31 [style=solid label="LITERAL_DOUBLE"]
  171 -> 32 [style=solid label="TRUE_VAL"]
  171 -> 33 [style=solid label="FALSE_VAL"]
  171 -> 140 [style=dashed label="term"]
  171 -> 41 [style=dashed label="term_num"]
  171 -> 42 [style=dashed label="log_term"]
  171 -> 179 [style=dashed label="literal_term"]
  171 -> 142 [style=dashed label="literal_string"]
  172 [label="Estado 172\n\l 31 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch . DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY\l"]
  172 -> 180 [style=solid label="DEFAULT"]
  173 [label="Estado 173\n\l 33 case_list_switch: case_switch . case_list_switch\l"]
  173 -> 171 [style=solid label="CASE"]
  173 -> 181 [style=dashed label="case_list_switch"]
  173 -> 173 [style=dashed label="case_switch"]
  173 -> "173R32" [style=solid]
 "173R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  174 [label="Estado 174\n\l 12 print_stm: PRINT L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS .\l"]
  174 -> "174R12" [style=solid]
 "174R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  175 [label="Estado 175\n\l 14 print_stm: PRINTF L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS .\l"]
  175 -> "175R14" [style=solid]
 "175R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  176 [label="Estado 176\n\l 25 if_struct: IF_STM L_PARENTHESIS log_expr R_PARENTHESIS L_KEY stm_list R_KEY . else_struct\l"]
  176 -> 182 [style=solid label="ELSE_IF_STM"]
  176 -> 183 [style=dashed label="else_struct"]
  176 -> 184 [style=dashed label="elseif_list"]
  176 -> 185 [style=dashed label="elseif_struct"]
  176 -> "176R26" [style=solid]
 "176R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  176 -> "176R28" [label="[ELSE_STM]", style=solid]
 "176R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  177 [label="Estado 177\n\l 41 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON . for_struct_stm R_PARENTHESIS $@2 block\l"]
  177 -> 96 [style=solid label="IDENTIFIER"]
  177 -> 29 [style=solid label="LITERAL_INT"]
  177 -> 30 [style=solid label="LITERAL_FLOAT"]
  177 -> 31 [style=solid label="LITERAL_DOUBLE"]
  177 -> 32 [style=solid label="TRUE_VAL"]
  177 -> 33 [style=solid label="FALSE_VAL"]
  177 -> 77 [style=solid label="L_PARENTHESIS"]
  177 -> 186 [style=dashed label="assingment"]
  177 -> 187 [style=dashed label="for_struct_stm"]
  177 -> 188 [style=dashed label="arit_expr"]
  177 -> 37 [style=dashed label="arit_expr_base"]
  177 -> 79 [style=dashed label="term"]
  177 -> 41 [style=dashed label="term_num"]
  177 -> 42 [style=dashed label="log_term"]
  178 [label="Estado 178\n\l 38 while_struct: DO_STM block WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS SEMICOLON .\l"]
  178 -> "178R38" [style=solid]
 "178R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  179 [label="Estado 179\n\l 34 case_switch: CASE literal_term . DOUBLE_DOT stm_list BREAK SEMICOLON\l"]
  179 -> 189 [style=solid label="DOUBLE_DOT"]
  180 [label="Estado 180\n\l 31 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT . DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY\l"]
  180 -> 190 [style=solid label="DOUBLE_DOT"]
  181 [label="Estado 181\n\l 33 case_list_switch: case_switch case_list_switch .\l"]
  181 -> "181R33" [style=solid]
 "181R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  182 [label="Estado 182\n\l 30 elseif_struct: ELSE_IF_STM . L_PARENTHESIS log_expr R_PARENTHESIS L_KEY stm_list R_KEY\l"]
  182 -> 191 [style=solid label="L_PARENTHESIS"]
  183 [label="Estado 183\n\l 25 if_struct: IF_STM L_PARENTHESIS log_expr R_PARENTHESIS L_KEY stm_list R_KEY else_struct .\l"]
  183 -> "183R25" [style=solid]
 "183R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  184 [label="Estado 184\n\l 27 else_struct: elseif_list . ELSE_STM L_KEY stm_list R_KEY\l"]
  184 -> 192 [style=solid label="ELSE_STM"]
  185 [label="Estado 185\n\l 29 elseif_list: elseif_struct . elseif_list\l"]
  185 -> 182 [style=solid label="ELSE_IF_STM"]
  185 -> 193 [style=dashed label="elseif_list"]
  185 -> 185 [style=dashed label="elseif_struct"]
  185 -> "185R28" [style=solid]
 "185R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  186 [label="Estado 186\n\l 43 for_struct_stm: assingment .\l"]
  186 -> "186R43" [style=solid]
 "186R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  187 [label="Estado 187\n\l 41 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON for_struct_stm . R_PARENTHESIS $@2 block\l"]
  187 -> 194 [style=solid label="R_PARENTHESIS"]
  188 [label="Estado 188\n\l 42 for_struct_stm: arit_expr .\l 69 arit_expr: arit_expr . INC_OP\l 70          | arit_expr . DEC_OP\l 71          | arit_expr . PLUS_OP arit_expr_base\l 72          | arit_expr . SUB_OP arit_expr_base\l 73          | arit_expr . DIV_OP arit_expr_base\l 74          | arit_expr . STAR arit_expr_base\l 75          | arit_expr . MOD_OP arit_expr_base\l"]
  188 -> 49 [style=solid label="PLUS_OP"]
  188 -> 50 [style=solid label="SUB_OP"]
  188 -> 51 [style=solid label="DIV_OP"]
  188 -> 52 [style=solid label="STAR"]
  188 -> 53 [style=solid label="MOD_OP"]
  188 -> 54 [style=solid label="INC_OP"]
  188 -> 55 [style=solid label="DEC_OP"]
  188 -> "188R42" [style=solid]
 "188R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  189 [label="Estado 189\n\l 34 case_switch: CASE literal_term DOUBLE_DOT . stm_list BREAK SEMICOLON\l"]
  189 -> 26 [style=solid label="LITERAL_STRING"]
  189 -> 96 [style=solid label="IDENTIFIER"]
  189 -> 2 [style=solid label="INT_TYPE"]
  189 -> 3 [style=solid label="FLOAT_TYPE"]
  189 -> 4 [style=solid label="DOUBLE_TYPE"]
  189 -> 5 [style=solid label="STRING_TYPE"]
  189 -> 6 [style=solid label="BOOLEAN_TYPE"]
  189 -> 7 [style=solid label="MATRIZ_TYPE"]
  189 -> 8 [style=solid label="VOID_TYPE"]
  189 -> 28 [style=solid label="LITERAL_CHAR"]
  189 -> 9 [style=solid label="CHAR_TYPE"]
  189 -> 29 [style=solid label="LITERAL_INT"]
  189 -> 30 [style=solid label="LITERAL_FLOAT"]
  189 -> 31 [style=solid label="LITERAL_DOUBLE"]
  189 -> 32 [style=solid label="TRUE_VAL"]
  189 -> 33 [style=solid label="FALSE_VAL"]
  189 -> 34 [style=solid label="L_PARENTHESIS"]
  189 -> 97 [style=solid label="IF_STM"]
  189 -> 98 [style=solid label="FOR_STM"]
  189 -> 99 [style=solid label="DO_STM"]
  189 -> 100 [style=solid label="WHILE_STM"]
  189 -> 101 [style=solid label="SWITCH_STM"]
  189 -> 102 [style=solid label="PRINT"]
  189 -> 103 [style=solid label="PRINTF"]
  189 -> 104 [style=dashed label="decl"]
  189 -> 105 [style=dashed label="assingment"]
  189 -> 106 [style=dashed label="initialization"]
  189 -> 107 [style=dashed label="print_stm"]
  189 -> 108 [style=dashed label="expres_list"]
  189 -> 109 [style=dashed label="expr"]
  189 -> 110 [style=dashed label="cond_stm"]
  189 -> 111 [style=dashed label="if_struct"]
  189 -> 112 [style=dashed label="switch_struct"]
  189 -> 113 [style=dashed label="loop_stm"]
  189 -> 114 [style=dashed label="while_struct"]
  189 -> 115 [style=dashed label="for_struct"]
  189 -> 195 [style=dashed label="stm_list"]
  189 -> 117 [style=dashed label="stm"]
  189 -> 118 [style=dashed label="type"]
  189 -> 36 [style=dashed label="arit_expr"]
  189 -> 37 [style=dashed label="arit_expr_base"]
  189 -> 38 [style=dashed label="log_expr"]
  189 -> 39 [style=dashed label="comp_expr"]
  189 -> 40 [style=dashed label="term"]
  189 -> 41 [style=dashed label="term_num"]
  189 -> 42 [style=dashed label="log_term"]
  189 -> 43 [style=dashed label="literal_string"]
  190 [label="Estado 190\n\l 31 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT . stm_list BREAK SEMICOLON R_KEY\l"]
  190 -> 26 [style=solid label="LITERAL_STRING"]
  190 -> 96 [style=solid label="IDENTIFIER"]
  190 -> 2 [style=solid label="INT_TYPE"]
  190 -> 3 [style=solid label="FLOAT_TYPE"]
  190 -> 4 [style=solid label="DOUBLE_TYPE"]
  190 -> 5 [style=solid label="STRING_TYPE"]
  190 -> 6 [style=solid label="BOOLEAN_TYPE"]
  190 -> 7 [style=solid label="MATRIZ_TYPE"]
  190 -> 8 [style=solid label="VOID_TYPE"]
  190 -> 28 [style=solid label="LITERAL_CHAR"]
  190 -> 9 [style=solid label="CHAR_TYPE"]
  190 -> 29 [style=solid label="LITERAL_INT"]
  190 -> 30 [style=solid label="LITERAL_FLOAT"]
  190 -> 31 [style=solid label="LITERAL_DOUBLE"]
  190 -> 32 [style=solid label="TRUE_VAL"]
  190 -> 33 [style=solid label="FALSE_VAL"]
  190 -> 34 [style=solid label="L_PARENTHESIS"]
  190 -> 97 [style=solid label="IF_STM"]
  190 -> 98 [style=solid label="FOR_STM"]
  190 -> 99 [style=solid label="DO_STM"]
  190 -> 100 [style=solid label="WHILE_STM"]
  190 -> 101 [style=solid label="SWITCH_STM"]
  190 -> 102 [style=solid label="PRINT"]
  190 -> 103 [style=solid label="PRINTF"]
  190 -> 104 [style=dashed label="decl"]
  190 -> 105 [style=dashed label="assingment"]
  190 -> 106 [style=dashed label="initialization"]
  190 -> 107 [style=dashed label="print_stm"]
  190 -> 108 [style=dashed label="expres_list"]
  190 -> 109 [style=dashed label="expr"]
  190 -> 110 [style=dashed label="cond_stm"]
  190 -> 111 [style=dashed label="if_struct"]
  190 -> 112 [style=dashed label="switch_struct"]
  190 -> 113 [style=dashed label="loop_stm"]
  190 -> 114 [style=dashed label="while_struct"]
  190 -> 115 [style=dashed label="for_struct"]
  190 -> 196 [style=dashed label="stm_list"]
  190 -> 117 [style=dashed label="stm"]
  190 -> 118 [style=dashed label="type"]
  190 -> 36 [style=dashed label="arit_expr"]
  190 -> 37 [style=dashed label="arit_expr_base"]
  190 -> 38 [style=dashed label="log_expr"]
  190 -> 39 [style=dashed label="comp_expr"]
  190 -> 40 [style=dashed label="term"]
  190 -> 41 [style=dashed label="term_num"]
  190 -> 42 [style=dashed label="log_term"]
  190 -> 43 [style=dashed label="literal_string"]
  191 [label="Estado 191\n\l 30 elseif_struct: ELSE_IF_STM L_PARENTHESIS . log_expr R_PARENTHESIS L_KEY stm_list R_KEY\l"]
  191 -> 26 [style=solid label="LITERAL_STRING"]
  191 -> 27 [style=solid label="IDENTIFIER"]
  191 -> 28 [style=solid label="LITERAL_CHAR"]
  191 -> 29 [style=solid label="LITERAL_INT"]
  191 -> 30 [style=solid label="LITERAL_FLOAT"]
  191 -> 31 [style=solid label="LITERAL_DOUBLE"]
  191 -> 32 [style=solid label="TRUE_VAL"]
  191 -> 33 [style=solid label="FALSE_VAL"]
  191 -> 135 [style=solid label="L_PARENTHESIS"]
  191 -> 197 [style=dashed label="log_expr"]
  191 -> 39 [style=dashed label="comp_expr"]
  191 -> 85 [style=dashed label="term"]
  191 -> 41 [style=dashed label="term_num"]
  191 -> 42 [style=dashed label="log_term"]
  191 -> 43 [style=dashed label="literal_string"]
  192 [label="Estado 192\n\l 27 else_struct: elseif_list ELSE_STM . L_KEY stm_list R_KEY\l"]
  192 -> 198 [style=solid label="L_KEY"]
  193 [label="Estado 193\n\l 29 elseif_list: elseif_struct elseif_list .\l"]
  193 -> "193R29" [style=solid]
 "193R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  194 [label="Estado 194\n\l 41 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS . $@2 block\l"]
  194 -> 199 [style=dashed label="$@2"]
  194 -> "194R40" [style=solid]
 "194R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  195 [label="Estado 195\n\l 34 case_switch: CASE literal_term DOUBLE_DOT stm_list . BREAK SEMICOLON\l"]
  195 -> 200 [style=solid label="BREAK"]
  196 [label="Estado 196\n\l 31 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list . BREAK SEMICOLON R_KEY\l"]
  196 -> 201 [style=solid label="BREAK"]
  197 [label="Estado 197\n\l 30 elseif_struct: ELSE_IF_STM L_PARENTHESIS log_expr . R_PARENTHESIS L_KEY stm_list R_KEY\l 80 log_expr: log_expr . op_log comp_expr\l"]
  197 -> 56 [style=solid label="AND_OP"]
  197 -> 57 [style=solid label="OR_OP"]
  197 -> 58 [style=solid label="NOT_OP"]
  197 -> 202 [style=solid label="R_PARENTHESIS"]
  197 -> 59 [style=dashed label="op_log"]
  198 [label="Estado 198\n\l 27 else_struct: elseif_list ELSE_STM L_KEY . stm_list R_KEY\l"]
  198 -> 26 [style=solid label="LITERAL_STRING"]
  198 -> 96 [style=solid label="IDENTIFIER"]
  198 -> 2 [style=solid label="INT_TYPE"]
  198 -> 3 [style=solid label="FLOAT_TYPE"]
  198 -> 4 [style=solid label="DOUBLE_TYPE"]
  198 -> 5 [style=solid label="STRING_TYPE"]
  198 -> 6 [style=solid label="BOOLEAN_TYPE"]
  198 -> 7 [style=solid label="MATRIZ_TYPE"]
  198 -> 8 [style=solid label="VOID_TYPE"]
  198 -> 28 [style=solid label="LITERAL_CHAR"]
  198 -> 9 [style=solid label="CHAR_TYPE"]
  198 -> 29 [style=solid label="LITERAL_INT"]
  198 -> 30 [style=solid label="LITERAL_FLOAT"]
  198 -> 31 [style=solid label="LITERAL_DOUBLE"]
  198 -> 32 [style=solid label="TRUE_VAL"]
  198 -> 33 [style=solid label="FALSE_VAL"]
  198 -> 34 [style=solid label="L_PARENTHESIS"]
  198 -> 97 [style=solid label="IF_STM"]
  198 -> 98 [style=solid label="FOR_STM"]
  198 -> 99 [style=solid label="DO_STM"]
  198 -> 100 [style=solid label="WHILE_STM"]
  198 -> 101 [style=solid label="SWITCH_STM"]
  198 -> 102 [style=solid label="PRINT"]
  198 -> 103 [style=solid label="PRINTF"]
  198 -> 104 [style=dashed label="decl"]
  198 -> 105 [style=dashed label="assingment"]
  198 -> 106 [style=dashed label="initialization"]
  198 -> 107 [style=dashed label="print_stm"]
  198 -> 108 [style=dashed label="expres_list"]
  198 -> 109 [style=dashed label="expr"]
  198 -> 110 [style=dashed label="cond_stm"]
  198 -> 111 [style=dashed label="if_struct"]
  198 -> 112 [style=dashed label="switch_struct"]
  198 -> 113 [style=dashed label="loop_stm"]
  198 -> 114 [style=dashed label="while_struct"]
  198 -> 115 [style=dashed label="for_struct"]
  198 -> 203 [style=dashed label="stm_list"]
  198 -> 117 [style=dashed label="stm"]
  198 -> 118 [style=dashed label="type"]
  198 -> 36 [style=dashed label="arit_expr"]
  198 -> 37 [style=dashed label="arit_expr_base"]
  198 -> 38 [style=dashed label="log_expr"]
  198 -> 39 [style=dashed label="comp_expr"]
  198 -> 40 [style=dashed label="term"]
  198 -> 41 [style=dashed label="term_num"]
  198 -> 42 [style=dashed label="log_term"]
  198 -> 43 [style=dashed label="literal_string"]
  199 [label="Estado 199\n\l 41 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 . block\l"]
  199 -> 92 [style=solid label="L_KEY"]
  199 -> 204 [style=dashed label="block"]
  200 [label="Estado 200\n\l 34 case_switch: CASE literal_term DOUBLE_DOT stm_list BREAK . SEMICOLON\l"]
  200 -> 205 [style=solid label="SEMICOLON"]
  201 [label="Estado 201\n\l 31 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK . SEMICOLON R_KEY\l"]
  201 -> 206 [style=solid label="SEMICOLON"]
  202 [label="Estado 202\n\l 30 elseif_struct: ELSE_IF_STM L_PARENTHESIS log_expr R_PARENTHESIS . L_KEY stm_list R_KEY\l"]
  202 -> 207 [style=solid label="L_KEY"]
  203 [label="Estado 203\n\l 27 else_struct: elseif_list ELSE_STM L_KEY stm_list . R_KEY\l"]
  203 -> 208 [style=solid label="R_KEY"]
  204 [label="Estado 204\n\l 41 for_struct: FOR_STM L_PARENTHESIS $@1 initialization SEMICOLON log_expr SEMICOLON for_struct_stm R_PARENTHESIS $@2 block .\l"]
  204 -> "204R41" [style=solid]
 "204R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  205 [label="Estado 205\n\l 34 case_switch: CASE literal_term DOUBLE_DOT stm_list BREAK SEMICOLON .\l"]
  205 -> "205R34" [style=solid]
 "205R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  206 [label="Estado 206\n\l 31 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON . R_KEY\l"]
  206 -> 209 [style=solid label="R_KEY"]
  207 [label="Estado 207\n\l 30 elseif_struct: ELSE_IF_STM L_PARENTHESIS log_expr R_PARENTHESIS L_KEY . stm_list R_KEY\l"]
  207 -> 26 [style=solid label="LITERAL_STRING"]
  207 -> 96 [style=solid label="IDENTIFIER"]
  207 -> 2 [style=solid label="INT_TYPE"]
  207 -> 3 [style=solid label="FLOAT_TYPE"]
  207 -> 4 [style=solid label="DOUBLE_TYPE"]
  207 -> 5 [style=solid label="STRING_TYPE"]
  207 -> 6 [style=solid label="BOOLEAN_TYPE"]
  207 -> 7 [style=solid label="MATRIZ_TYPE"]
  207 -> 8 [style=solid label="VOID_TYPE"]
  207 -> 28 [style=solid label="LITERAL_CHAR"]
  207 -> 9 [style=solid label="CHAR_TYPE"]
  207 -> 29 [style=solid label="LITERAL_INT"]
  207 -> 30 [style=solid label="LITERAL_FLOAT"]
  207 -> 31 [style=solid label="LITERAL_DOUBLE"]
  207 -> 32 [style=solid label="TRUE_VAL"]
  207 -> 33 [style=solid label="FALSE_VAL"]
  207 -> 34 [style=solid label="L_PARENTHESIS"]
  207 -> 97 [style=solid label="IF_STM"]
  207 -> 98 [style=solid label="FOR_STM"]
  207 -> 99 [style=solid label="DO_STM"]
  207 -> 100 [style=solid label="WHILE_STM"]
  207 -> 101 [style=solid label="SWITCH_STM"]
  207 -> 102 [style=solid label="PRINT"]
  207 -> 103 [style=solid label="PRINTF"]
  207 -> 104 [style=dashed label="decl"]
  207 -> 105 [style=dashed label="assingment"]
  207 -> 106 [style=dashed label="initialization"]
  207 -> 107 [style=dashed label="print_stm"]
  207 -> 108 [style=dashed label="expres_list"]
  207 -> 109 [style=dashed label="expr"]
  207 -> 110 [style=dashed label="cond_stm"]
  207 -> 111 [style=dashed label="if_struct"]
  207 -> 112 [style=dashed label="switch_struct"]
  207 -> 113 [style=dashed label="loop_stm"]
  207 -> 114 [style=dashed label="while_struct"]
  207 -> 115 [style=dashed label="for_struct"]
  207 -> 210 [style=dashed label="stm_list"]
  207 -> 117 [style=dashed label="stm"]
  207 -> 118 [style=dashed label="type"]
  207 -> 36 [style=dashed label="arit_expr"]
  207 -> 37 [style=dashed label="arit_expr_base"]
  207 -> 38 [style=dashed label="log_expr"]
  207 -> 39 [style=dashed label="comp_expr"]
  207 -> 40 [style=dashed label="term"]
  207 -> 41 [style=dashed label="term_num"]
  207 -> 42 [style=dashed label="log_term"]
  207 -> 43 [style=dashed label="literal_string"]
  208 [label="Estado 208\n\l 27 else_struct: elseif_list ELSE_STM L_KEY stm_list R_KEY .\l"]
  208 -> "208R27" [style=solid]
 "208R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  209 [label="Estado 209\n\l 31 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY .\l"]
  209 -> "209R31" [style=solid]
 "209R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  210 [label="Estado 210\n\l 30 elseif_struct: ELSE_IF_STM L_PARENTHESIS log_expr R_PARENTHESIS L_KEY stm_list . R_KEY\l"]
  210 -> 211 [style=solid label="R_KEY"]
  211 [label="Estado 211\n\l 30 elseif_struct: ELSE_IF_STM L_PARENTHESIS log_expr R_PARENTHESIS L_KEY stm_list R_KEY .\l"]
  211 -> "211R30" [style=solid]
 "211R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
}
