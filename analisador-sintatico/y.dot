// Gerado por GNU Bison 3.5.1.
// Relate erros para <bug-bison@gnu.org>.
// Site: <https://www.gnu.org/software/bison/>.

digraph "parser.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="Estado 0\n\l  0 $accept: . program $end\l"]
  0 -> 1 [style=solid label="LITERAL_STRING"]
  0 -> 2 [style=solid label="IDENTIFIER"]
  0 -> 3 [style=solid label="INT_TYPE"]
  0 -> 4 [style=solid label="FLOAT_TYPE"]
  0 -> 5 [style=solid label="DOUBLE_TYPE"]
  0 -> 6 [style=solid label="STRING_TYPE"]
  0 -> 7 [style=solid label="BOOLEAN_TYPE"]
  0 -> 8 [style=solid label="MATRIZ_TYPE"]
  0 -> 9 [style=solid label="VOID_TYPE"]
  0 -> 10 [style=solid label="LITERAL_CHAR"]
  0 -> 11 [style=solid label="CHAR_TYPE"]
  0 -> 12 [style=solid label="LITERAL_INT"]
  0 -> 13 [style=solid label="LITERAL_FLOAT"]
  0 -> 14 [style=solid label="LITERAL_DOUBLE"]
  0 -> 15 [style=solid label="TRUE_VAL"]
  0 -> 16 [style=solid label="FALSE_VAL"]
  0 -> 17 [style=solid label="L_PARENTHESIS"]
  0 -> 18 [style=solid label="IF_STM"]
  0 -> 19 [style=solid label="FOR_STM"]
  0 -> 20 [style=solid label="DO_STM"]
  0 -> 21 [style=solid label="WHILE_STM"]
  0 -> 22 [style=solid label="SWITCH_STM"]
  0 -> 23 [style=solid label="PRINT"]
  0 -> 24 [style=solid label="PRINTF"]
  0 -> 25 [style=dashed label="program"]
  0 -> 26 [style=dashed label="stm_list"]
  0 -> 27 [style=dashed label="stm"]
  0 -> 28 [style=dashed label="decl"]
  0 -> 29 [style=dashed label="assingment"]
  0 -> 30 [style=dashed label="initialization"]
  0 -> 31 [style=dashed label="print_stm"]
  0 -> 32 [style=dashed label="expres_list"]
  0 -> 33 [style=dashed label="expr"]
  0 -> 34 [style=dashed label="cond_stm"]
  0 -> 35 [style=dashed label="if_struct"]
  0 -> 36 [style=dashed label="switch_struct"]
  0 -> 37 [style=dashed label="loop_stm"]
  0 -> 38 [style=dashed label="while_struct"]
  0 -> 39 [style=dashed label="for_struct"]
  0 -> 40 [style=dashed label="fun_struct"]
  0 -> 41 [style=dashed label="type"]
  0 -> 42 [style=dashed label="arit_expr"]
  0 -> 43 [style=dashed label="log_expr"]
  0 -> 44 [style=dashed label="comp_expr"]
  0 -> 45 [style=dashed label="term"]
  0 -> 46 [style=dashed label="term_num"]
  0 -> 47 [style=dashed label="log_term"]
  0 -> 48 [style=dashed label="literal_string"]
  1 [label="Estado 1\n\l 93 literal_string: LITERAL_STRING .\l"]
  1 -> "1R93" [style=solid]
 "1R93" [label="R93", fillcolor=3, shape=diamond, style=filled]
  2 [label="Estado 2\n\l 13 assingment: IDENTIFIER . ASSINGMENT expr\l 84 term: IDENTIFIER .\l"]
  2 -> 49 [style=solid label="ASSINGMENT"]
  2 -> "2R84" [style=solid]
 "2R84" [label="R84", fillcolor=3, shape=diamond, style=filled]
  3 [label="Estado 3\n\l 46 type: INT_TYPE .\l"]
  3 -> "3R46" [style=solid]
 "3R46" [label="R46", fillcolor=3, shape=diamond, style=filled]
  4 [label="Estado 4\n\l 47 type: FLOAT_TYPE .\l"]
  4 -> "4R47" [style=solid]
 "4R47" [label="R47", fillcolor=3, shape=diamond, style=filled]
  5 [label="Estado 5\n\l 48 type: DOUBLE_TYPE .\l"]
  5 -> "5R48" [style=solid]
 "5R48" [label="R48", fillcolor=3, shape=diamond, style=filled]
  6 [label="Estado 6\n\l 50 type: STRING_TYPE .\l"]
  6 -> "6R50" [style=solid]
 "6R50" [label="R50", fillcolor=3, shape=diamond, style=filled]
  7 [label="Estado 7\n\l 51 type: BOOLEAN_TYPE .\l"]
  7 -> "7R51" [style=solid]
 "7R51" [label="R51", fillcolor=3, shape=diamond, style=filled]
  8 [label="Estado 8\n\l 52 type: MATRIZ_TYPE .\l"]
  8 -> "8R52" [style=solid]
 "8R52" [label="R52", fillcolor=3, shape=diamond, style=filled]
  9 [label="Estado 9\n\l 45 type: VOID_TYPE .\l"]
  9 -> "9R45" [style=solid]
 "9R45" [label="R45", fillcolor=3, shape=diamond, style=filled]
  10 [label="Estado 10\n\l 92 literal_string: LITERAL_CHAR .\l"]
  10 -> "10R92" [style=solid]
 "10R92" [label="R92", fillcolor=3, shape=diamond, style=filled]
  11 [label="Estado 11\n\l 49 type: CHAR_TYPE .\l"]
  11 -> "11R49" [style=solid]
 "11R49" [label="R49", fillcolor=3, shape=diamond, style=filled]
  12 [label="Estado 12\n\l 85 term_num: LITERAL_INT .\l"]
  12 -> "12R85" [style=solid]
 "12R85" [label="R85", fillcolor=3, shape=diamond, style=filled]
  13 [label="Estado 13\n\l 86 term_num: LITERAL_FLOAT .\l"]
  13 -> "13R86" [style=solid]
 "13R86" [label="R86", fillcolor=3, shape=diamond, style=filled]
  14 [label="Estado 14\n\l 87 term_num: LITERAL_DOUBLE .\l"]
  14 -> "14R87" [style=solid]
 "14R87" [label="R87", fillcolor=3, shape=diamond, style=filled]
  15 [label="Estado 15\n\l 88 log_term: TRUE_VAL .\l"]
  15 -> "15R88" [style=solid]
 "15R88" [label="R88", fillcolor=3, shape=diamond, style=filled]
  16 [label="Estado 16\n\l 89 log_term: FALSE_VAL .\l"]
  16 -> "16R89" [style=solid]
 "16R89" [label="R89", fillcolor=3, shape=diamond, style=filled]
  17 [label="Estado 17\n\l 58 arit_expr: L_PARENTHESIS . arit_expr R_PARENTHESIS\l 67 log_expr: L_PARENTHESIS . log_expr R_PARENTHESIS\l"]
  17 -> 1 [style=solid label="LITERAL_STRING"]
  17 -> 50 [style=solid label="IDENTIFIER"]
  17 -> 10 [style=solid label="LITERAL_CHAR"]
  17 -> 12 [style=solid label="LITERAL_INT"]
  17 -> 13 [style=solid label="LITERAL_FLOAT"]
  17 -> 14 [style=solid label="LITERAL_DOUBLE"]
  17 -> 15 [style=solid label="TRUE_VAL"]
  17 -> 16 [style=solid label="FALSE_VAL"]
  17 -> 17 [style=solid label="L_PARENTHESIS"]
  17 -> 51 [style=dashed label="arit_expr"]
  17 -> 52 [style=dashed label="log_expr"]
  17 -> 44 [style=dashed label="comp_expr"]
  17 -> 45 [style=dashed label="term"]
  17 -> 46 [style=dashed label="term_num"]
  17 -> 47 [style=dashed label="log_term"]
  17 -> 48 [style=dashed label="literal_string"]
  18 [label="Estado 18\n\l 27 if_struct: IF_STM . L_PARENTHESIS log_expr R_PARENTHESIS block else_struct\l"]
  18 -> 53 [style=solid label="L_PARENTHESIS"]
  19 [label="Estado 19\n\l 41 for_struct: FOR_STM . L_PARENTHESIS SEMICOLON log_expr SEMICOLON R_PARENTHESIS L_KEY stm_list R_KEY\l"]
  19 -> 54 [style=solid label="L_PARENTHESIS"]
  20 [label="Estado 20\n\l 40 while_struct: DO_STM . L_KEY stm_list R_KEY WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS\l"]
  20 -> 55 [style=solid label="L_KEY"]
  21 [label="Estado 21\n\l 39 while_struct: WHILE_STM . L_PARENTHESIS log_expr R_PARENTHESIS L_KEY stm_list R_KEY\l"]
  21 -> 56 [style=solid label="L_PARENTHESIS"]
  22 [label="Estado 22\n\l 33 switch_struct: SWITCH_STM . L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY\l"]
  22 -> 57 [style=solid label="L_PARENTHESIS"]
  23 [label="Estado 23\n\l 15 print_stm: PRINT . L_PARENTHESIS literal_string R_PARENTHESIS\l 16          | PRINT . L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS\l"]
  23 -> 58 [style=solid label="L_PARENTHESIS"]
  24 [label="Estado 24\n\l 17 print_stm: PRINTF . L_PARENTHESIS literal_string R_PARENTHESIS\l 18          | PRINTF . L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS\l"]
  24 -> 59 [style=solid label="L_PARENTHESIS"]
  25 [label="Estado 25\n\l  0 $accept: program . $end\l"]
  25 -> 60 [style=solid label="$end"]
  26 [label="Estado 26\n\l  1 program: stm_list .\l"]
  26 -> "26R1" [style=solid]
 "26R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  27 [label="Estado 27\n\l  2 stm_list: stm . SEMICOLON\l  3         | stm . SEMICOLON stm_list\l"]
  27 -> 61 [style=solid label="SEMICOLON"]
  28 [label="Estado 28\n\l  4 stm: decl .\l"]
  28 -> "28R4" [style=solid]
 "28R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  29 [label="Estado 29\n\l 10 stm: assingment .\l"]
  29 -> "29R10" [style=solid]
 "29R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  30 [label="Estado 30\n\l 11 stm: initialization .\l"]
  30 -> "30R11" [style=solid]
 "30R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  31 [label="Estado 31\n\l  8 stm: print_stm .\l"]
  31 -> "31R8" [style=solid]
 "31R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  32 [label="Estado 32\n\l  9 stm: expres_list .\l"]
  32 -> "32R9" [style=solid]
 "32R9" [label="R9", fillcolor=3, shape=diamond, style=filled]
  33 [label="Estado 33\n\l 21 expres_list: expr . SEMICOLON\l 22            | expr . SEMICOLON expres_list\l"]
  33 -> 62 [style=solid label="SEMICOLON"]
  34 [label="Estado 34\n\l  5 stm: cond_stm .\l"]
  34 -> "34R5" [style=solid]
 "34R5" [label="R5", fillcolor=3, shape=diamond, style=filled]
  35 [label="Estado 35\n\l 25 cond_stm: if_struct .\l"]
  35 -> "35R25" [style=solid]
 "35R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  36 [label="Estado 36\n\l 26 cond_stm: switch_struct .\l"]
  36 -> "36R26" [style=solid]
 "36R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  37 [label="Estado 37\n\l  6 stm: loop_stm .\l"]
  37 -> "37R6" [style=solid]
 "37R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  38 [label="Estado 38\n\l 37 loop_stm: while_struct .\l"]
  38 -> "38R37" [style=solid]
 "38R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  39 [label="Estado 39\n\l 38 loop_stm: for_struct .\l"]
  39 -> "39R38" [style=solid]
 "39R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  40 [label="Estado 40\n\l  7 stm: fun_struct .\l"]
  40 -> "40R7" [style=solid]
 "40R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  41 [label="Estado 41\n\l 12 decl: type . id_list\l 14 initialization: type . IDENTIFIER ASSINGMENT expr\l 42 fun_struct: type . IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS L_KEY stm_list R_KEY\l"]
  41 -> 63 [style=solid label="IDENTIFIER"]
  41 -> 64 [style=dashed label="id_list"]
  42 [label="Estado 42\n\l 24 expr: arit_expr .\l 59 arit_expr: arit_expr . PLUS_OP term\l 60          | arit_expr . SUB_OP term\l 61          | arit_expr . DIV_OP term\l 62          | arit_expr . STAR term\l 63          | arit_expr . MOD_OP term\l 64          | arit_expr . INC_OP\l 65          | arit_expr . DEC_OP\l 69 comp_expr: arit_expr .\l"]
  42 -> 65 [style=solid label="PLUS_OP"]
  42 -> 66 [style=solid label="SUB_OP"]
  42 -> 67 [style=solid label="DIV_OP"]
  42 -> 68 [style=solid label="STAR"]
  42 -> 69 [style=solid label="MOD_OP"]
  42 -> 70 [style=solid label="INC_OP"]
  42 -> 71 [style=solid label="DEC_OP"]
  42 -> "42R24" [label="[SEMICOLON]", style=solid]
 "42R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  42 -> "42R69d" [label="[SEMICOLON]", style=solid]
 "42R69d" [label="R69", fillcolor=5, shape=diamond, style=filled]
  42 -> "42R69" [style=solid]
 "42R69" [label="R69", fillcolor=3, shape=diamond, style=filled]
  43 [label="Estado 43\n\l 23 expr: log_expr .\l 68 log_expr: log_expr . op_log comp_expr\l"]
  43 -> 72 [style=solid label="AND_OP"]
  43 -> 73 [style=solid label="OR_OP"]
  43 -> 74 [style=solid label="NOT_OP"]
  43 -> 75 [style=dashed label="op_log"]
  43 -> "43R23" [style=solid]
 "43R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  44 [label="Estado 44\n\l 66 log_expr: comp_expr .\l 70 comp_expr: comp_expr . op_comp arit_expr\l"]
  44 -> 76 [style=solid label="GE_OP"]
  44 -> 77 [style=solid label="SE_OP"]
  44 -> 78 [style=solid label="EQ_OP"]
  44 -> 79 [style=solid label="NE_OP"]
  44 -> 80 [style=solid label="G_OP"]
  44 -> 81 [style=solid label="S_OP"]
  44 -> 82 [style=dashed label="op_comp"]
  44 -> "44R66" [style=solid]
 "44R66" [label="R66", fillcolor=3, shape=diamond, style=filled]
  45 [label="Estado 45\n\l 57 arit_expr: term .\l"]
  45 -> "45R57" [style=solid]
 "45R57" [label="R57", fillcolor=3, shape=diamond, style=filled]
  46 [label="Estado 46\n\l 82 term: term_num .\l"]
  46 -> "46R82" [style=solid]
 "46R82" [label="R82", fillcolor=3, shape=diamond, style=filled]
  47 [label="Estado 47\n\l 83 term: log_term .\l"]
  47 -> "47R83" [style=solid]
 "47R83" [label="R83", fillcolor=3, shape=diamond, style=filled]
  48 [label="Estado 48\n\l 71 comp_expr: literal_string . EQ_OP literal_string\l 72          | literal_string . NE_OP literal_string\l"]
  48 -> 83 [style=solid label="EQ_OP"]
  48 -> 84 [style=solid label="NE_OP"]
  49 [label="Estado 49\n\l 13 assingment: IDENTIFIER ASSINGMENT . expr\l"]
  49 -> 1 [style=solid label="LITERAL_STRING"]
  49 -> 50 [style=solid label="IDENTIFIER"]
  49 -> 10 [style=solid label="LITERAL_CHAR"]
  49 -> 12 [style=solid label="LITERAL_INT"]
  49 -> 13 [style=solid label="LITERAL_FLOAT"]
  49 -> 14 [style=solid label="LITERAL_DOUBLE"]
  49 -> 15 [style=solid label="TRUE_VAL"]
  49 -> 16 [style=solid label="FALSE_VAL"]
  49 -> 17 [style=solid label="L_PARENTHESIS"]
  49 -> 85 [style=dashed label="expr"]
  49 -> 42 [style=dashed label="arit_expr"]
  49 -> 43 [style=dashed label="log_expr"]
  49 -> 44 [style=dashed label="comp_expr"]
  49 -> 45 [style=dashed label="term"]
  49 -> 46 [style=dashed label="term_num"]
  49 -> 47 [style=dashed label="log_term"]
  49 -> 48 [style=dashed label="literal_string"]
  50 [label="Estado 50\n\l 84 term: IDENTIFIER .\l"]
  50 -> "50R84" [style=solid]
 "50R84" [label="R84", fillcolor=3, shape=diamond, style=filled]
  51 [label="Estado 51\n\l 58 arit_expr: L_PARENTHESIS arit_expr . R_PARENTHESIS\l 59          | arit_expr . PLUS_OP term\l 60          | arit_expr . SUB_OP term\l 61          | arit_expr . DIV_OP term\l 62          | arit_expr . STAR term\l 63          | arit_expr . MOD_OP term\l 64          | arit_expr . INC_OP\l 65          | arit_expr . DEC_OP\l 69 comp_expr: arit_expr .\l"]
  51 -> 65 [style=solid label="PLUS_OP"]
  51 -> 66 [style=solid label="SUB_OP"]
  51 -> 67 [style=solid label="DIV_OP"]
  51 -> 68 [style=solid label="STAR"]
  51 -> 69 [style=solid label="MOD_OP"]
  51 -> 70 [style=solid label="INC_OP"]
  51 -> 71 [style=solid label="DEC_OP"]
  51 -> 86 [style=solid label="R_PARENTHESIS"]
  51 -> "51R69d" [label="[R_PARENTHESIS]", style=solid]
 "51R69d" [label="R69", fillcolor=5, shape=diamond, style=filled]
  51 -> "51R69" [style=solid]
 "51R69" [label="R69", fillcolor=3, shape=diamond, style=filled]
  52 [label="Estado 52\n\l 67 log_expr: L_PARENTHESIS log_expr . R_PARENTHESIS\l 68         | log_expr . op_log comp_expr\l"]
  52 -> 72 [style=solid label="AND_OP"]
  52 -> 73 [style=solid label="OR_OP"]
  52 -> 74 [style=solid label="NOT_OP"]
  52 -> 87 [style=solid label="R_PARENTHESIS"]
  52 -> 75 [style=dashed label="op_log"]
  53 [label="Estado 53\n\l 27 if_struct: IF_STM L_PARENTHESIS . log_expr R_PARENTHESIS block else_struct\l"]
  53 -> 1 [style=solid label="LITERAL_STRING"]
  53 -> 50 [style=solid label="IDENTIFIER"]
  53 -> 10 [style=solid label="LITERAL_CHAR"]
  53 -> 12 [style=solid label="LITERAL_INT"]
  53 -> 13 [style=solid label="LITERAL_FLOAT"]
  53 -> 14 [style=solid label="LITERAL_DOUBLE"]
  53 -> 15 [style=solid label="TRUE_VAL"]
  53 -> 16 [style=solid label="FALSE_VAL"]
  53 -> 17 [style=solid label="L_PARENTHESIS"]
  53 -> 88 [style=dashed label="arit_expr"]
  53 -> 89 [style=dashed label="log_expr"]
  53 -> 44 [style=dashed label="comp_expr"]
  53 -> 45 [style=dashed label="term"]
  53 -> 46 [style=dashed label="term_num"]
  53 -> 47 [style=dashed label="log_term"]
  53 -> 48 [style=dashed label="literal_string"]
  54 [label="Estado 54\n\l 41 for_struct: FOR_STM L_PARENTHESIS . SEMICOLON log_expr SEMICOLON R_PARENTHESIS L_KEY stm_list R_KEY\l"]
  54 -> 90 [style=solid label="SEMICOLON"]
  55 [label="Estado 55\n\l 40 while_struct: DO_STM L_KEY . stm_list R_KEY WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS\l"]
  55 -> 1 [style=solid label="LITERAL_STRING"]
  55 -> 2 [style=solid label="IDENTIFIER"]
  55 -> 3 [style=solid label="INT_TYPE"]
  55 -> 4 [style=solid label="FLOAT_TYPE"]
  55 -> 5 [style=solid label="DOUBLE_TYPE"]
  55 -> 6 [style=solid label="STRING_TYPE"]
  55 -> 7 [style=solid label="BOOLEAN_TYPE"]
  55 -> 8 [style=solid label="MATRIZ_TYPE"]
  55 -> 9 [style=solid label="VOID_TYPE"]
  55 -> 10 [style=solid label="LITERAL_CHAR"]
  55 -> 11 [style=solid label="CHAR_TYPE"]
  55 -> 12 [style=solid label="LITERAL_INT"]
  55 -> 13 [style=solid label="LITERAL_FLOAT"]
  55 -> 14 [style=solid label="LITERAL_DOUBLE"]
  55 -> 15 [style=solid label="TRUE_VAL"]
  55 -> 16 [style=solid label="FALSE_VAL"]
  55 -> 17 [style=solid label="L_PARENTHESIS"]
  55 -> 18 [style=solid label="IF_STM"]
  55 -> 19 [style=solid label="FOR_STM"]
  55 -> 20 [style=solid label="DO_STM"]
  55 -> 21 [style=solid label="WHILE_STM"]
  55 -> 22 [style=solid label="SWITCH_STM"]
  55 -> 23 [style=solid label="PRINT"]
  55 -> 24 [style=solid label="PRINTF"]
  55 -> 91 [style=dashed label="stm_list"]
  55 -> 27 [style=dashed label="stm"]
  55 -> 28 [style=dashed label="decl"]
  55 -> 29 [style=dashed label="assingment"]
  55 -> 30 [style=dashed label="initialization"]
  55 -> 31 [style=dashed label="print_stm"]
  55 -> 32 [style=dashed label="expres_list"]
  55 -> 33 [style=dashed label="expr"]
  55 -> 34 [style=dashed label="cond_stm"]
  55 -> 35 [style=dashed label="if_struct"]
  55 -> 36 [style=dashed label="switch_struct"]
  55 -> 37 [style=dashed label="loop_stm"]
  55 -> 38 [style=dashed label="while_struct"]
  55 -> 39 [style=dashed label="for_struct"]
  55 -> 40 [style=dashed label="fun_struct"]
  55 -> 41 [style=dashed label="type"]
  55 -> 42 [style=dashed label="arit_expr"]
  55 -> 43 [style=dashed label="log_expr"]
  55 -> 44 [style=dashed label="comp_expr"]
  55 -> 45 [style=dashed label="term"]
  55 -> 46 [style=dashed label="term_num"]
  55 -> 47 [style=dashed label="log_term"]
  55 -> 48 [style=dashed label="literal_string"]
  56 [label="Estado 56\n\l 39 while_struct: WHILE_STM L_PARENTHESIS . log_expr R_PARENTHESIS L_KEY stm_list R_KEY\l"]
  56 -> 1 [style=solid label="LITERAL_STRING"]
  56 -> 50 [style=solid label="IDENTIFIER"]
  56 -> 10 [style=solid label="LITERAL_CHAR"]
  56 -> 12 [style=solid label="LITERAL_INT"]
  56 -> 13 [style=solid label="LITERAL_FLOAT"]
  56 -> 14 [style=solid label="LITERAL_DOUBLE"]
  56 -> 15 [style=solid label="TRUE_VAL"]
  56 -> 16 [style=solid label="FALSE_VAL"]
  56 -> 17 [style=solid label="L_PARENTHESIS"]
  56 -> 88 [style=dashed label="arit_expr"]
  56 -> 92 [style=dashed label="log_expr"]
  56 -> 44 [style=dashed label="comp_expr"]
  56 -> 45 [style=dashed label="term"]
  56 -> 46 [style=dashed label="term_num"]
  56 -> 47 [style=dashed label="log_term"]
  56 -> 48 [style=dashed label="literal_string"]
  57 [label="Estado 57\n\l 33 switch_struct: SWITCH_STM L_PARENTHESIS . literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY\l"]
  57 -> 1 [style=solid label="LITERAL_STRING"]
  57 -> 50 [style=solid label="IDENTIFIER"]
  57 -> 10 [style=solid label="LITERAL_CHAR"]
  57 -> 12 [style=solid label="LITERAL_INT"]
  57 -> 13 [style=solid label="LITERAL_FLOAT"]
  57 -> 14 [style=solid label="LITERAL_DOUBLE"]
  57 -> 15 [style=solid label="TRUE_VAL"]
  57 -> 16 [style=solid label="FALSE_VAL"]
  57 -> 93 [style=dashed label="term"]
  57 -> 46 [style=dashed label="term_num"]
  57 -> 47 [style=dashed label="log_term"]
  57 -> 94 [style=dashed label="literal_term"]
  57 -> 95 [style=dashed label="literal_string"]
  58 [label="Estado 58\n\l 15 print_stm: PRINT L_PARENTHESIS . literal_string R_PARENTHESIS\l 16          | PRINT L_PARENTHESIS . literal_string COMMA id_list R_PARENTHESIS\l"]
  58 -> 1 [style=solid label="LITERAL_STRING"]
  58 -> 10 [style=solid label="LITERAL_CHAR"]
  58 -> 96 [style=dashed label="literal_string"]
  59 [label="Estado 59\n\l 17 print_stm: PRINTF L_PARENTHESIS . literal_string R_PARENTHESIS\l 18          | PRINTF L_PARENTHESIS . literal_string COMMA id_list R_PARENTHESIS\l"]
  59 -> 1 [style=solid label="LITERAL_STRING"]
  59 -> 10 [style=solid label="LITERAL_CHAR"]
  59 -> 97 [style=dashed label="literal_string"]
  60 [label="Estado 60\n\l  0 $accept: program $end .\l"]
  60 -> "60R0" [style=solid]
 "60R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  61 [label="Estado 61\n\l  2 stm_list: stm SEMICOLON .\l  3         | stm SEMICOLON . stm_list\l"]
  61 -> 1 [style=solid label="LITERAL_STRING"]
  61 -> 2 [style=solid label="IDENTIFIER"]
  61 -> 3 [style=solid label="INT_TYPE"]
  61 -> 4 [style=solid label="FLOAT_TYPE"]
  61 -> 5 [style=solid label="DOUBLE_TYPE"]
  61 -> 6 [style=solid label="STRING_TYPE"]
  61 -> 7 [style=solid label="BOOLEAN_TYPE"]
  61 -> 8 [style=solid label="MATRIZ_TYPE"]
  61 -> 9 [style=solid label="VOID_TYPE"]
  61 -> 10 [style=solid label="LITERAL_CHAR"]
  61 -> 11 [style=solid label="CHAR_TYPE"]
  61 -> 12 [style=solid label="LITERAL_INT"]
  61 -> 13 [style=solid label="LITERAL_FLOAT"]
  61 -> 14 [style=solid label="LITERAL_DOUBLE"]
  61 -> 15 [style=solid label="TRUE_VAL"]
  61 -> 16 [style=solid label="FALSE_VAL"]
  61 -> 17 [style=solid label="L_PARENTHESIS"]
  61 -> 18 [style=solid label="IF_STM"]
  61 -> 19 [style=solid label="FOR_STM"]
  61 -> 20 [style=solid label="DO_STM"]
  61 -> 21 [style=solid label="WHILE_STM"]
  61 -> 22 [style=solid label="SWITCH_STM"]
  61 -> 23 [style=solid label="PRINT"]
  61 -> 24 [style=solid label="PRINTF"]
  61 -> 98 [style=dashed label="stm_list"]
  61 -> 27 [style=dashed label="stm"]
  61 -> 28 [style=dashed label="decl"]
  61 -> 29 [style=dashed label="assingment"]
  61 -> 30 [style=dashed label="initialization"]
  61 -> 31 [style=dashed label="print_stm"]
  61 -> 32 [style=dashed label="expres_list"]
  61 -> 33 [style=dashed label="expr"]
  61 -> 34 [style=dashed label="cond_stm"]
  61 -> 35 [style=dashed label="if_struct"]
  61 -> 36 [style=dashed label="switch_struct"]
  61 -> 37 [style=dashed label="loop_stm"]
  61 -> 38 [style=dashed label="while_struct"]
  61 -> 39 [style=dashed label="for_struct"]
  61 -> 40 [style=dashed label="fun_struct"]
  61 -> 41 [style=dashed label="type"]
  61 -> 42 [style=dashed label="arit_expr"]
  61 -> 43 [style=dashed label="log_expr"]
  61 -> 44 [style=dashed label="comp_expr"]
  61 -> 45 [style=dashed label="term"]
  61 -> 46 [style=dashed label="term_num"]
  61 -> 47 [style=dashed label="log_term"]
  61 -> 48 [style=dashed label="literal_string"]
  61 -> "61R2" [style=solid]
 "61R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  62 [label="Estado 62\n\l 21 expres_list: expr SEMICOLON .\l 22            | expr SEMICOLON . expres_list\l"]
  62 -> 1 [style=solid label="LITERAL_STRING"]
  62 -> 50 [style=solid label="IDENTIFIER"]
  62 -> 10 [style=solid label="LITERAL_CHAR"]
  62 -> 12 [style=solid label="LITERAL_INT"]
  62 -> 13 [style=solid label="LITERAL_FLOAT"]
  62 -> 14 [style=solid label="LITERAL_DOUBLE"]
  62 -> 15 [style=solid label="TRUE_VAL"]
  62 -> 16 [style=solid label="FALSE_VAL"]
  62 -> 17 [style=solid label="L_PARENTHESIS"]
  62 -> 99 [style=dashed label="expres_list"]
  62 -> 33 [style=dashed label="expr"]
  62 -> 42 [style=dashed label="arit_expr"]
  62 -> 43 [style=dashed label="log_expr"]
  62 -> 44 [style=dashed label="comp_expr"]
  62 -> 45 [style=dashed label="term"]
  62 -> 46 [style=dashed label="term_num"]
  62 -> 47 [style=dashed label="log_term"]
  62 -> 48 [style=dashed label="literal_string"]
  62 -> "62R21" [style=solid]
 "62R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  63 [label="Estado 63\n\l 14 initialization: type IDENTIFIER . ASSINGMENT expr\l 19 id_list: IDENTIFIER .\l 20        | IDENTIFIER . COMMA id_list\l 42 fun_struct: type IDENTIFIER . L_PARENTHESIS par_list R_PARENTHESIS L_KEY stm_list R_KEY\l"]
  63 -> 100 [style=solid label="ASSINGMENT"]
  63 -> 101 [style=solid label="L_PARENTHESIS"]
  63 -> 102 [style=solid label="COMMA"]
  63 -> "63R19" [style=solid]
 "63R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  64 [label="Estado 64\n\l 12 decl: type id_list .\l"]
  64 -> "64R12" [style=solid]
 "64R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  65 [label="Estado 65\n\l 59 arit_expr: arit_expr PLUS_OP . term\l"]
  65 -> 50 [style=solid label="IDENTIFIER"]
  65 -> 12 [style=solid label="LITERAL_INT"]
  65 -> 13 [style=solid label="LITERAL_FLOAT"]
  65 -> 14 [style=solid label="LITERAL_DOUBLE"]
  65 -> 15 [style=solid label="TRUE_VAL"]
  65 -> 16 [style=solid label="FALSE_VAL"]
  65 -> 103 [style=dashed label="term"]
  65 -> 46 [style=dashed label="term_num"]
  65 -> 47 [style=dashed label="log_term"]
  66 [label="Estado 66\n\l 60 arit_expr: arit_expr SUB_OP . term\l"]
  66 -> 50 [style=solid label="IDENTIFIER"]
  66 -> 12 [style=solid label="LITERAL_INT"]
  66 -> 13 [style=solid label="LITERAL_FLOAT"]
  66 -> 14 [style=solid label="LITERAL_DOUBLE"]
  66 -> 15 [style=solid label="TRUE_VAL"]
  66 -> 16 [style=solid label="FALSE_VAL"]
  66 -> 104 [style=dashed label="term"]
  66 -> 46 [style=dashed label="term_num"]
  66 -> 47 [style=dashed label="log_term"]
  67 [label="Estado 67\n\l 61 arit_expr: arit_expr DIV_OP . term\l"]
  67 -> 50 [style=solid label="IDENTIFIER"]
  67 -> 12 [style=solid label="LITERAL_INT"]
  67 -> 13 [style=solid label="LITERAL_FLOAT"]
  67 -> 14 [style=solid label="LITERAL_DOUBLE"]
  67 -> 15 [style=solid label="TRUE_VAL"]
  67 -> 16 [style=solid label="FALSE_VAL"]
  67 -> 105 [style=dashed label="term"]
  67 -> 46 [style=dashed label="term_num"]
  67 -> 47 [style=dashed label="log_term"]
  68 [label="Estado 68\n\l 62 arit_expr: arit_expr STAR . term\l"]
  68 -> 50 [style=solid label="IDENTIFIER"]
  68 -> 12 [style=solid label="LITERAL_INT"]
  68 -> 13 [style=solid label="LITERAL_FLOAT"]
  68 -> 14 [style=solid label="LITERAL_DOUBLE"]
  68 -> 15 [style=solid label="TRUE_VAL"]
  68 -> 16 [style=solid label="FALSE_VAL"]
  68 -> 106 [style=dashed label="term"]
  68 -> 46 [style=dashed label="term_num"]
  68 -> 47 [style=dashed label="log_term"]
  69 [label="Estado 69\n\l 63 arit_expr: arit_expr MOD_OP . term\l"]
  69 -> 50 [style=solid label="IDENTIFIER"]
  69 -> 12 [style=solid label="LITERAL_INT"]
  69 -> 13 [style=solid label="LITERAL_FLOAT"]
  69 -> 14 [style=solid label="LITERAL_DOUBLE"]
  69 -> 15 [style=solid label="TRUE_VAL"]
  69 -> 16 [style=solid label="FALSE_VAL"]
  69 -> 107 [style=dashed label="term"]
  69 -> 46 [style=dashed label="term_num"]
  69 -> 47 [style=dashed label="log_term"]
  70 [label="Estado 70\n\l 64 arit_expr: arit_expr INC_OP .\l"]
  70 -> "70R64" [style=solid]
 "70R64" [label="R64", fillcolor=3, shape=diamond, style=filled]
  71 [label="Estado 71\n\l 65 arit_expr: arit_expr DEC_OP .\l"]
  71 -> "71R65" [style=solid]
 "71R65" [label="R65", fillcolor=3, shape=diamond, style=filled]
  72 [label="Estado 72\n\l 73 op_log: AND_OP .\l"]
  72 -> "72R73" [style=solid]
 "72R73" [label="R73", fillcolor=3, shape=diamond, style=filled]
  73 [label="Estado 73\n\l 74 op_log: OR_OP .\l"]
  73 -> "73R74" [style=solid]
 "73R74" [label="R74", fillcolor=3, shape=diamond, style=filled]
  74 [label="Estado 74\n\l 75 op_log: NOT_OP .\l"]
  74 -> "74R75" [style=solid]
 "74R75" [label="R75", fillcolor=3, shape=diamond, style=filled]
  75 [label="Estado 75\n\l 68 log_expr: log_expr op_log . comp_expr\l"]
  75 -> 1 [style=solid label="LITERAL_STRING"]
  75 -> 50 [style=solid label="IDENTIFIER"]
  75 -> 10 [style=solid label="LITERAL_CHAR"]
  75 -> 12 [style=solid label="LITERAL_INT"]
  75 -> 13 [style=solid label="LITERAL_FLOAT"]
  75 -> 14 [style=solid label="LITERAL_DOUBLE"]
  75 -> 15 [style=solid label="TRUE_VAL"]
  75 -> 16 [style=solid label="FALSE_VAL"]
  75 -> 108 [style=solid label="L_PARENTHESIS"]
  75 -> 88 [style=dashed label="arit_expr"]
  75 -> 109 [style=dashed label="comp_expr"]
  75 -> 45 [style=dashed label="term"]
  75 -> 46 [style=dashed label="term_num"]
  75 -> 47 [style=dashed label="log_term"]
  75 -> 48 [style=dashed label="literal_string"]
  76 [label="Estado 76\n\l 78 op_comp: GE_OP .\l"]
  76 -> "76R78" [style=solid]
 "76R78" [label="R78", fillcolor=3, shape=diamond, style=filled]
  77 [label="Estado 77\n\l 76 op_comp: SE_OP .\l"]
  77 -> "77R76" [style=solid]
 "77R76" [label="R76", fillcolor=3, shape=diamond, style=filled]
  78 [label="Estado 78\n\l 80 op_comp: EQ_OP .\l"]
  78 -> "78R80" [style=solid]
 "78R80" [label="R80", fillcolor=3, shape=diamond, style=filled]
  79 [label="Estado 79\n\l 81 op_comp: NE_OP .\l"]
  79 -> "79R81" [style=solid]
 "79R81" [label="R81", fillcolor=3, shape=diamond, style=filled]
  80 [label="Estado 80\n\l 79 op_comp: G_OP .\l"]
  80 -> "80R79" [style=solid]
 "80R79" [label="R79", fillcolor=3, shape=diamond, style=filled]
  81 [label="Estado 81\n\l 77 op_comp: S_OP .\l"]
  81 -> "81R77" [style=solid]
 "81R77" [label="R77", fillcolor=3, shape=diamond, style=filled]
  82 [label="Estado 82\n\l 70 comp_expr: comp_expr op_comp . arit_expr\l"]
  82 -> 50 [style=solid label="IDENTIFIER"]
  82 -> 12 [style=solid label="LITERAL_INT"]
  82 -> 13 [style=solid label="LITERAL_FLOAT"]
  82 -> 14 [style=solid label="LITERAL_DOUBLE"]
  82 -> 15 [style=solid label="TRUE_VAL"]
  82 -> 16 [style=solid label="FALSE_VAL"]
  82 -> 108 [style=solid label="L_PARENTHESIS"]
  82 -> 110 [style=dashed label="arit_expr"]
  82 -> 45 [style=dashed label="term"]
  82 -> 46 [style=dashed label="term_num"]
  82 -> 47 [style=dashed label="log_term"]
  83 [label="Estado 83\n\l 71 comp_expr: literal_string EQ_OP . literal_string\l"]
  83 -> 1 [style=solid label="LITERAL_STRING"]
  83 -> 10 [style=solid label="LITERAL_CHAR"]
  83 -> 111 [style=dashed label="literal_string"]
  84 [label="Estado 84\n\l 72 comp_expr: literal_string NE_OP . literal_string\l"]
  84 -> 1 [style=solid label="LITERAL_STRING"]
  84 -> 10 [style=solid label="LITERAL_CHAR"]
  84 -> 112 [style=dashed label="literal_string"]
  85 [label="Estado 85\n\l 13 assingment: IDENTIFIER ASSINGMENT expr .\l"]
  85 -> "85R13" [style=solid]
 "85R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  86 [label="Estado 86\n\l 58 arit_expr: L_PARENTHESIS arit_expr R_PARENTHESIS .\l"]
  86 -> "86R58" [style=solid]
 "86R58" [label="R58", fillcolor=3, shape=diamond, style=filled]
  87 [label="Estado 87\n\l 67 log_expr: L_PARENTHESIS log_expr R_PARENTHESIS .\l"]
  87 -> "87R67" [style=solid]
 "87R67" [label="R67", fillcolor=3, shape=diamond, style=filled]
  88 [label="Estado 88\n\l 59 arit_expr: arit_expr . PLUS_OP term\l 60          | arit_expr . SUB_OP term\l 61          | arit_expr . DIV_OP term\l 62          | arit_expr . STAR term\l 63          | arit_expr . MOD_OP term\l 64          | arit_expr . INC_OP\l 65          | arit_expr . DEC_OP\l 69 comp_expr: arit_expr .\l"]
  88 -> 65 [style=solid label="PLUS_OP"]
  88 -> 66 [style=solid label="SUB_OP"]
  88 -> 67 [style=solid label="DIV_OP"]
  88 -> 68 [style=solid label="STAR"]
  88 -> 69 [style=solid label="MOD_OP"]
  88 -> 70 [style=solid label="INC_OP"]
  88 -> 71 [style=solid label="DEC_OP"]
  88 -> "88R69" [style=solid]
 "88R69" [label="R69", fillcolor=3, shape=diamond, style=filled]
  89 [label="Estado 89\n\l 27 if_struct: IF_STM L_PARENTHESIS log_expr . R_PARENTHESIS block else_struct\l 68 log_expr: log_expr . op_log comp_expr\l"]
  89 -> 72 [style=solid label="AND_OP"]
  89 -> 73 [style=solid label="OR_OP"]
  89 -> 74 [style=solid label="NOT_OP"]
  89 -> 113 [style=solid label="R_PARENTHESIS"]
  89 -> 75 [style=dashed label="op_log"]
  90 [label="Estado 90\n\l 41 for_struct: FOR_STM L_PARENTHESIS SEMICOLON . log_expr SEMICOLON R_PARENTHESIS L_KEY stm_list R_KEY\l"]
  90 -> 1 [style=solid label="LITERAL_STRING"]
  90 -> 50 [style=solid label="IDENTIFIER"]
  90 -> 10 [style=solid label="LITERAL_CHAR"]
  90 -> 12 [style=solid label="LITERAL_INT"]
  90 -> 13 [style=solid label="LITERAL_FLOAT"]
  90 -> 14 [style=solid label="LITERAL_DOUBLE"]
  90 -> 15 [style=solid label="TRUE_VAL"]
  90 -> 16 [style=solid label="FALSE_VAL"]
  90 -> 17 [style=solid label="L_PARENTHESIS"]
  90 -> 88 [style=dashed label="arit_expr"]
  90 -> 114 [style=dashed label="log_expr"]
  90 -> 44 [style=dashed label="comp_expr"]
  90 -> 45 [style=dashed label="term"]
  90 -> 46 [style=dashed label="term_num"]
  90 -> 47 [style=dashed label="log_term"]
  90 -> 48 [style=dashed label="literal_string"]
  91 [label="Estado 91\n\l 40 while_struct: DO_STM L_KEY stm_list . R_KEY WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS\l"]
  91 -> 115 [style=solid label="R_KEY"]
  92 [label="Estado 92\n\l 39 while_struct: WHILE_STM L_PARENTHESIS log_expr . R_PARENTHESIS L_KEY stm_list R_KEY\l 68 log_expr: log_expr . op_log comp_expr\l"]
  92 -> 72 [style=solid label="AND_OP"]
  92 -> 73 [style=solid label="OR_OP"]
  92 -> 74 [style=solid label="NOT_OP"]
  92 -> 116 [style=solid label="R_PARENTHESIS"]
  92 -> 75 [style=dashed label="op_log"]
  93 [label="Estado 93\n\l 90 literal_term: term .\l"]
  93 -> "93R90" [style=solid]
 "93R90" [label="R90", fillcolor=3, shape=diamond, style=filled]
  94 [label="Estado 94\n\l 33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term . R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY\l"]
  94 -> 117 [style=solid label="R_PARENTHESIS"]
  95 [label="Estado 95\n\l 91 literal_term: literal_string .\l"]
  95 -> "95R91" [style=solid]
 "95R91" [label="R91", fillcolor=3, shape=diamond, style=filled]
  96 [label="Estado 96\n\l 15 print_stm: PRINT L_PARENTHESIS literal_string . R_PARENTHESIS\l 16          | PRINT L_PARENTHESIS literal_string . COMMA id_list R_PARENTHESIS\l"]
  96 -> 118 [style=solid label="R_PARENTHESIS"]
  96 -> 119 [style=solid label="COMMA"]
  97 [label="Estado 97\n\l 17 print_stm: PRINTF L_PARENTHESIS literal_string . R_PARENTHESIS\l 18          | PRINTF L_PARENTHESIS literal_string . COMMA id_list R_PARENTHESIS\l"]
  97 -> 120 [style=solid label="R_PARENTHESIS"]
  97 -> 121 [style=solid label="COMMA"]
  98 [label="Estado 98\n\l  3 stm_list: stm SEMICOLON stm_list .\l"]
  98 -> "98R3" [style=solid]
 "98R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  99 [label="Estado 99\n\l 22 expres_list: expr SEMICOLON expres_list .\l"]
  99 -> "99R22" [style=solid]
 "99R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  100 [label="Estado 100\n\l 14 initialization: type IDENTIFIER ASSINGMENT . expr\l"]
  100 -> 1 [style=solid label="LITERAL_STRING"]
  100 -> 50 [style=solid label="IDENTIFIER"]
  100 -> 10 [style=solid label="LITERAL_CHAR"]
  100 -> 12 [style=solid label="LITERAL_INT"]
  100 -> 13 [style=solid label="LITERAL_FLOAT"]
  100 -> 14 [style=solid label="LITERAL_DOUBLE"]
  100 -> 15 [style=solid label="TRUE_VAL"]
  100 -> 16 [style=solid label="FALSE_VAL"]
  100 -> 17 [style=solid label="L_PARENTHESIS"]
  100 -> 122 [style=dashed label="expr"]
  100 -> 42 [style=dashed label="arit_expr"]
  100 -> 43 [style=dashed label="log_expr"]
  100 -> 44 [style=dashed label="comp_expr"]
  100 -> 45 [style=dashed label="term"]
  100 -> 46 [style=dashed label="term_num"]
  100 -> 47 [style=dashed label="log_term"]
  100 -> 48 [style=dashed label="literal_string"]
  101 [label="Estado 101\n\l 42 fun_struct: type IDENTIFIER L_PARENTHESIS . par_list R_PARENTHESIS L_KEY stm_list R_KEY\l"]
  101 -> 3 [style=solid label="INT_TYPE"]
  101 -> 4 [style=solid label="FLOAT_TYPE"]
  101 -> 5 [style=solid label="DOUBLE_TYPE"]
  101 -> 6 [style=solid label="STRING_TYPE"]
  101 -> 7 [style=solid label="BOOLEAN_TYPE"]
  101 -> 8 [style=solid label="MATRIZ_TYPE"]
  101 -> 9 [style=solid label="VOID_TYPE"]
  101 -> 11 [style=solid label="CHAR_TYPE"]
  101 -> 123 [style=dashed label="type"]
  101 -> 124 [style=dashed label="par_list"]
  101 -> 125 [style=dashed label="par_term"]
  101 -> "101R53" [style=solid]
 "101R53" [label="R53", fillcolor=3, shape=diamond, style=filled]
  102 [label="Estado 102\n\l 20 id_list: IDENTIFIER COMMA . id_list\l"]
  102 -> 126 [style=solid label="IDENTIFIER"]
  102 -> 127 [style=dashed label="id_list"]
  103 [label="Estado 103\n\l 59 arit_expr: arit_expr PLUS_OP term .\l"]
  103 -> "103R59" [style=solid]
 "103R59" [label="R59", fillcolor=3, shape=diamond, style=filled]
  104 [label="Estado 104\n\l 60 arit_expr: arit_expr SUB_OP term .\l"]
  104 -> "104R60" [style=solid]
 "104R60" [label="R60", fillcolor=3, shape=diamond, style=filled]
  105 [label="Estado 105\n\l 61 arit_expr: arit_expr DIV_OP term .\l"]
  105 -> "105R61" [style=solid]
 "105R61" [label="R61", fillcolor=3, shape=diamond, style=filled]
  106 [label="Estado 106\n\l 62 arit_expr: arit_expr STAR term .\l"]
  106 -> "106R62" [style=solid]
 "106R62" [label="R62", fillcolor=3, shape=diamond, style=filled]
  107 [label="Estado 107\n\l 63 arit_expr: arit_expr MOD_OP term .\l"]
  107 -> "107R63" [style=solid]
 "107R63" [label="R63", fillcolor=3, shape=diamond, style=filled]
  108 [label="Estado 108\n\l 58 arit_expr: L_PARENTHESIS . arit_expr R_PARENTHESIS\l"]
  108 -> 50 [style=solid label="IDENTIFIER"]
  108 -> 12 [style=solid label="LITERAL_INT"]
  108 -> 13 [style=solid label="LITERAL_FLOAT"]
  108 -> 14 [style=solid label="LITERAL_DOUBLE"]
  108 -> 15 [style=solid label="TRUE_VAL"]
  108 -> 16 [style=solid label="FALSE_VAL"]
  108 -> 108 [style=solid label="L_PARENTHESIS"]
  108 -> 128 [style=dashed label="arit_expr"]
  108 -> 45 [style=dashed label="term"]
  108 -> 46 [style=dashed label="term_num"]
  108 -> 47 [style=dashed label="log_term"]
  109 [label="Estado 109\n\l 68 log_expr: log_expr op_log comp_expr .\l 70 comp_expr: comp_expr . op_comp arit_expr\l"]
  109 -> 76 [style=solid label="GE_OP"]
  109 -> 77 [style=solid label="SE_OP"]
  109 -> 78 [style=solid label="EQ_OP"]
  109 -> 79 [style=solid label="NE_OP"]
  109 -> 80 [style=solid label="G_OP"]
  109 -> 81 [style=solid label="S_OP"]
  109 -> 82 [style=dashed label="op_comp"]
  109 -> "109R68" [style=solid]
 "109R68" [label="R68", fillcolor=3, shape=diamond, style=filled]
  110 [label="Estado 110\n\l 59 arit_expr: arit_expr . PLUS_OP term\l 60          | arit_expr . SUB_OP term\l 61          | arit_expr . DIV_OP term\l 62          | arit_expr . STAR term\l 63          | arit_expr . MOD_OP term\l 64          | arit_expr . INC_OP\l 65          | arit_expr . DEC_OP\l 70 comp_expr: comp_expr op_comp arit_expr .\l"]
  110 -> 65 [style=solid label="PLUS_OP"]
  110 -> 66 [style=solid label="SUB_OP"]
  110 -> 67 [style=solid label="DIV_OP"]
  110 -> 68 [style=solid label="STAR"]
  110 -> 69 [style=solid label="MOD_OP"]
  110 -> 70 [style=solid label="INC_OP"]
  110 -> 71 [style=solid label="DEC_OP"]
  110 -> "110R70" [style=solid]
 "110R70" [label="R70", fillcolor=3, shape=diamond, style=filled]
  111 [label="Estado 111\n\l 71 comp_expr: literal_string EQ_OP literal_string .\l"]
  111 -> "111R71" [style=solid]
 "111R71" [label="R71", fillcolor=3, shape=diamond, style=filled]
  112 [label="Estado 112\n\l 72 comp_expr: literal_string NE_OP literal_string .\l"]
  112 -> "112R72" [style=solid]
 "112R72" [label="R72", fillcolor=3, shape=diamond, style=filled]
  113 [label="Estado 113\n\l 27 if_struct: IF_STM L_PARENTHESIS log_expr R_PARENTHESIS . block else_struct\l"]
  113 -> 129 [style=solid label="L_KEY"]
  113 -> 130 [style=dashed label="block"]
  114 [label="Estado 114\n\l 41 for_struct: FOR_STM L_PARENTHESIS SEMICOLON log_expr . SEMICOLON R_PARENTHESIS L_KEY stm_list R_KEY\l 68 log_expr: log_expr . op_log comp_expr\l"]
  114 -> 72 [style=solid label="AND_OP"]
  114 -> 73 [style=solid label="OR_OP"]
  114 -> 74 [style=solid label="NOT_OP"]
  114 -> 131 [style=solid label="SEMICOLON"]
  114 -> 75 [style=dashed label="op_log"]
  115 [label="Estado 115\n\l 40 while_struct: DO_STM L_KEY stm_list R_KEY . WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS\l"]
  115 -> 132 [style=solid label="WHILE_STM"]
  116 [label="Estado 116\n\l 39 while_struct: WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS . L_KEY stm_list R_KEY\l"]
  116 -> 133 [style=solid label="L_KEY"]
  117 [label="Estado 117\n\l 33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS . L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY\l"]
  117 -> 134 [style=solid label="L_KEY"]
  118 [label="Estado 118\n\l 15 print_stm: PRINT L_PARENTHESIS literal_string R_PARENTHESIS .\l"]
  118 -> "118R15" [style=solid]
 "118R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  119 [label="Estado 119\n\l 16 print_stm: PRINT L_PARENTHESIS literal_string COMMA . id_list R_PARENTHESIS\l"]
  119 -> 126 [style=solid label="IDENTIFIER"]
  119 -> 135 [style=dashed label="id_list"]
  120 [label="Estado 120\n\l 17 print_stm: PRINTF L_PARENTHESIS literal_string R_PARENTHESIS .\l"]
  120 -> "120R17" [style=solid]
 "120R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  121 [label="Estado 121\n\l 18 print_stm: PRINTF L_PARENTHESIS literal_string COMMA . id_list R_PARENTHESIS\l"]
  121 -> 126 [style=solid label="IDENTIFIER"]
  121 -> 136 [style=dashed label="id_list"]
  122 [label="Estado 122\n\l 14 initialization: type IDENTIFIER ASSINGMENT expr .\l"]
  122 -> "122R14" [style=solid]
 "122R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  123 [label="Estado 123\n\l 56 par_term: type . IDENTIFIER\l"]
  123 -> 137 [style=solid label="IDENTIFIER"]
  124 [label="Estado 124\n\l 42 fun_struct: type IDENTIFIER L_PARENTHESIS par_list . R_PARENTHESIS L_KEY stm_list R_KEY\l"]
  124 -> 138 [style=solid label="R_PARENTHESIS"]
  125 [label="Estado 125\n\l 54 par_list: par_term .\l 55         | par_term . COMMA par_list\l"]
  125 -> 139 [style=solid label="COMMA"]
  125 -> "125R54" [style=solid]
 "125R54" [label="R54", fillcolor=3, shape=diamond, style=filled]
  126 [label="Estado 126\n\l 19 id_list: IDENTIFIER .\l 20        | IDENTIFIER . COMMA id_list\l"]
  126 -> 102 [style=solid label="COMMA"]
  126 -> "126R19" [style=solid]
 "126R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  127 [label="Estado 127\n\l 20 id_list: IDENTIFIER COMMA id_list .\l"]
  127 -> "127R20" [style=solid]
 "127R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  128 [label="Estado 128\n\l 58 arit_expr: L_PARENTHESIS arit_expr . R_PARENTHESIS\l 59          | arit_expr . PLUS_OP term\l 60          | arit_expr . SUB_OP term\l 61          | arit_expr . DIV_OP term\l 62          | arit_expr . STAR term\l 63          | arit_expr . MOD_OP term\l 64          | arit_expr . INC_OP\l 65          | arit_expr . DEC_OP\l"]
  128 -> 65 [style=solid label="PLUS_OP"]
  128 -> 66 [style=solid label="SUB_OP"]
  128 -> 67 [style=solid label="DIV_OP"]
  128 -> 68 [style=solid label="STAR"]
  128 -> 69 [style=solid label="MOD_OP"]
  128 -> 70 [style=solid label="INC_OP"]
  128 -> 71 [style=solid label="DEC_OP"]
  128 -> 86 [style=solid label="R_PARENTHESIS"]
  129 [label="Estado 129\n\l 44 block: L_KEY . $@1 stm_list R_KEY\l"]
  129 -> 140 [style=dashed label="$@1"]
  129 -> "129R43" [style=solid]
 "129R43" [label="R43", fillcolor=3, shape=diamond, style=filled]
  130 [label="Estado 130\n\l 27 if_struct: IF_STM L_PARENTHESIS log_expr R_PARENTHESIS block . else_struct\l"]
  130 -> 141 [style=solid label="ELSE_IF_STM"]
  130 -> 142 [style=dashed label="else_struct"]
  130 -> 143 [style=dashed label="elseif_list"]
  130 -> 144 [style=dashed label="elseif_struct"]
  130 -> "130R28" [style=solid]
 "130R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  130 -> "130R30" [label="[ELSE_STM]", style=solid]
 "130R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  131 [label="Estado 131\n\l 41 for_struct: FOR_STM L_PARENTHESIS SEMICOLON log_expr SEMICOLON . R_PARENTHESIS L_KEY stm_list R_KEY\l"]
  131 -> 145 [style=solid label="R_PARENTHESIS"]
  132 [label="Estado 132\n\l 40 while_struct: DO_STM L_KEY stm_list R_KEY WHILE_STM . L_PARENTHESIS log_expr R_PARENTHESIS\l"]
  132 -> 146 [style=solid label="L_PARENTHESIS"]
  133 [label="Estado 133\n\l 39 while_struct: WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS L_KEY . stm_list R_KEY\l"]
  133 -> 1 [style=solid label="LITERAL_STRING"]
  133 -> 2 [style=solid label="IDENTIFIER"]
  133 -> 3 [style=solid label="INT_TYPE"]
  133 -> 4 [style=solid label="FLOAT_TYPE"]
  133 -> 5 [style=solid label="DOUBLE_TYPE"]
  133 -> 6 [style=solid label="STRING_TYPE"]
  133 -> 7 [style=solid label="BOOLEAN_TYPE"]
  133 -> 8 [style=solid label="MATRIZ_TYPE"]
  133 -> 9 [style=solid label="VOID_TYPE"]
  133 -> 10 [style=solid label="LITERAL_CHAR"]
  133 -> 11 [style=solid label="CHAR_TYPE"]
  133 -> 12 [style=solid label="LITERAL_INT"]
  133 -> 13 [style=solid label="LITERAL_FLOAT"]
  133 -> 14 [style=solid label="LITERAL_DOUBLE"]
  133 -> 15 [style=solid label="TRUE_VAL"]
  133 -> 16 [style=solid label="FALSE_VAL"]
  133 -> 17 [style=solid label="L_PARENTHESIS"]
  133 -> 18 [style=solid label="IF_STM"]
  133 -> 19 [style=solid label="FOR_STM"]
  133 -> 20 [style=solid label="DO_STM"]
  133 -> 21 [style=solid label="WHILE_STM"]
  133 -> 22 [style=solid label="SWITCH_STM"]
  133 -> 23 [style=solid label="PRINT"]
  133 -> 24 [style=solid label="PRINTF"]
  133 -> 147 [style=dashed label="stm_list"]
  133 -> 27 [style=dashed label="stm"]
  133 -> 28 [style=dashed label="decl"]
  133 -> 29 [style=dashed label="assingment"]
  133 -> 30 [style=dashed label="initialization"]
  133 -> 31 [style=dashed label="print_stm"]
  133 -> 32 [style=dashed label="expres_list"]
  133 -> 33 [style=dashed label="expr"]
  133 -> 34 [style=dashed label="cond_stm"]
  133 -> 35 [style=dashed label="if_struct"]
  133 -> 36 [style=dashed label="switch_struct"]
  133 -> 37 [style=dashed label="loop_stm"]
  133 -> 38 [style=dashed label="while_struct"]
  133 -> 39 [style=dashed label="for_struct"]
  133 -> 40 [style=dashed label="fun_struct"]
  133 -> 41 [style=dashed label="type"]
  133 -> 42 [style=dashed label="arit_expr"]
  133 -> 43 [style=dashed label="log_expr"]
  133 -> 44 [style=dashed label="comp_expr"]
  133 -> 45 [style=dashed label="term"]
  133 -> 46 [style=dashed label="term_num"]
  133 -> 47 [style=dashed label="log_term"]
  133 -> 48 [style=dashed label="literal_string"]
  134 [label="Estado 134\n\l 33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY . case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY\l"]
  134 -> 148 [style=solid label="CASE"]
  134 -> 149 [style=dashed label="case_list_switch"]
  134 -> 150 [style=dashed label="case_switch"]
  134 -> "134R34" [style=solid]
 "134R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  135 [label="Estado 135\n\l 16 print_stm: PRINT L_PARENTHESIS literal_string COMMA id_list . R_PARENTHESIS\l"]
  135 -> 151 [style=solid label="R_PARENTHESIS"]
  136 [label="Estado 136\n\l 18 print_stm: PRINTF L_PARENTHESIS literal_string COMMA id_list . R_PARENTHESIS\l"]
  136 -> 152 [style=solid label="R_PARENTHESIS"]
  137 [label="Estado 137\n\l 56 par_term: type IDENTIFIER .\l"]
  137 -> "137R56" [style=solid]
 "137R56" [label="R56", fillcolor=3, shape=diamond, style=filled]
  138 [label="Estado 138\n\l 42 fun_struct: type IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS . L_KEY stm_list R_KEY\l"]
  138 -> 153 [style=solid label="L_KEY"]
  139 [label="Estado 139\n\l 55 par_list: par_term COMMA . par_list\l"]
  139 -> 3 [style=solid label="INT_TYPE"]
  139 -> 4 [style=solid label="FLOAT_TYPE"]
  139 -> 5 [style=solid label="DOUBLE_TYPE"]
  139 -> 6 [style=solid label="STRING_TYPE"]
  139 -> 7 [style=solid label="BOOLEAN_TYPE"]
  139 -> 8 [style=solid label="MATRIZ_TYPE"]
  139 -> 9 [style=solid label="VOID_TYPE"]
  139 -> 11 [style=solid label="CHAR_TYPE"]
  139 -> 123 [style=dashed label="type"]
  139 -> 154 [style=dashed label="par_list"]
  139 -> 125 [style=dashed label="par_term"]
  139 -> "139R53" [style=solid]
 "139R53" [label="R53", fillcolor=3, shape=diamond, style=filled]
  140 [label="Estado 140\n\l 44 block: L_KEY $@1 . stm_list R_KEY\l"]
  140 -> 1 [style=solid label="LITERAL_STRING"]
  140 -> 2 [style=solid label="IDENTIFIER"]
  140 -> 3 [style=solid label="INT_TYPE"]
  140 -> 4 [style=solid label="FLOAT_TYPE"]
  140 -> 5 [style=solid label="DOUBLE_TYPE"]
  140 -> 6 [style=solid label="STRING_TYPE"]
  140 -> 7 [style=solid label="BOOLEAN_TYPE"]
  140 -> 8 [style=solid label="MATRIZ_TYPE"]
  140 -> 9 [style=solid label="VOID_TYPE"]
  140 -> 10 [style=solid label="LITERAL_CHAR"]
  140 -> 11 [style=solid label="CHAR_TYPE"]
  140 -> 12 [style=solid label="LITERAL_INT"]
  140 -> 13 [style=solid label="LITERAL_FLOAT"]
  140 -> 14 [style=solid label="LITERAL_DOUBLE"]
  140 -> 15 [style=solid label="TRUE_VAL"]
  140 -> 16 [style=solid label="FALSE_VAL"]
  140 -> 17 [style=solid label="L_PARENTHESIS"]
  140 -> 18 [style=solid label="IF_STM"]
  140 -> 19 [style=solid label="FOR_STM"]
  140 -> 20 [style=solid label="DO_STM"]
  140 -> 21 [style=solid label="WHILE_STM"]
  140 -> 22 [style=solid label="SWITCH_STM"]
  140 -> 23 [style=solid label="PRINT"]
  140 -> 24 [style=solid label="PRINTF"]
  140 -> 155 [style=dashed label="stm_list"]
  140 -> 27 [style=dashed label="stm"]
  140 -> 28 [style=dashed label="decl"]
  140 -> 29 [style=dashed label="assingment"]
  140 -> 30 [style=dashed label="initialization"]
  140 -> 31 [style=dashed label="print_stm"]
  140 -> 32 [style=dashed label="expres_list"]
  140 -> 33 [style=dashed label="expr"]
  140 -> 34 [style=dashed label="cond_stm"]
  140 -> 35 [style=dashed label="if_struct"]
  140 -> 36 [style=dashed label="switch_struct"]
  140 -> 37 [style=dashed label="loop_stm"]
  140 -> 38 [style=dashed label="while_struct"]
  140 -> 39 [style=dashed label="for_struct"]
  140 -> 40 [style=dashed label="fun_struct"]
  140 -> 41 [style=dashed label="type"]
  140 -> 42 [style=dashed label="arit_expr"]
  140 -> 43 [style=dashed label="log_expr"]
  140 -> 44 [style=dashed label="comp_expr"]
  140 -> 45 [style=dashed label="term"]
  140 -> 46 [style=dashed label="term_num"]
  140 -> 47 [style=dashed label="log_term"]
  140 -> 48 [style=dashed label="literal_string"]
  141 [label="Estado 141\n\l 32 elseif_struct: ELSE_IF_STM . L_PARENTHESIS log_expr R_PARENTHESIS block\l"]
  141 -> 156 [style=solid label="L_PARENTHESIS"]
  142 [label="Estado 142\n\l 27 if_struct: IF_STM L_PARENTHESIS log_expr R_PARENTHESIS block else_struct .\l"]
  142 -> "142R27" [style=solid]
 "142R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  143 [label="Estado 143\n\l 29 else_struct: elseif_list . ELSE_STM block\l"]
  143 -> 157 [style=solid label="ELSE_STM"]
  144 [label="Estado 144\n\l 31 elseif_list: elseif_struct . elseif_list\l"]
  144 -> 141 [style=solid label="ELSE_IF_STM"]
  144 -> 158 [style=dashed label="elseif_list"]
  144 -> 144 [style=dashed label="elseif_struct"]
  144 -> "144R30" [style=solid]
 "144R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  145 [label="Estado 145\n\l 41 for_struct: FOR_STM L_PARENTHESIS SEMICOLON log_expr SEMICOLON R_PARENTHESIS . L_KEY stm_list R_KEY\l"]
  145 -> 159 [style=solid label="L_KEY"]
  146 [label="Estado 146\n\l 40 while_struct: DO_STM L_KEY stm_list R_KEY WHILE_STM L_PARENTHESIS . log_expr R_PARENTHESIS\l"]
  146 -> 1 [style=solid label="LITERAL_STRING"]
  146 -> 50 [style=solid label="IDENTIFIER"]
  146 -> 10 [style=solid label="LITERAL_CHAR"]
  146 -> 12 [style=solid label="LITERAL_INT"]
  146 -> 13 [style=solid label="LITERAL_FLOAT"]
  146 -> 14 [style=solid label="LITERAL_DOUBLE"]
  146 -> 15 [style=solid label="TRUE_VAL"]
  146 -> 16 [style=solid label="FALSE_VAL"]
  146 -> 17 [style=solid label="L_PARENTHESIS"]
  146 -> 88 [style=dashed label="arit_expr"]
  146 -> 160 [style=dashed label="log_expr"]
  146 -> 44 [style=dashed label="comp_expr"]
  146 -> 45 [style=dashed label="term"]
  146 -> 46 [style=dashed label="term_num"]
  146 -> 47 [style=dashed label="log_term"]
  146 -> 48 [style=dashed label="literal_string"]
  147 [label="Estado 147\n\l 39 while_struct: WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS L_KEY stm_list . R_KEY\l"]
  147 -> 161 [style=solid label="R_KEY"]
  148 [label="Estado 148\n\l 36 case_switch: CASE . literal_term DOUBLE_DOT stm_list BREAK SEMICOLON\l"]
  148 -> 1 [style=solid label="LITERAL_STRING"]
  148 -> 50 [style=solid label="IDENTIFIER"]
  148 -> 10 [style=solid label="LITERAL_CHAR"]
  148 -> 12 [style=solid label="LITERAL_INT"]
  148 -> 13 [style=solid label="LITERAL_FLOAT"]
  148 -> 14 [style=solid label="LITERAL_DOUBLE"]
  148 -> 15 [style=solid label="TRUE_VAL"]
  148 -> 16 [style=solid label="FALSE_VAL"]
  148 -> 93 [style=dashed label="term"]
  148 -> 46 [style=dashed label="term_num"]
  148 -> 47 [style=dashed label="log_term"]
  148 -> 162 [style=dashed label="literal_term"]
  148 -> 95 [style=dashed label="literal_string"]
  149 [label="Estado 149\n\l 33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch . DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY\l"]
  149 -> 163 [style=solid label="DEFAULT"]
  150 [label="Estado 150\n\l 35 case_list_switch: case_switch . case_list_switch\l"]
  150 -> 148 [style=solid label="CASE"]
  150 -> 164 [style=dashed label="case_list_switch"]
  150 -> 150 [style=dashed label="case_switch"]
  150 -> "150R34" [style=solid]
 "150R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  151 [label="Estado 151\n\l 16 print_stm: PRINT L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS .\l"]
  151 -> "151R16" [style=solid]
 "151R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  152 [label="Estado 152\n\l 18 print_stm: PRINTF L_PARENTHESIS literal_string COMMA id_list R_PARENTHESIS .\l"]
  152 -> "152R18" [style=solid]
 "152R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  153 [label="Estado 153\n\l 42 fun_struct: type IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS L_KEY . stm_list R_KEY\l"]
  153 -> 1 [style=solid label="LITERAL_STRING"]
  153 -> 2 [style=solid label="IDENTIFIER"]
  153 -> 3 [style=solid label="INT_TYPE"]
  153 -> 4 [style=solid label="FLOAT_TYPE"]
  153 -> 5 [style=solid label="DOUBLE_TYPE"]
  153 -> 6 [style=solid label="STRING_TYPE"]
  153 -> 7 [style=solid label="BOOLEAN_TYPE"]
  153 -> 8 [style=solid label="MATRIZ_TYPE"]
  153 -> 9 [style=solid label="VOID_TYPE"]
  153 -> 10 [style=solid label="LITERAL_CHAR"]
  153 -> 11 [style=solid label="CHAR_TYPE"]
  153 -> 12 [style=solid label="LITERAL_INT"]
  153 -> 13 [style=solid label="LITERAL_FLOAT"]
  153 -> 14 [style=solid label="LITERAL_DOUBLE"]
  153 -> 15 [style=solid label="TRUE_VAL"]
  153 -> 16 [style=solid label="FALSE_VAL"]
  153 -> 17 [style=solid label="L_PARENTHESIS"]
  153 -> 18 [style=solid label="IF_STM"]
  153 -> 19 [style=solid label="FOR_STM"]
  153 -> 20 [style=solid label="DO_STM"]
  153 -> 21 [style=solid label="WHILE_STM"]
  153 -> 22 [style=solid label="SWITCH_STM"]
  153 -> 23 [style=solid label="PRINT"]
  153 -> 24 [style=solid label="PRINTF"]
  153 -> 165 [style=dashed label="stm_list"]
  153 -> 27 [style=dashed label="stm"]
  153 -> 28 [style=dashed label="decl"]
  153 -> 29 [style=dashed label="assingment"]
  153 -> 30 [style=dashed label="initialization"]
  153 -> 31 [style=dashed label="print_stm"]
  153 -> 32 [style=dashed label="expres_list"]
  153 -> 33 [style=dashed label="expr"]
  153 -> 34 [style=dashed label="cond_stm"]
  153 -> 35 [style=dashed label="if_struct"]
  153 -> 36 [style=dashed label="switch_struct"]
  153 -> 37 [style=dashed label="loop_stm"]
  153 -> 38 [style=dashed label="while_struct"]
  153 -> 39 [style=dashed label="for_struct"]
  153 -> 40 [style=dashed label="fun_struct"]
  153 -> 41 [style=dashed label="type"]
  153 -> 42 [style=dashed label="arit_expr"]
  153 -> 43 [style=dashed label="log_expr"]
  153 -> 44 [style=dashed label="comp_expr"]
  153 -> 45 [style=dashed label="term"]
  153 -> 46 [style=dashed label="term_num"]
  153 -> 47 [style=dashed label="log_term"]
  153 -> 48 [style=dashed label="literal_string"]
  154 [label="Estado 154\n\l 55 par_list: par_term COMMA par_list .\l"]
  154 -> "154R55" [style=solid]
 "154R55" [label="R55", fillcolor=3, shape=diamond, style=filled]
  155 [label="Estado 155\n\l 44 block: L_KEY $@1 stm_list . R_KEY\l"]
  155 -> 166 [style=solid label="R_KEY"]
  156 [label="Estado 156\n\l 32 elseif_struct: ELSE_IF_STM L_PARENTHESIS . log_expr R_PARENTHESIS block\l"]
  156 -> 1 [style=solid label="LITERAL_STRING"]
  156 -> 50 [style=solid label="IDENTIFIER"]
  156 -> 10 [style=solid label="LITERAL_CHAR"]
  156 -> 12 [style=solid label="LITERAL_INT"]
  156 -> 13 [style=solid label="LITERAL_FLOAT"]
  156 -> 14 [style=solid label="LITERAL_DOUBLE"]
  156 -> 15 [style=solid label="TRUE_VAL"]
  156 -> 16 [style=solid label="FALSE_VAL"]
  156 -> 17 [style=solid label="L_PARENTHESIS"]
  156 -> 88 [style=dashed label="arit_expr"]
  156 -> 167 [style=dashed label="log_expr"]
  156 -> 44 [style=dashed label="comp_expr"]
  156 -> 45 [style=dashed label="term"]
  156 -> 46 [style=dashed label="term_num"]
  156 -> 47 [style=dashed label="log_term"]
  156 -> 48 [style=dashed label="literal_string"]
  157 [label="Estado 157\n\l 29 else_struct: elseif_list ELSE_STM . block\l"]
  157 -> 129 [style=solid label="L_KEY"]
  157 -> 168 [style=dashed label="block"]
  158 [label="Estado 158\n\l 31 elseif_list: elseif_struct elseif_list .\l"]
  158 -> "158R31" [style=solid]
 "158R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  159 [label="Estado 159\n\l 41 for_struct: FOR_STM L_PARENTHESIS SEMICOLON log_expr SEMICOLON R_PARENTHESIS L_KEY . stm_list R_KEY\l"]
  159 -> 1 [style=solid label="LITERAL_STRING"]
  159 -> 2 [style=solid label="IDENTIFIER"]
  159 -> 3 [style=solid label="INT_TYPE"]
  159 -> 4 [style=solid label="FLOAT_TYPE"]
  159 -> 5 [style=solid label="DOUBLE_TYPE"]
  159 -> 6 [style=solid label="STRING_TYPE"]
  159 -> 7 [style=solid label="BOOLEAN_TYPE"]
  159 -> 8 [style=solid label="MATRIZ_TYPE"]
  159 -> 9 [style=solid label="VOID_TYPE"]
  159 -> 10 [style=solid label="LITERAL_CHAR"]
  159 -> 11 [style=solid label="CHAR_TYPE"]
  159 -> 12 [style=solid label="LITERAL_INT"]
  159 -> 13 [style=solid label="LITERAL_FLOAT"]
  159 -> 14 [style=solid label="LITERAL_DOUBLE"]
  159 -> 15 [style=solid label="TRUE_VAL"]
  159 -> 16 [style=solid label="FALSE_VAL"]
  159 -> 17 [style=solid label="L_PARENTHESIS"]
  159 -> 18 [style=solid label="IF_STM"]
  159 -> 19 [style=solid label="FOR_STM"]
  159 -> 20 [style=solid label="DO_STM"]
  159 -> 21 [style=solid label="WHILE_STM"]
  159 -> 22 [style=solid label="SWITCH_STM"]
  159 -> 23 [style=solid label="PRINT"]
  159 -> 24 [style=solid label="PRINTF"]
  159 -> 169 [style=dashed label="stm_list"]
  159 -> 27 [style=dashed label="stm"]
  159 -> 28 [style=dashed label="decl"]
  159 -> 29 [style=dashed label="assingment"]
  159 -> 30 [style=dashed label="initialization"]
  159 -> 31 [style=dashed label="print_stm"]
  159 -> 32 [style=dashed label="expres_list"]
  159 -> 33 [style=dashed label="expr"]
  159 -> 34 [style=dashed label="cond_stm"]
  159 -> 35 [style=dashed label="if_struct"]
  159 -> 36 [style=dashed label="switch_struct"]
  159 -> 37 [style=dashed label="loop_stm"]
  159 -> 38 [style=dashed label="while_struct"]
  159 -> 39 [style=dashed label="for_struct"]
  159 -> 40 [style=dashed label="fun_struct"]
  159 -> 41 [style=dashed label="type"]
  159 -> 42 [style=dashed label="arit_expr"]
  159 -> 43 [style=dashed label="log_expr"]
  159 -> 44 [style=dashed label="comp_expr"]
  159 -> 45 [style=dashed label="term"]
  159 -> 46 [style=dashed label="term_num"]
  159 -> 47 [style=dashed label="log_term"]
  159 -> 48 [style=dashed label="literal_string"]
  160 [label="Estado 160\n\l 40 while_struct: DO_STM L_KEY stm_list R_KEY WHILE_STM L_PARENTHESIS log_expr . R_PARENTHESIS\l 68 log_expr: log_expr . op_log comp_expr\l"]
  160 -> 72 [style=solid label="AND_OP"]
  160 -> 73 [style=solid label="OR_OP"]
  160 -> 74 [style=solid label="NOT_OP"]
  160 -> 170 [style=solid label="R_PARENTHESIS"]
  160 -> 75 [style=dashed label="op_log"]
  161 [label="Estado 161\n\l 39 while_struct: WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS L_KEY stm_list R_KEY .\l"]
  161 -> "161R39" [style=solid]
 "161R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  162 [label="Estado 162\n\l 36 case_switch: CASE literal_term . DOUBLE_DOT stm_list BREAK SEMICOLON\l"]
  162 -> 171 [style=solid label="DOUBLE_DOT"]
  163 [label="Estado 163\n\l 33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT . DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY\l"]
  163 -> 172 [style=solid label="DOUBLE_DOT"]
  164 [label="Estado 164\n\l 35 case_list_switch: case_switch case_list_switch .\l"]
  164 -> "164R35" [style=solid]
 "164R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
  165 [label="Estado 165\n\l 42 fun_struct: type IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS L_KEY stm_list . R_KEY\l"]
  165 -> 173 [style=solid label="R_KEY"]
  166 [label="Estado 166\n\l 44 block: L_KEY $@1 stm_list R_KEY .\l"]
  166 -> "166R44" [style=solid]
 "166R44" [label="R44", fillcolor=3, shape=diamond, style=filled]
  167 [label="Estado 167\n\l 32 elseif_struct: ELSE_IF_STM L_PARENTHESIS log_expr . R_PARENTHESIS block\l 68 log_expr: log_expr . op_log comp_expr\l"]
  167 -> 72 [style=solid label="AND_OP"]
  167 -> 73 [style=solid label="OR_OP"]
  167 -> 74 [style=solid label="NOT_OP"]
  167 -> 174 [style=solid label="R_PARENTHESIS"]
  167 -> 75 [style=dashed label="op_log"]
  168 [label="Estado 168\n\l 29 else_struct: elseif_list ELSE_STM block .\l"]
  168 -> "168R29" [style=solid]
 "168R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  169 [label="Estado 169\n\l 41 for_struct: FOR_STM L_PARENTHESIS SEMICOLON log_expr SEMICOLON R_PARENTHESIS L_KEY stm_list . R_KEY\l"]
  169 -> 175 [style=solid label="R_KEY"]
  170 [label="Estado 170\n\l 40 while_struct: DO_STM L_KEY stm_list R_KEY WHILE_STM L_PARENTHESIS log_expr R_PARENTHESIS .\l"]
  170 -> "170R40" [style=solid]
 "170R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  171 [label="Estado 171\n\l 36 case_switch: CASE literal_term DOUBLE_DOT . stm_list BREAK SEMICOLON\l"]
  171 -> 1 [style=solid label="LITERAL_STRING"]
  171 -> 2 [style=solid label="IDENTIFIER"]
  171 -> 3 [style=solid label="INT_TYPE"]
  171 -> 4 [style=solid label="FLOAT_TYPE"]
  171 -> 5 [style=solid label="DOUBLE_TYPE"]
  171 -> 6 [style=solid label="STRING_TYPE"]
  171 -> 7 [style=solid label="BOOLEAN_TYPE"]
  171 -> 8 [style=solid label="MATRIZ_TYPE"]
  171 -> 9 [style=solid label="VOID_TYPE"]
  171 -> 10 [style=solid label="LITERAL_CHAR"]
  171 -> 11 [style=solid label="CHAR_TYPE"]
  171 -> 12 [style=solid label="LITERAL_INT"]
  171 -> 13 [style=solid label="LITERAL_FLOAT"]
  171 -> 14 [style=solid label="LITERAL_DOUBLE"]
  171 -> 15 [style=solid label="TRUE_VAL"]
  171 -> 16 [style=solid label="FALSE_VAL"]
  171 -> 17 [style=solid label="L_PARENTHESIS"]
  171 -> 18 [style=solid label="IF_STM"]
  171 -> 19 [style=solid label="FOR_STM"]
  171 -> 20 [style=solid label="DO_STM"]
  171 -> 21 [style=solid label="WHILE_STM"]
  171 -> 22 [style=solid label="SWITCH_STM"]
  171 -> 23 [style=solid label="PRINT"]
  171 -> 24 [style=solid label="PRINTF"]
  171 -> 176 [style=dashed label="stm_list"]
  171 -> 27 [style=dashed label="stm"]
  171 -> 28 [style=dashed label="decl"]
  171 -> 29 [style=dashed label="assingment"]
  171 -> 30 [style=dashed label="initialization"]
  171 -> 31 [style=dashed label="print_stm"]
  171 -> 32 [style=dashed label="expres_list"]
  171 -> 33 [style=dashed label="expr"]
  171 -> 34 [style=dashed label="cond_stm"]
  171 -> 35 [style=dashed label="if_struct"]
  171 -> 36 [style=dashed label="switch_struct"]
  171 -> 37 [style=dashed label="loop_stm"]
  171 -> 38 [style=dashed label="while_struct"]
  171 -> 39 [style=dashed label="for_struct"]
  171 -> 40 [style=dashed label="fun_struct"]
  171 -> 41 [style=dashed label="type"]
  171 -> 42 [style=dashed label="arit_expr"]
  171 -> 43 [style=dashed label="log_expr"]
  171 -> 44 [style=dashed label="comp_expr"]
  171 -> 45 [style=dashed label="term"]
  171 -> 46 [style=dashed label="term_num"]
  171 -> 47 [style=dashed label="log_term"]
  171 -> 48 [style=dashed label="literal_string"]
  172 [label="Estado 172\n\l 33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT . stm_list BREAK SEMICOLON R_KEY\l"]
  172 -> 1 [style=solid label="LITERAL_STRING"]
  172 -> 2 [style=solid label="IDENTIFIER"]
  172 -> 3 [style=solid label="INT_TYPE"]
  172 -> 4 [style=solid label="FLOAT_TYPE"]
  172 -> 5 [style=solid label="DOUBLE_TYPE"]
  172 -> 6 [style=solid label="STRING_TYPE"]
  172 -> 7 [style=solid label="BOOLEAN_TYPE"]
  172 -> 8 [style=solid label="MATRIZ_TYPE"]
  172 -> 9 [style=solid label="VOID_TYPE"]
  172 -> 10 [style=solid label="LITERAL_CHAR"]
  172 -> 11 [style=solid label="CHAR_TYPE"]
  172 -> 12 [style=solid label="LITERAL_INT"]
  172 -> 13 [style=solid label="LITERAL_FLOAT"]
  172 -> 14 [style=solid label="LITERAL_DOUBLE"]
  172 -> 15 [style=solid label="TRUE_VAL"]
  172 -> 16 [style=solid label="FALSE_VAL"]
  172 -> 17 [style=solid label="L_PARENTHESIS"]
  172 -> 18 [style=solid label="IF_STM"]
  172 -> 19 [style=solid label="FOR_STM"]
  172 -> 20 [style=solid label="DO_STM"]
  172 -> 21 [style=solid label="WHILE_STM"]
  172 -> 22 [style=solid label="SWITCH_STM"]
  172 -> 23 [style=solid label="PRINT"]
  172 -> 24 [style=solid label="PRINTF"]
  172 -> 177 [style=dashed label="stm_list"]
  172 -> 27 [style=dashed label="stm"]
  172 -> 28 [style=dashed label="decl"]
  172 -> 29 [style=dashed label="assingment"]
  172 -> 30 [style=dashed label="initialization"]
  172 -> 31 [style=dashed label="print_stm"]
  172 -> 32 [style=dashed label="expres_list"]
  172 -> 33 [style=dashed label="expr"]
  172 -> 34 [style=dashed label="cond_stm"]
  172 -> 35 [style=dashed label="if_struct"]
  172 -> 36 [style=dashed label="switch_struct"]
  172 -> 37 [style=dashed label="loop_stm"]
  172 -> 38 [style=dashed label="while_struct"]
  172 -> 39 [style=dashed label="for_struct"]
  172 -> 40 [style=dashed label="fun_struct"]
  172 -> 41 [style=dashed label="type"]
  172 -> 42 [style=dashed label="arit_expr"]
  172 -> 43 [style=dashed label="log_expr"]
  172 -> 44 [style=dashed label="comp_expr"]
  172 -> 45 [style=dashed label="term"]
  172 -> 46 [style=dashed label="term_num"]
  172 -> 47 [style=dashed label="log_term"]
  172 -> 48 [style=dashed label="literal_string"]
  173 [label="Estado 173\n\l 42 fun_struct: type IDENTIFIER L_PARENTHESIS par_list R_PARENTHESIS L_KEY stm_list R_KEY .\l"]
  173 -> "173R42" [style=solid]
 "173R42" [label="R42", fillcolor=3, shape=diamond, style=filled]
  174 [label="Estado 174\n\l 32 elseif_struct: ELSE_IF_STM L_PARENTHESIS log_expr R_PARENTHESIS . block\l"]
  174 -> 129 [style=solid label="L_KEY"]
  174 -> 178 [style=dashed label="block"]
  175 [label="Estado 175\n\l 41 for_struct: FOR_STM L_PARENTHESIS SEMICOLON log_expr SEMICOLON R_PARENTHESIS L_KEY stm_list R_KEY .\l"]
  175 -> "175R41" [style=solid]
 "175R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  176 [label="Estado 176\n\l 36 case_switch: CASE literal_term DOUBLE_DOT stm_list . BREAK SEMICOLON\l"]
  176 -> 179 [style=solid label="BREAK"]
  177 [label="Estado 177\n\l 33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list . BREAK SEMICOLON R_KEY\l"]
  177 -> 180 [style=solid label="BREAK"]
  178 [label="Estado 178\n\l 32 elseif_struct: ELSE_IF_STM L_PARENTHESIS log_expr R_PARENTHESIS block .\l"]
  178 -> "178R32" [style=solid]
 "178R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  179 [label="Estado 179\n\l 36 case_switch: CASE literal_term DOUBLE_DOT stm_list BREAK . SEMICOLON\l"]
  179 -> 181 [style=solid label="SEMICOLON"]
  180 [label="Estado 180\n\l 33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK . SEMICOLON R_KEY\l"]
  180 -> 182 [style=solid label="SEMICOLON"]
  181 [label="Estado 181\n\l 36 case_switch: CASE literal_term DOUBLE_DOT stm_list BREAK SEMICOLON .\l"]
  181 -> "181R36" [style=solid]
 "181R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  182 [label="Estado 182\n\l 33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON . R_KEY\l"]
  182 -> 183 [style=solid label="R_KEY"]
  183 [label="Estado 183\n\l 33 switch_struct: SWITCH_STM L_PARENTHESIS literal_term R_PARENTHESIS L_KEY case_list_switch DEFAULT DOUBLE_DOT stm_list BREAK SEMICOLON R_KEY .\l"]
  183 -> "183R33" [style=solid]
 "183R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
}
